{"version":3,"sources":["webpack://sp-react-utils/./node_modules/@pnp/common/collections.js","webpack://sp-react-utils/./node_modules/@pnp/common/index.js","webpack://sp-react-utils/./node_modules/@pnp/common/libconfig.js","webpack://sp-react-utils/./node_modules/@pnp/common/net.js","webpack://sp-react-utils/./node_modules/@pnp/common/node_modules/tslib/tslib.es6.js","webpack://sp-react-utils/./node_modules/@pnp/common/safe-global.js","webpack://sp-react-utils/./node_modules/@pnp/common/spfxcontextinterface.js","webpack://sp-react-utils/./node_modules/@pnp/common/storage.js","webpack://sp-react-utils/./node_modules/@pnp/common/util.js","webpack://sp-react-utils/./node_modules/@pnp/logging/index.js","webpack://sp-react-utils/./node_modules/@pnp/logging/listeners.js","webpack://sp-react-utils/./node_modules/@pnp/logging/logger.js","webpack://sp-react-utils/./node_modules/@pnp/odata/add-prop.js","webpack://sp-react-utils/./node_modules/@pnp/odata/batch.js","webpack://sp-react-utils/./node_modules/@pnp/odata/caching.js","webpack://sp-react-utils/./node_modules/@pnp/odata/index.js","webpack://sp-react-utils/./node_modules/@pnp/odata/invokable-binder.js","webpack://sp-react-utils/./node_modules/@pnp/odata/invokable-extensions.js","webpack://sp-react-utils/./node_modules/@pnp/odata/node_modules/tslib/tslib.es6.js","webpack://sp-react-utils/./node_modules/@pnp/odata/parsers.js","webpack://sp-react-utils/./node_modules/@pnp/odata/pipeline-binder.js","webpack://sp-react-utils/./node_modules/@pnp/odata/pipeline.js","webpack://sp-react-utils/./node_modules/@pnp/odata/queryable.js","webpack://sp-react-utils/./node_modules/@pnp/odata/request-builders.js","webpack://sp-react-utils/./node_modules/@pnp/sp/batch.js","webpack://sp-react-utils/./node_modules/@pnp/sp/decorators.js","webpack://sp-react-utils/./node_modules/@pnp/sp/lists/index.js","webpack://sp-react-utils/./node_modules/@pnp/sp/lists/types.js","webpack://sp-react-utils/./node_modules/@pnp/sp/lists/web.js","webpack://sp-react-utils/./node_modules/@pnp/sp/node_modules/tslib/tslib.es6.js","webpack://sp-react-utils/./node_modules/@pnp/sp/odata.js","webpack://sp-react-utils/./node_modules/@pnp/sp/operations.js","webpack://sp-react-utils/./node_modules/@pnp/sp/rest.js","webpack://sp-react-utils/./node_modules/@pnp/sp/sharepointqueryable.js","webpack://sp-react-utils/./node_modules/@pnp/sp/sites/index.js","webpack://sp-react-utils/./node_modules/@pnp/sp/sites/types.js","webpack://sp-react-utils/./node_modules/@pnp/sp/sphttpclient.js","webpack://sp-react-utils/./node_modules/@pnp/sp/splibconfig.js","webpack://sp-react-utils/./node_modules/@pnp/sp/telemetry.js","webpack://sp-react-utils/./node_modules/@pnp/sp/utils/escapeQueryStrValue.js","webpack://sp-react-utils/./node_modules/@pnp/sp/utils/extractweburl.js","webpack://sp-react-utils/./node_modules/@pnp/sp/utils/metadata.js","webpack://sp-react-utils/./node_modules/@pnp/sp/utils/toResourcePath.js","webpack://sp-react-utils/./node_modules/@pnp/sp/utils/toabsoluteurl.js","webpack://sp-react-utils/./node_modules/@pnp/sp/webs/index.js","webpack://sp-react-utils/./node_modules/@pnp/sp/webs/types.js","webpack://sp-react-utils/./node_modules/object-assign/index.js","webpack://sp-react-utils/./node_modules/prop-types/checkPropTypes.js","webpack://sp-react-utils/./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack://sp-react-utils/./node_modules/react/cjs/react.development.js","webpack://sp-react-utils/./node_modules/react/index.js","webpack://sp-react-utils/./src/useListItems/index.tsx","webpack://sp-react-utils/./src/useListItems/useListItems.core.tsx","webpack://sp-react-utils/./src/useListItems/useListItems.hoc.tsx","webpack://sp-react-utils/./src/useListItems/useListItems.hook.tsx","webpack://sp-react-utils/webpack/bootstrap","webpack://sp-react-utils/webpack/runtime/define property getters","webpack://sp-react-utils/webpack/runtime/hasOwnProperty shorthand","webpack://sp-react-utils/webpack/runtime/make namespace object","webpack://sp-react-utils/webpack/startup"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAyD;AACzD;AACA;AACA;AACA,sBAAsB,gDAAM;AAC5B;AACA;AACA;AACA;AACA;AACO;AACP,QAAQ,8DAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA,8CAA8C,qBAAqB;AACnE;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,uC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCiC;AACF;AACN;AACiB;AACb;AACH;AACO;AACjC,iC;;;;;;;;;;;;;;;;;;ACP0D;AACnD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,0DAAS,UAAU,4DAAW;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,qC;;;;;;;;;;;;;;;;;;;;;;;ACvEkC;AACuB;AACX;AACvC;AACP,QAAQ,8DAAoB;AAC5B,sCAAsC,kBAAkB;AACxD;AACA;AACA,SAAS;AACT;AACA;AACO;AACP,QAAQ,8DAAoB;AAC5B,wBAAwB,gDAAM,qBAAqB;AACnD,iBAAiB,gDAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,cAAc,WAAW,IAAI,WAAW;AACxC;AACA;AACA;AACA;AACO;AACP;AACA,eAAe,6DAAgB;AAC/B;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,+CAA+C,WAAW;AAC1D;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT,eAAe,gDAAS;AACxB,kDAAkD,eAAe;AACjE;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,0BAA0B,gDAAS;AACnC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gDAAS;AACxB;AACA;AACA,SAAS;AACT;AACA;AACA,+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,8EAA8E;AACvG;AACA;;AAEO;AACP;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;;AAEO;AACP;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA,4DAA4D,cAAc;AAC1E;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;;AAEO;AACP,mCAAmC,oCAAoC;AACvE;;AAEO;AACP;AACA;;AAEO;AACP,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;;AAEO;AACP,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;;AAEO;AACP;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;;AAEM;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM,gBAAgB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;;AAEA;AACO;AACP,4BAA4B,sBAAsB;AAClD;AACA;AACA;;AAEA;AACO;AACP,iDAAiD,QAAQ;AACzD,wCAAwC,QAAQ;AAChD,wDAAwD,QAAQ;AAChE;AACA;AACA;;AAEO;AACP,oDAAoD,QAAQ;AAC5D;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA,iBAAiB,sFAAsF,aAAa,EAAE;AACtH,sBAAsB,gCAAgC,qCAAqC,0CAA0C,EAAE,EAAE,GAAG;AAC5I,2BAA2B,MAAM,eAAe,EAAE,YAAY,oBAAoB,EAAE;AACpF,sBAAsB,oGAAoG;AAC1H,6BAA6B,uBAAuB;AACpD,4BAA4B,wBAAwB;AACpD,2BAA2B,yDAAyD;AACpF;;AAEO;AACP;AACA,iBAAiB,4CAA4C,SAAS,EAAE,qDAAqD,aAAa,EAAE;AAC5I,yBAAyB,6BAA6B,oBAAoB,gDAAgD,gBAAgB,EAAE,KAAK;AACjJ;;AAEO;AACP;AACA;AACA,2GAA2G,sFAAsF,aAAa,EAAE;AAChN,sBAAsB,8BAA8B,gDAAgD,uDAAuD,EAAE,EAAE,GAAG;AAClK,4CAA4C,sCAAsC,UAAU,oBAAoB,EAAE,EAAE,UAAU;AAC9H;;AAEO;AACP,gCAAgC,uCAAuC,aAAa,EAAE,EAAE,OAAO,kBAAkB;AACjH;AACA;;AAEA;AACA,yCAAyC,6BAA6B;AACtE,CAAC;AACD;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP,4CAA4C;AAC5C;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC5OA;AACO;AACP,uC;;;;;;;;;;;ACFU;AACV,gD;;;;;;;;;;;;;;;;;;ACDkC;AAC6C;AAC/B;AAChD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,6DAAkB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,8DAAoB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gDAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,gDAAS;AACxB;AACA;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,6DAAkB;AACnD;AACA;AACA;AACA,qBAAqB,iDAAO;AAC5B;AACA,eAAe,6CAAG,EAAE,uCAAuC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAc,qCAAqC,6DAAkB;AAC5F,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,+BAA+B,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,GAAG;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;;;;;;;;AC9M4B;AACG;AAC/B,iC;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,EAAE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iCAAiC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,wDAAwD;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iCAAiC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B;AAC7B,kC;;;;;;;;;;;;;;AC/GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,oC;;;;;;;;;;;;;;;ACjBsC;AAC/B;AACP,2BAA2B,oDAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;;;;AC1F+C;AAC/C,oBAAoB,yDAAgB;AAC7B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChC2B;AACE;AACC;AACQ;AACD;AACR;AACC;AACC;AACO;AAC0G;AAChJ,iC;;;;;;;;;;;;;;;;ACV6C;AAC0C;AACvF;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,YAAY,2DAAkB;AAC9B;AACA;AACA;AACA,6BAA6B,gFAAsB;AACnD;AACA,2BAA2B,4EAAkB;AAC7C,iBAAiB;AACjB;AACA,2BAA2B,4EAAkB;AAC7C,iBAAiB;AACjB;AACA,2BAA2B,4EAAkB;AAC7C,iBAAiB;AACjB;AACA,2BAA2B,4EAAkB;AAC7C,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACO;AACP;AACA,CAAC;AACD,4C;;;;;;;;;;;;;;;;;;;;;;ACpC8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,mBAAmB,oDAAO;AAC1B,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA,gBAAgB,mDAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,GAAG;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9HA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,8EAA8E;AACvG;AACA;;AAEO;AACP;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;;AAEO;AACP;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA,4DAA4D,cAAc;AAC1E;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;;AAEO;AACP,mCAAmC,oCAAoC;AACvE;;AAEO;AACP;AACA;;AAEO;AACP,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;;AAEO;AACP,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;;AAEO;AACP;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;;AAEM;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM,gBAAgB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;;AAEA;AACO;AACP,4BAA4B,sBAAsB;AAClD;AACA;AACA;;AAEA;AACO;AACP,iDAAiD,QAAQ;AACzD,wCAAwC,QAAQ;AAChD,wDAAwD,QAAQ;AAChE;AACA;AACA;;AAEO;AACP,oDAAoD,QAAQ;AAC5D;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA,iBAAiB,sFAAsF,aAAa,EAAE;AACtH,sBAAsB,gCAAgC,qCAAqC,0CAA0C,EAAE,EAAE,GAAG;AAC5I,2BAA2B,MAAM,eAAe,EAAE,YAAY,oBAAoB,EAAE;AACpF,sBAAsB,oGAAoG;AAC1H,6BAA6B,uBAAuB;AACpD,4BAA4B,wBAAwB;AACpD,2BAA2B,yDAAyD;AACpF;;AAEO;AACP;AACA,iBAAiB,4CAA4C,SAAS,EAAE,qDAAqD,aAAa,EAAE;AAC5I,yBAAyB,6BAA6B,oBAAoB,gDAAgD,gBAAgB,EAAE,KAAK;AACjJ;;AAEO;AACP;AACA;AACA,2GAA2G,sFAAsF,aAAa,EAAE;AAChN,sBAAsB,8BAA8B,gDAAgD,uDAAuD,EAAE,EAAE,GAAG;AAClK,4CAA4C,sCAAsC,UAAU,oBAAoB,EAAE,EAAE,UAAU;AAC9H;;AAEO;AACP,gCAAgC,uCAAuC,aAAa,EAAE,EAAE,OAAO,kBAAkB;AACjH;AACA;;AAEA;AACA,yCAAyC,6BAA6B;AACtE,CAAC;AACD;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP,4CAA4C;AAC5C;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC5OkC;AACQ;AACnC;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,sFAAsF;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gDAAG;AACf,gBAAgB,gDAAG;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gDAAG;AACpB;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA,YAAY,mDAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gDAAS;AACxB;AACA,yFAAyF,SAAS,IAAI,aAAa,OAAO,EAAE;AAC5H,SAAS;AACT;AACA;AACA,mC;;;;;;;;;;;;;;;;;;;ACzG2C;AACiB;AACR;AACK;AACzD;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kDAAI,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iEAAoB;AACnD;AACA;AACA;AACA,gCAAgC,oDAAW;AAC3C;AACA;AACA,+BAA+B,oDAAO;AACtC;AACA;AACA,iBAAiB,EAAE,iEAAkB;AACrC;AACA;AACA;AACA;AACO,6CAA6C,gEAAkB;AACtE,2C;;;;;;;;;;;;;;;;;;;;;;ACtCmC;AACe;AACZ;AAC8B;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,oDAAU;AACd,cAAc,+DAAqB,0CAA0C;AAC7E;AACA,qBAAqB,kBAAkB,KAAK,uBAAuB;AACnE,KAAK;AACL;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,QAAQ,sDAAY,KAAK,kBAAkB,KAAK,uBAAuB;AACvE;AACA;AACA;AACA,QAAQ,sDAAY;AACpB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,iDAAiD,gDAAG;AACpD,gBAAgB,sDAAY,KAAK,kBAAkB,KAAK,uBAAuB,qCAAqC,YAAY;AAChI;AACA;AACA;AACA,YAAY,sDAAY,KAAK,kBAAkB,KAAK,uBAAuB,oCAAoC,YAAY;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,YAAY,oDAAU;AACtB,sBAAsB,+DAAqB,sBAAsB;AACjE;AACA,6BAA6B,kBAAkB,KAAK,uBAAuB,cAAc,eAAe,YAAY,YAAY;AAChI,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sDAAY,KAAK,kBAAkB,KAAK,uBAAuB;AAC/E,uCAAuC,uDAAc;AACrD;AACA,mCAAmC,mDAAM;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oDAAU;AAClC,kCAAkC,+DAAqB,sBAAsB;AAC7E;AACA,yCAAyC,kBAAkB,KAAK,uBAAuB;AACvF,yBAAyB;AACzB;AACA,4BAA4B,mDAAM;AAClC;AACA;AACA;AACA,4BAA4B,gDAAG;AAC/B;AACA;AACA;AACA;AACA;AACA,gBAAgB,sDAAY,KAAK,kBAAkB,KAAK,uBAAuB;AAC/E;AACA;AACA,qCAAqC,6DAAoB;AACzD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mDAAM;AAC1B;AACA;AACA,gBAAgB,sDAAY,KAAK,kBAAkB,KAAK,uBAAuB,8BAA8B,sBAAsB;AACnI;AACA;AACA;AACA;AACA,gBAAgB,sDAAY,KAAK,kBAAkB,KAAK,uBAAuB;AAC/E;AACA;AACA,6BAA6B,mDAAM,sBAAsB,GAAG,yBAAyB;AACrF;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oDAAU;AAC1B,0BAA0B,+DAAqB,sBAAsB;AACrE;AACA,iCAAiC,kBAAkB,KAAK,uBAAuB,IAAI,eAAe,kCAAkC,sBAAsB;AAC1J,iBAAiB;AACjB;AACA;AACA,gBAAgB,oDAAU;AAC1B,0BAA0B,+DAAqB,sBAAsB;AACrE;AACA,iCAAiC,kBAAkB,KAAK,uBAAuB,eAAe,eAAe;AAC7G,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA,iDAAU;AACV;AACA;AACA,iDAAU;AACV;AACA;AACA,iDAAU;AACV;AACA;AACA,iDAAU;AACV;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;;;;;;AC5M0I;AAC/F;AACpC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACO;AACP,6BAA6B;AAC7B,qCAAqC;AACrC;AACA,uBAAuB;AACvB;AACA,wBAAwB,oDAAW;AACnC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,mBAAmB,uDAAc;AACjC;AACA;AACA;AACA;AACA;AACA,+BAA+B,gDAAO;AACtC;AACA;AACA;AACA,0CAA0C,gDAAO,CAAC,8DAAqB,UAAU,gDAAO;AACxF,mCAAmC,iEAAoB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,yDAAY;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,yDAAY;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gEAAmB;AACvC;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,4BAA4B,oDAAO;AACnC;AACA;AACA,uCAAuC,mDAAM;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oDAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,iEAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,iEAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iEAAoB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,mBAAmB,mDAAM;AACzB;AACA;AACA,SAAS;AACT,sCAAsC;AACtC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;;;;AC9PkC;AAC3B;AACP,0BAA0B,OAAO,gDAAG,KAAK;AACzC;AACA;AACO;AACP,0BAA0B,aAAa;AACvC;AACA,4C;;;;;;;;;;;;;;;;;;;;ACRkC;AACmB;AAC4C;AAC3D;AACW;AACQ;AACzD;AACA;AACA;AACO,sBAAsB,6CAAK;AAClC,+BAA+B,uDAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA2F,yCAAyC;AACpI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gDAAS;AACxB,YAAY,sDAAY,KAAK,aAAa,KAAK,uBAAuB,yBAAyB,qBAAqB;AACpH;AACA;AACA;AACA,gBAAgB,sDAAY;AAC5B;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA,6CAA6C,sEAAa;AAC1D;AACA;AACA;AACA,2BAA2B,0BAA0B;AACrD;AACA;AACA;AACA;AACA,sDAAsD,mBAAmB;AACzE;AACA;AACA,8CAA8C,aAAa;AAC3D;AACA;AACA;AACA;AACA,6CAA6C,oDAAO;AACpD,kDAAkD,aAAa;AAC/D,sEAAsE,uBAAuB,mBAAmB;AAChH;AACA,kDAAkD,mBAAmB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,0DAAa,8BAA8B,oDAAO;AAC9E,gBAAgB,sDAAY,KAAK,aAAa,KAAK,uBAAuB,mBAAmB,eAAe,GAAG,IAAI;AACnH;AACA;AACA;AACA,wBAAwB,gDAAG,wBAAwB,gDAAG;AACtD;AACA;AACA;AACA,sCAAsC,OAAO,GAAG,IAAI;AACpD,kEAAkE,cAAc;AAChF;AACA;AACA,sCAAsC,eAAe,GAAG,IAAI;AAC5D;AACA;AACA,gBAAgB,yDAAY;AAC5B;AACA;AACA,oBAAoB,yDAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,cAAc;AACnF;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,KAAK,IAAI,MAAM;AACrD,iBAAiB;AACjB;AACA;AACA,sCAAsC,qBAAqB;AAC3D;AACA;AACA;AACA;AACA,8CAA8C,mBAAmB;AACjE;AACA;AACA,sCAAsC,aAAa;AACnD;AACA;AACA;AACA,qDAAqD,kBAAkB,aAAa;AACpF,iBAAiB;AACjB;AACA;AACA,YAAY,sDAAY,KAAK,aAAa,KAAK,uBAAuB;AACtE,qDAAqD,oDAAO;AAC5D;AACA;AACA;AACA,6BAA6B,6DAAqB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sDAAY,KAAK,aAAa,KAAK,uBAAuB;AACtE;AACA;AACA,yEAAyE,gDAAS;AAClF;AACA,gBAAgB,sDAAY,KAAK,WAAW,KAAK,uBAAuB,+BAA+B,aAAa;AACpH;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,iC;;;;;;;;;;;;;;ACvMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;;;;;;;;ACrBkB;AAC4D;AAC9E,iC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACF8C;AACoC;AACvC;AAC2J;AAC3J;AACK;AACD;AACL;AAC4B;AAChC;AACsB;AAC5D,kCAAkC,mFAA8B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wDAAa,wBAAwB,GAAG;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wDAAa,2BAA2B,kFAAmB,QAAQ;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAA6F;AAC7F,eAAe,iDAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE,4DAAQ;AACvB,+BAA+B,sDAAM,OAAO,gDAAI;AAChD,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gGAAgG;AAChG,eAAe,iDAAS;AACxB;AACA;AACA;AACA,wCAAwC,mDAAM,sBAAsB,2EAA2E;AAC/I;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,wBAAwB;AACxB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,iDAAS;AACxB,+BAA+B,sDAAM;AACrC,wBAAwB,uDAAY;AACpC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,iDAAS;AACxB,+BAA+B,sDAAM;AACrC,wBAAwB,uDAAY;AACpC,SAAS;AACT;AACA;AACA,kDAAU;AACV,IAAI,kDAAG;AACP;AACA,kDAAU;AACV,IAAI,kDAAG;AACP;AACA,kDAAU;AACV,IAAI,kDAAG;AACP;AACA,kDAAU;AACV,IAAI,kDAAG;AACP;AACA,SAAS,kDAAU;AACnB,IAAI,2DAAW;AACf;AACkB;AACX,cAAc,2EAAkB;AAChC,oBAAoB,iFAA4B;AACvD;AACA;AACA,sBAAsB,2EAAkB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wDAAa,CAAC,4EAAmB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wDAAa,CAAC,sFAA6B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wDAAa,CAAC,4EAAmB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wDAAa,CAAC,4EAAmB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iDAAS;AACxB,6BAA6B,gDAAI,CAAC,mDAAM,CAAC,4DAAQ,0BAA0B,mDAAO;AAClF;AACA;AACA,aAAa;AACb,+BAA+B,sDAAM;AACrC,yBAAyB,gDAAG,4EAA4E,iBAAiB;AACzH;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,sDAAM,iCAAiC,gDAAI,EAAE,QAAQ,mDAAM,CAAC,4DAAQ,4BAA4B;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,sDAAM,uBAAuB,gDAAI,EAAE,QAAQ,mDAAM,CAAC,4DAAQ,0BAA0B;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,eAAe,sDAAM,IAAI,gDAAI,EAAE,UAAU,mDAAM,CAAC,4DAAQ,mCAAmC;AAC3F;AACA;AACA;AACA;AACA;AACA,eAAe,iDAAS;AACxB,+BAA+B,sDAAM;AACrC,mBAAmB,gDAAG;AACtB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iDAAS;AACxB;AACA,wCAAwC,QAAQ;AAChD,+BAA+B,sDAAM;AACrC;AACA,8BAA8B,gDAAG;AACjC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gDAAG,iCAAiC,oDAAO;AACvD;AACA;AACA,2BAA2B,aAAa,mDAAM,CAAC,4DAAQ;AACvD,YAAY,iEAAoB;AAChC,0BAA0B,mDAAM,eAAe,qBAAqB,mDAAM,CAAC,4DAAQ,0DAA0D;AAC7I;AACA;AACA;AACA;AACA;AACA,eAAe,sDAAM,QAAQ,gDAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iDAAS;AACxB,+BAA+B,sDAAM,+CAA+C,OAAO,YAAY,OAAO,WAAW,KAAK;AAC9H;AACA,8BAA8B,gDAAG;AACjC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,iDAAS;AACxB,+BAA+B,sDAAM;AACrC,mBAAmB,gDAAG;AACtB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oDAAO;AAC/B,yCAAyC,aAAa;AACtD;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,gGAAgG;AAChG;AACA;AACA;AACA;AACA,eAAe,iDAAS;AACxB;AACA,4BAA4B,wEAAc;AAC1C;AACA,gBAAgB,iEAAoB;AACpC;AACA,wCAAwC,wEAAc;AACtD;AACA;AACA;AACA;AACA;AACA,8BAA8B,sDAAM,uDAAuD,gDAAI;AAC/F;AACA;AACA;AACA,oCAAoC,mDAAM,CAAC,4DAAQ;AACnD,aAAa;AACb,mBAAmB,gDAAG;AACtB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,iDAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,kDAAU;AACV,IAAI,kDAAG;AACP;AACA,kDAAU;AACV,IAAI,kDAAG;AACP;AACA,kDAAU;AACV,IAAI,kDAAG;AACP;AACA,kDAAU;AACV,IAAI,kDAAG;AACP;AACA,kDAAU;AACV,IAAI,kDAAG;AACP;AACA,kDAAU;AACV,IAAI,kDAAG;AACP;AACA,kDAAU;AACV,IAAI,kDAAG;AACP;AACA,kDAAU;AACV,IAAI,kDAAG;AACP;AACA,kDAAU;AACV,IAAI,kDAAG;AACP;AACA,kDAAU;AACV,IAAI,kDAAG;AACP;AACA,kDAAU;AACV,IAAI,kDAAG;AACP;AACO,aAAa,2EAAkB;AACtC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sDAAsD;AACvD;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,CAAC,kCAAkC;AACnC,iC;;;;;;;;;;;;;;;;;;ACxYkC;AACG;AACQ;AACJ;AACE;AAC+B;AACJ;AACtE,mDAAO,CAAC,gDAAI,WAAW,4CAAK;AAC5B,mDAAO,CAAC,gDAAI,sBAAsB,2CAAI;AACtC,mDAAO,CAAC,gDAAI,4BAA4B,2CAAI;AAC5C,mDAAO,CAAC,gDAAI,yBAAyB,kFAA6B;AAClE,kEAAsB;AACtB,WAAW,+CAAI,mBAAmB,kFAAmB,kBAAkB;AACvE;AACA,qEAAyB;AACzB,WAAW,gDAAS;AACpB,sCAAsC,+CAAG,gBAAgB,KAAK;AAC9D,eAAe,+CAAI,CAAC,uDAAY;AAChC,KAAK;AACL;AACA,+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,8EAA8E;AACvG;AACA;;AAEO;AACP;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;;AAEO;AACP;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA,4DAA4D,cAAc;AAC1E;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;;AAEO;AACP,mCAAmC,oCAAoC;AACvE;;AAEO;AACP;AACA;;AAEO;AACP,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;;AAEO;AACP,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;;AAEO;AACP;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;;AAEM;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM,gBAAgB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;;AAEA;AACO;AACP,4BAA4B,sBAAsB;AAClD;AACA;AACA;;AAEA;AACO;AACP,iDAAiD,QAAQ;AACzD,wCAAwC,QAAQ;AAChD,wDAAwD,QAAQ;AAChE;AACA;AACA;;AAEO;AACP,oDAAoD,QAAQ;AAC5D;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA,iBAAiB,sFAAsF,aAAa,EAAE;AACtH,sBAAsB,gCAAgC,qCAAqC,0CAA0C,EAAE,EAAE,GAAG;AAC5I,2BAA2B,MAAM,eAAe,EAAE,YAAY,oBAAoB,EAAE;AACpF,sBAAsB,oGAAoG;AAC1H,6BAA6B,uBAAuB;AACpD,4BAA4B,wBAAwB;AACpD,2BAA2B,yDAAyD;AACpF;;AAEO;AACP;AACA,iBAAiB,4CAA4C,SAAS,EAAE,qDAAqD,aAAa,EAAE;AAC5I,yBAAyB,6BAA6B,oBAAoB,gDAAgD,gBAAgB,EAAE,KAAK;AACjJ;;AAEO;AACP;AACA;AACA,2GAA2G,sFAAsF,aAAa,EAAE;AAChN,sBAAsB,8BAA8B,gDAAgD,uDAAuD,EAAE,EAAE,GAAG;AAClK,4CAA4C,sCAAsC,UAAU,oBAAoB,EAAE,EAAE,UAAU;AAC9H;;AAEO;AACP,gCAAgC,uCAAuC,aAAa,EAAE,EAAE,OAAO,kBAAkB;AACjH;AACA;;AAEA;AACA,yCAAyC,6BAA6B;AACtE,CAAC;AACD;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP,4CAA4C;AAC5C;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC5OkE;AAC5B;AACG;AACgB;AAClD;AACP;AACA;AACA,QAAQ,gDAAG;AACX;AACA,YAAY,gDAAG;AACf;AACA;AACA,iBAAiB,gDAAG;AACpB;AACA;AACA;AACA;AACA;AACA,YAAY,gDAAG,qBAAqB,gDAAG;AACvC;AACA;AACA;AACA,6BAA6B,0DAAa;AAC1C,uBAAuB,sEAAa;AACpC;AACA,iBAAiB,gDAAG;AACpB;AACA;AACA,iBAAiB,gDAAG;AACpB;AACA;AACA;AACA;AACA;AACA,QAAQ,sDAAY;AACpB;AACA;AACA,WAAW,oDAAO;AAClB;AACA,sCAAsC,mDAAW;AACjD;AACA;AACA;AACA;AACA;AACA,mBAAmB,mDAAM;AACzB;AACA;AACA;AACA;AACA;AACA,mBAAmB,mDAAM;AACzB,SAAS;AACT;AACA;AACA,2CAA2C,mDAAW;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mDAAM;AAC7B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mDAAM;AAC7B,aAAa;AACb,SAAS;AACT;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA,iC;;;;;;;;;;;;;;;;;;;;;;;;;ACjFkC;AAC8C;AAC/B;AACwB;AAChB;AAClD;AACP,wBAAwB,mDAAM;AAC9B;AACA,8CAA8C,0DAAY;AAC1D;AACA;AACA;AACA,eAAe,gDAAS;AACxB;AACA;AACA,8BAA8B,iEAAqB;AACnD,yBAAyB,8DAAkB;AAC3C,oCAAoC,iEAAoB;AACxD;AACA;AACA,8BAA8B,sEAAa;AAC3C,YAAY,yDAAY;AACxB,6CAA6C;AAC7C;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACA;AACA;AACA;AACP,+BAA+B,mDAAO,EAAE,4BAA4B;AACpE;AACA;AACO;AACP,+BAA+B,mDAAO,EAAE,8CAA8C;AACtF;AACA;AACA,sC;;;;;;;;;;;;;;;;;;ACvDkC;AACoB;AACF;AACpD;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,4BAA4B,uDAAc;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sDAAM;AAClB;AACA,aAAa;AACb;AACA;AACA,YAAY,sDAAM;AAClB;AACA;AACA;AACA,eAAe,gDAAS;AACxB;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,2BAA2B;AAC3B,aAAa,YAAY;AACzB,mBAAmB,wCAAwC;AAC3D,8CAA8C,gDAAO,CAAC,8DAAqB,UAAU,gDAAO;AAC5F;AACA;AACA,SAAS;AACT;AACA;AACA,yBAAyB,yEAAyE;AAClG;AACA;AACO;AACP,gC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/DkE;AACT;AACnB;AACS;AACiC;AAC3C;AAC9B;AACP,WAAW,4DAAgB;AAC3B;AACA;AACA;AACA;AACA;AACO,mCAAmC,iDAAS;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,0DAAa;AAC7B;AACA,sBAAsB,oDAAO;AAC7B;AACA;AACA;AACA;AACA;AACA,uBAAuB,oDAAO;AAC9B,sBAAsB,oDAAO;AAC7B;AACA;AACA;AACA;AACA;AACA,sBAAsB,oDAAO;AAC7B;AACA;AACA;AACA;AACA,kBAAkB,oDAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sDAAY,2CAA2C,MAAM,aAAa,UAAU,UAAU,MAAM;AAChH,6CAA6C,MAAM;AACnD;AACA,SAAS;AACT;AACA;AACA,sBAAsB,KAAK,EAAE,kEAAkE;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qDAAK;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,6BAA6B;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qDAAK;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,4BAA4B,GAAG,2BAA2B;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sDAAM,CAAC,wDAAa,UAAU,KAAK;AAC7D,kBAAkB,gDAAG,CAAC,mDAAM,CAAC,4DAAQ;AACrC;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA,eAAe,4DAAY,CAAC,wDAAa,UAAU,EAAE;AACrD;AACA;AACO;AACP;AACA,eAAe,gEAAgB,CAAC,wDAAa,UAAU,EAAE,aAAa;AACtE;AACA;AACA,+C;;;;;;;;;;;;;;;;ACzOoC;AACF;AACC;AACnC,uBAAuB,sDAAgB;AACvC;AACA;AACA;AACA,sCAAsC,4BAA4B;AAClE,mBAAmB,+CAAI;AACvB,SAAS;AACT,KAAK;AACL,CAAC;AACD,iC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZ8C;AACoE;AACnE;AACR;AACG;AACR;AACS;AACD;AACJ;AACgC;AAChC;AACU;AACU;AACZ;AAC9C,gCAAgC,iFAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA,eAAe,wDAAa,CAAC,mDAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,gDAAI,EAAE,UAAU,mDAAM,CAAC,6DAAQ,4BAA4B;AACpF,eAAe,sDAAM,YAAY,+CAAG;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iDAAS;AACxB,+BAA+B,sDAAM,kCAAkC,MAAM;AAC7E;AACA;AACA,qBAAqB,mDAAG,CAAC,uEAAa,CAAC,uDAAY;AACnD;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iDAAS;AACxB;AACA,mBAAmB,wDAAa,CAAC,mDAAG;AACpC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,iDAAS;AACxB,sBAAsB,wDAAa;AACnC,+BAA+B,sDAAM;AACrC,gBAAgB,gDAAG;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,8CAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iDAAS;AACxB;AACA,sBAAsB,wDAAa;AACnC,kBAAkB,sDAAM,IAAI,gDAAI,EAAE,kBAAkB;AACpD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iDAAS;AACxB,sBAAsB,wDAAa,CAAC,4EAAmB;AACvD,kCAAkC,kFAAmB,iBAAiB;AACtE;AACA,mBAAmB,gDAAG;AACtB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iDAAS;AACxB,sBAAsB,wDAAa,CAAC,4EAAmB;AACvD,kCAAkC,kFAAmB,kBAAkB;AACvE;AACA,mBAAmB,gDAAG;AACtB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iDAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,iDAAS;AACxB;AACA,sCAAsC;AACtC;AACA;AACA,2BAA2B,uDAAS;AACpC;AACA;AACA,8BAA8B,uDAAS;AACvC;AACA,wCAAwC,uDAAS;AACjD,aAAa;AACb,6BAA6B,gDAAI;AACjC,2BAA2B,mDAAM,CAAC,6DAAQ;AAC1C,aAAa;AACb,mBAAmB,sDAAM,MAAM,uEAAa;AAC5C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iDAAS;AACxB,6BAA6B,gDAAI,EAAE,MAAM;AACzC,gCAAgC,sDAAM,MAAM,uEAAa;AACzD;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iDAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,iDAAS;AACxB;AACA,sCAAsC;AACtC;AACA;AACA,2BAA2B,uDAAS;AACpC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,OAAO,gBAAgB,YAAY;AACzF,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,0HAA0H,eAAe;AACzI;AACA,mBAAmB,sDAAM,MAAM,uEAAa,yDAAyD,gDAAI;AACzG,SAAS;AACT;AACA;AACA,kDAAU;AACV,IAAI,kDAAG;AACP;AACA,kDAAU;AACV,IAAI,kDAAG;AACP;AACA,QAAQ,kDAAU;AAClB,IAAI,2DAAW;AACf;AACiB;AACV,aAAa,2EAAkB;AACtC,iC;;;;;;;;;;;;;;;;;;;ACpPkC;AAC6E;AACtD;AACpB;AACI;AAClC;AACP;AACA;AACA;AACA,+BAA+B,gDAAO;AACtC;AACA;AACA;AACA,kEAAkE,gDAAO,aAAa,uDAAc;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,eAAe,gDAAS;AACxB,uBAAuB,mDAAM,WAAW,gDAAgD;AACxF;AACA;AACA,YAAY,yDAAY;AACxB;AACA,YAAY,yDAAY;AACxB;AACA;AACA;AACA;AACA;AACA,iEAAiE,cAAc;AAC/E;AACA;AACA,mCAAmC,2DAAgB;AACnD,mDAAmD,WAAW;AAC9D;AACA;AACA;AACA;AACA;AACA,mBAAmB,mDAAM,QAAQ,mBAAmB;AACpD;AACA;AACA,uDAAuD,sEAAa;AACpE;AACA;AACA;AACA,SAAS;AACT;AACA,8BAA8B;AAC9B;AACA;AACA,QAAQ,yDAAY;AACpB,kBAAkB,mDAAM,WAAW,sBAAsB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,eAAe,mCAAmC,gBAAgB,IAAI,oBAAoB;AACxJ;AACA;AACA,kDAAkD,MAAM;AACxD,+BAA+B,2DAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,yBAAyB;AACzB,qBAAqB,mDAAM,WAAW,gBAAgB;AACtD;AACA;AACA,0BAA0B;AAC1B,qBAAqB,mDAAM,WAAW,iBAAiB;AACvD;AACA;AACA,2BAA2B;AAC3B,qBAAqB,mDAAM,WAAW,kBAAkB;AACxD;AACA;AACA,4BAA4B;AAC5B,qBAAqB,mDAAM,WAAW,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gDAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oDAAO;AAC3B;AACA,wCAAwC;AACxC,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,qBAAqB,mDAAM;AAC3B;AACA,SAAS;AACT,kCAAkC,mDAAW;AAC7C;AACA,wBAAwB,oDAAO;AAC/B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,wC;;;;;;;;;;;;;;;;AClK4E;AACrE;AACP,4DAAe;AACf;AACA,mCAAmC;AACnC,sCAAsC,oDAAW;AACjD,KAAK;AACL,oBAAoB,aAAa;AACjC,CAAC;AACM,iCAAiC,uDAAc;AACtD;AACA;AACA,uC;;;;;;;;;;;;;;;;;ACZkC;AACgB;AACb;AACrC;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gDAAS;AAC5B,+BAA+B,mDAAO,EAAE,2BAA2B;AACnE;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gEAAmB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mDAAO,EAAE,2BAA2B;AAC3D;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;;;;ACzCkD;AACZ;AAC/B;AACP,QAAQ,gEAAmB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sDAAY,2CAA2C,MAAM,aAAa,UAAU,UAAU,EAAE;AAC5G,uBAAuB,UAAU,IAAI,2CAA2C;AAChF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,+C;;;;;;;;;;;;;;;ACnBkD;AAC3C;AACP,QAAQ,gEAAmB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yC;;;;;;;;;;;;;;ACfO;AACP;AACA,uBAAuB,eAAe;AACtC;AACA;AACA,oC;;;;;;;;;;;;;;ACLO;AACP;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA,0C;;;;;;;;;;;;;;;;ACNkC;AACyE;AAC3G;AACA;AACA;AACA;AACA;AACA;AACO,+CAA+C,uDAAc;AACpE;AACA,WAAW,gDAAS;AACpB,YAAY,0DAAa;AACzB;AACA;AACA;AACA;AACA;AACA,aAAa,gEAAmB;AAChC;AACA,mBAAmB,oDAAO;AAC1B;AACA;AACA;AACA;AACA,mBAAmB,oDAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gDAAG;AACnB,uBAAuB,oDAAO;AAC9B;AACA;AACA,YAAY,sEAA6B;AACzC;AACA,gBAAgB,gDAAG,CAAC,sEAA6B;AACjD,uBAAuB,oDAAO,CAAC,qFAA4C;AAC3E;AACA,qBAAqB,gDAAG,CAAC,sEAA6B;AACtD,uBAAuB,oDAAO,CAAC,2FAAkD;AACjF;AACA;AACA;AACA,YAAY,4DAAmB;AAC/B,6BAA6B,qEAA4B;AACzD;AACA;AACA;AACA,2BAA2B,oDAAO;AAClC;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA,yC;;;;;;;;;;;;;;;;;AC1DiC;AACG;AACI;AACxC,uBAAuB,sDAAgB;AACvC;AACA;AACA;AACA,sCAAsC,4BAA4B;AAClE,mBAAmB,8CAAG;AACtB,SAAS;AACT,KAAK;AACL,CAAC;AACD,kEAA4B;AAC5B;AACA;AACA,iC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACf8C;AACT;AACM;AAC2J;AACvJ;AACJ;AACL;AACU;AACP;AACQ;AACqB;AAChC;AACtC,gCAAgC,mFAA8B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iDAAS;AACxB,6BAA6B,gDAAI;AACjC,8BAA8B,mDAAM,CAAC,4DAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,+BAA+B,sDAAM;AACrC;AACA;AACA,yBAAyB,uDAAY;AACrC;AACA,SAAS;AACT;AACA;AACA,kDAAU;AACV,IAAI,mDAAG;AACP;AACA,QAAQ,kDAAU;AAClB,IAAI,2DAAW;AACf;AACiB;AACV,aAAa,2EAAkB;AACtC;AACA;AACA;AACA;AACA,8BAA8B,iFAA4B;AAC1D;AACA;AACA,sBAAsB,mEAAU;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yDAAa,YAAY,gFAA2B;AACnE;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yDAAa,CAAC,sFAA6B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iDAAS;AACxB,mBAAmB,YAAY,SAAS,qDAAK;AAC7C,0FAA0F,qDAAI;AAC9F,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iDAAS;AACxB,6BAA6B,gDAAI,CAAC,mDAAM,CAAC,4DAAQ,yBAAyB,mDAAO,EAAE,2BAA2B;AAC9G,+BAA+B,sDAAM;AACrC,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,gDAAI;AAC7B;AACA;AACA;AACA;AACA,SAAS;AACT,eAAe,sDAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,kFAAmB,WAAW;AAChE,eAAe,sDAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,gDAAI,EAAE,UAAU,mDAAM,CAAC,4DAAQ,4BAA4B;AACpF,eAAe,sDAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qDAAK,wCAAwC,kFAAmB,WAAW,aAAa,kFAAmB,SAAS,UAAU,KAAK;AAClJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qDAAK,sCAAsC,kFAAmB,MAAM;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,sDAAM,sCAAsC,gDAAI;AAC/D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,sDAAM,yCAAyC,kFAAmB,MAAM;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,kFAA6B,yDAAyD,mBAAmB,wBAAwB,qBAAqB;AACnL,eAAe,yDAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8CAAO;AAC1B;AACA;AACA;AACA;AACA;AACA,uFAAuF;AACvF;AACA;AACA,sDAAsD,SAAS,2BAA2B,qBAAqB;AAC/G,eAAe,yDAAa,CAAC,sFAA6B;AAC1D;AACA;AACA,kDAAU;AACV,IAAI,mDAAG;AACP;AACA,kDAAU;AACV,IAAI,mDAAG;AACP;AACA,kDAAU;AACV,IAAI,mDAAG;AACP;AACA,kDAAU;AACV,IAAI,mDAAG;AACP;AACA,kDAAU;AACV,IAAI,mDAAG;AACP;AACA,kDAAU;AACV,IAAI,mDAAG;AACP;AACA,kDAAU;AACV,IAAI,mDAAG;AACP;AACA,kDAAU;AACV,IAAI,mDAAG;AACP;AACA,kDAAU;AACV,IAAI,mDAAG;AACP;AACA,OAAO,kDAAU;AACjB,IAAI,2DAAW;AACf;AACgB;AACT,YAAY,2EAAkB;AACrC,iC;;;;;;;;;;AChPA;AACA;AACA;AACA;AACA;;AAEa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH,kCAAkC;AAClC;AACA;AACA;;AAEA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gBAAgB,sBAAsB;AACtC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;ACzFA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;;AAEA,IAAI,IAAqC;AACzC,6BAA6B,mBAAO,CAAC,yFAA4B;AACjE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB;AACA;AACA;AACA,MAAM,IAAqC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4GAA4G;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,IAAqC;AAC3C;AACA;AACA;;AAEA;;;;;;;;;;;ACrGA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;;AAEA;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;;;AAIb,IAAI,IAAqC;AACzC;AACA;;AAEA,cAAc,mBAAO,CAAC,4DAAe;AACrC,qBAAqB,mBAAO,CAAC,8EAA2B;;AAExD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA,KAAK;;;AAGL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,0FAA0F,aAAa;AACvG;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8FAA8F,eAAe;AAC7G;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK,EAAE;;AAEP,iDAAiD;AACjD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,8MAA8M;;AAE9M;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,aAAa,WAAW;AACxB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB,aAAa,OAAO;AACpB,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB,aAAa,OAAO;AACpB,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,yBAAyB;;AAEzB,0BAA0B;AAC1B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA,WAAW,UAAU;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;;AAEA;AACA,mDAAmD;;AAEnD;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,cAAc;AACzB,WAAW,EAAE;AACb,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK,EAAE;;AAEP;AACA;AACA;AACA;AACA;AACA,KAAK,EAAE;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;;AAEf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oEAAoE;;AAEpE;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA,mBAAmB,oBAAoB;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;;AAGH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe;;AAEf,wBAAwB,iBAAiB;;;AAGzC;AACA,wBAAwB;;AAExB,2BAA2B;AAC3B;AACA;;AAEA,+BAA+B;;AAE/B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA,mBAAmB,oBAAoB;AACvC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,GAAG;AACd;AACA,YAAY,QAAQ;AACpB;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;;AAEvB;;AAEA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,sIAAsI,yCAAyC;AAC/K;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,UAAU;AACrB,WAAW,GAAG;AACd,YAAY,QAAQ;AACpB;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,iBAAiB;AAC5B,WAAW,EAAE;AACb;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,iBAAiB;AAC5B,WAAW,EAAE;AACb,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,aAAa;AACzB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK,EAAE;;AAEP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA,yCAAyC;;AAEzC;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA,mCAAmC;;AAEnC;AACA;AACA,WAAW;AACX;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;;AAGL;AACA,yCAAyC;AACzC;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,EAAE;AACb;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,0DAA0D;AAC1D;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,EAAE;AACb;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,iBAAiB;AACpC;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB;;;AAGA;AACA;AACA;AACA;;AAEA,mBAAmB,iBAAiB;AACpC;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qDAAqD;AACrD;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;AAGA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,sBAAsB;AACvC;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,uCAAuC;AACvC;AACA,0CAA0C;AAC1C;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB,iBAAiB;AACjB,gBAAgB;AAChB,gBAAgB;AAChB,qBAAqB;AACrB,kBAAkB;AAClB,gBAAgB;AAChB,0DAA0D;AAC1D,oBAAoB;AACpB,qBAAqB;AACrB,qBAAqB;AACrB,qBAAqB;AACrB,iBAAiB;AACjB,kBAAkB;AAClB,sBAAsB;AACtB,YAAY;AACZ,YAAY;AACZ,mBAAmB;AACnB,kBAAkB;AAClB,qBAAqB;AACrB,iBAAiB;AACjB,2BAA2B;AAC3B,uBAAuB;AACvB,eAAe;AACf,kBAAkB;AAClB,cAAc;AACd,gBAAgB;AAChB,eAAe;AACf,GAAG;AACH;;;;;;;;;;;ACv3Da;;AAEb,IAAI,KAAqC,EAAE,EAE1C;AACD,EAAE,uHAAsD;AACxD;;;;;;;;;;;;;;;;;;;;;;;ACNA,kHAAoC;AACpC,gHAAmC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACEnC,IAAM,YAAY,GAAG,2IAQb,CAAC;AAET,IAAM,OAAO,GAAG,UAAC,GAAW,IAAK,UAAG,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,EAAtB,CAAsB,CAAC;AAExD,SAAgB,YAAY,CAC3B,UAAyB,EACzB,QAAgB,EAChB,KAAa;IAEb,IAAM,EAAE,GAAG,UAAU,CAAC,GAAG,CAAC,UAAC,CAAC,IAAK,6BAAmB,CAAC,SAAK,EAAzB,CAAyB,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAErE,IAAM,OAAO,GAAG,OAAO,CACtB,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,MAAG,QAAQ,IAAI,EAAE,CAAE,CAAC,CACvD;SACC,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC;SAC3B,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;IAE5B,OAAO;QACN,OAAO,EAAE,OAAO;KAChB,CAAC;AACH,CAAC;AAhBD,oCAgBC;AAED,SAAsB,gBAAgB,CACrC,SAAiB,EACjB,OAAe,EACf,KAAiB;;;YAEjB,WAAO,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,mBAAmB,CAAC,KAAK,CAAC,EAAC;;;CACjE;AAND,4CAMC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtCD,4FAA+B;AAC/B,qHAAqE;AAqBrE;IAAkC,gCAGjC;IASA,sBAAY,KAAyB;QAArC,YACC,kBAAM,KAAK,CAAC,SAOZ;QALA,KAAI,CAAC,KAAK,GAAG;YACZ,KAAK,EAAE,EAAE;YACT,SAAS,EAAE,IAAI;YACf,KAAK,EAAE,IAAI;SACX,CAAC;;IACH,CAAC;IACK,wCAAiB,GAAvB;;;;;;;wBAEiB,WAAM,oCAAgB,CACpC,IAAI,CAAC,KAAK,CAAC,aAAa,EACxB,IAAI,CAAC,KAAK,CAAC,GAAG,EACd,gCAAY,CACX,IAAI,CAAC,KAAK,CAAC,UAAU,EACrB,IAAI,CAAC,KAAK,CAAC,QAAQ,EACnB,IAAI,CAAC,KAAK,CAAC,KAAK,CAChB,CACD;;wBARK,WAAS,SAQd;wBAED,IAAI,CAAC,QAAQ,CAAC,cAAM,QAAC;4BACpB,SAAS,EAAE,KAAK;4BAChB,KAAK,EAAE,QAAM;yBACb,CAAC,EAHkB,CAGlB,CAAC,CAAC;;;;wBAEJ,IAAI,CAAC,QAAQ,CAAC,cAAM,QAAC;4BACpB,SAAS,EAAE,KAAK;4BAChB,KAAK,EAAE,KAAG;yBACV,CAAC,EAHkB,CAGlB,CAAC,CAAC;;;;;;KAEL;IACD,6BAAM,GAAN;QACC,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAC1B,IAAI,CAAC,KAAK,CAAC,KAAK,EAChB,IAAI,CAAC,KAAK,CAAC,SAAS,EACpB,IAAI,CAAC,KAAK,CAAC,KAAK,CAChB,CAAC;IACH,CAAC;IA9CM,yBAAY,GAGf;QACH,UAAU,EAAE,EAAE;QACd,QAAQ,EAAE,CAAC;QACX,KAAK,EAAE,EAAE;KACT,CAAC;IAwCH,mBAAC;CAAA,CAnDiC,KAAK,CAAC,aAAa,GAmDpD;AAnDY,oCAAY;;;;;;;;;;;;;;ACvBzB,gFAA4C;AAE5C,gFAAsB;AACtB,kFAAuB;AAEvB,qHAAqE;AAQrE,SAAgB,YAAY,CAC3B,MAAc,EACd,GAAW,EACX,UAA8B,EAC9B,QAAoB,EACpB,KAAkB;IAFlB,4CAA8B;IAC9B,uCAAoB;IACpB,kCAAkB;IAEZ,SAAoB,gBAAQ,CAAa,EAAE,CAAC,EAA3C,KAAK,UAAE,QAAQ,QAA4B,CAAC;IAC7C,SAA4B,gBAAQ,CAAU,IAAI,CAAC,EAAlD,SAAS,UAAE,YAAY,QAA2B,CAAC;IACpD,SAAoB,gBAAQ,CAAQ,IAAI,CAAC,EAAxC,KAAK,UAAE,QAAQ,QAAyB,CAAC;IAEhD,iBAAS,CAAC;QACT,IAAI,WAAW,GAAG,KAAK,CAAC;QAExB,SAAS,mBAAmB,CAAC,KAAiB;YAC7C,IAAI,WAAW;gBAAE,OAAO;YACxB,QAAQ,CAAC,KAAK,CAAC,CAAC;YAChB,YAAY,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC;QAED,SAAS,gBAAgB,CAAC,GAAU;YACnC,IAAI,WAAW;gBAAE,OAAO;YACxB,QAAQ,CAAC,GAAG,CAAC,CAAC;YACd,YAAY,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC;QACD,oCAAgB,CAAC,MAAM,EAAE,GAAG,EAAE,gCAAY,CAAC,UAAU,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;aACtE,IAAI,CAAC,mBAAmB,CAAC;aACzB,KAAK,CAAC,gBAAgB,CAAC,CAAC;QAE1B,OAAO;YACN,WAAW,GAAG,IAAI,CAAC;QACpB,CAAC,CAAC;IACH,CAAC,EAAE,CAAC,GAAG,EAAE,QAAQ,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC;IAEvC,OAAO,EAAE,KAAK,SAAE,SAAS,aAAE,KAAK,SAAE,CAAC;AACpC,CAAC;AAnCD,oCAmCC;;;;;;;UChDD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,sF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;UCNA;UACA;UACA;UACA","file":"useListItems.js","sourcesContent":["import { isFunc, objectDefinedNotNull } from \"./util.js\";\r\n/**\r\n * Used to calculate the object properties, with polyfill if needed\r\n */\r\nconst objectEntries = isFunc(Object.entries) ? Object.entries : (o) => Object.keys(o).map((k) => [k, o[k]]);\r\n/**\r\n * Converts the supplied object to a map\r\n *\r\n * @param o The object to map\r\n */\r\nexport function objectToMap(o) {\r\n    if (objectDefinedNotNull(o)) {\r\n        return new Map(objectEntries(o));\r\n    }\r\n    return new Map();\r\n}\r\n/**\r\n * Merges to Map instances together, overwriting values in target with matching keys, last in wins\r\n *\r\n * @param target map into which the other maps are merged\r\n * @param maps One or more maps to merge into the target\r\n */\r\nexport function mergeMaps(target, ...maps) {\r\n    for (let i = 0; i < maps.length; i++) {\r\n        maps[i].forEach((v, k) => {\r\n            // let's not run the spfx context through Object.assign :)\r\n            if ((typeof k === \"string\" && k !== \"spfxContext\") && Object.prototype.toString.call(v) === \"[object Object]\") {\r\n                // we only handle one level of deep object merging\r\n                target.set(k, Object.assign({}, target.get(k) || {}, v));\r\n            }\r\n            else {\r\n                target.set(k, v);\r\n            }\r\n        });\r\n    }\r\n    return target;\r\n}\r\n//# sourceMappingURL=collections.js.map","export * from \"./collections.js\";\r\nexport * from \"./libconfig.js\";\r\nexport * from \"./net.js\";\r\nexport * from \"./spfxcontextinterface.js\";\r\nexport * from \"./storage.js\";\r\nexport * from \"./util.js\";\r\nexport * from \"./safe-global.js\";\r\n//# sourceMappingURL=index.js.map","import { mergeMaps, objectToMap } from \"./collections.js\";\r\nexport function setup(config, runtime = DefaultRuntime) {\r\n    runtime.assign(config);\r\n}\r\n// lable mapping for known config values\r\nconst s = [\r\n    \"defaultCachingStore\",\r\n    \"defaultCachingTimeoutSeconds\",\r\n    \"globalCacheDisable\",\r\n    \"enableCacheExpiration\",\r\n    \"cacheExpirationIntervalMilliseconds\",\r\n    \"spfxContext\",\r\n    \"ie11\",\r\n];\r\nconst runtimeCreateHooks = [];\r\nexport function onRuntimeCreate(hook) {\r\n    if (runtimeCreateHooks.indexOf(hook) < 0) {\r\n        // apply hook logic to default runtime\r\n        hook(DefaultRuntime);\r\n        runtimeCreateHooks.push(hook);\r\n    }\r\n}\r\nexport class Runtime {\r\n    constructor(_v = new Map()) {\r\n        this._v = _v;\r\n        const defaulter = (key, def) => {\r\n            if (!this._v.has(key)) {\r\n                this._v.set(key, def);\r\n            }\r\n        };\r\n        // setup defaults\r\n        defaulter(s[0], \"session\");\r\n        defaulter(s[1], 60);\r\n        defaulter(s[2], false);\r\n        defaulter(s[3], false);\r\n        defaulter(s[4], 750);\r\n        defaulter(s[5], null);\r\n        defaulter(s[6], false);\r\n        runtimeCreateHooks.forEach(hook => hook(this));\r\n    }\r\n    /**\r\n     *\r\n     * @param config The set of properties to add to this runtime instance\r\n     */\r\n    assign(config) {\r\n        this._v = mergeMaps(this._v, objectToMap(config));\r\n    }\r\n    /**\r\n     * Gets a runtime value using T to define the available keys, and R to define the type returned by that key\r\n     *\r\n     * @param key\r\n     */\r\n    get(key) {\r\n        return this._v.get(key);\r\n    }\r\n    /**\r\n     * Exports the internal Map representing this runtime\r\n     */\r\n    export() {\r\n        const expt = new Map();\r\n        for (const [key, value] of this._v) {\r\n            if (key !== \"__isDefault__\") {\r\n                expt.set(key, value);\r\n            }\r\n        }\r\n        return expt;\r\n    }\r\n}\r\n// default runtime used globally\r\nconst _runtime = new Runtime(new Map([[\"__isDefault__\", true]]));\r\nexport const DefaultRuntime = _runtime;\r\n//# sourceMappingURL=libconfig.js.map","import { __awaiter } from \"tslib\";\r\nimport { assign, objectDefinedNotNull } from \"./util.js\";\r\nimport { safeGlobal } from \"./safe-global.js\";\r\nexport function mergeHeaders(target, source) {\r\n    if (objectDefinedNotNull(source)) {\r\n        const temp = new Request(\"\", { headers: source });\r\n        temp.headers.forEach((value, name) => {\r\n            target.append(name, value);\r\n        });\r\n    }\r\n}\r\nexport function mergeOptions(target, source) {\r\n    if (objectDefinedNotNull(source)) {\r\n        const headers = assign(target.headers || {}, source.headers);\r\n        target = assign(target, source);\r\n        target.headers = headers;\r\n    }\r\n}\r\n/**\r\n * Parses out the root of the request url to use as the resource when getting the token\r\n *\r\n  * @param url The url to parse\r\n */\r\nexport function getADALResource(url) {\r\n    const u = new URL(url);\r\n    return `${u.protocol}//${u.hostname}`;\r\n}\r\n/**\r\n * Makes requests using the global/window fetch API\r\n */\r\nexport class FetchClient {\r\n    fetch(url, options) {\r\n        return safeGlobal.fetch(url, options);\r\n    }\r\n}\r\n/**\r\n * Makes requests using the fetch API adding the supplied token to the Authorization header\r\n */\r\nexport class BearerTokenFetchClient extends FetchClient {\r\n    constructor(token) {\r\n        super();\r\n        this.token = token;\r\n    }\r\n    fetch(url, options = {}) {\r\n        const headers = new Headers();\r\n        mergeHeaders(headers, options.headers);\r\n        headers.set(\"Authorization\", `Bearer ${this.token}`);\r\n        options.headers = headers;\r\n        return super.fetch(url, options);\r\n    }\r\n}\r\nexport class LambdaFetchClient extends BearerTokenFetchClient {\r\n    constructor(tokenFactory) {\r\n        super(null);\r\n        this.tokenFactory = tokenFactory;\r\n    }\r\n    /**\r\n     * Executes a fetch request using the supplied url and options\r\n     *\r\n     * @param url Absolute url of the request\r\n     * @param options Any options\r\n     */\r\n    fetch(url, options) {\r\n        const _super = Object.create(null, {\r\n            fetch: { get: () => super.fetch }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.token = yield this.tokenFactory({ url, options });\r\n            return _super.fetch.call(this, url, options);\r\n        });\r\n    }\r\n}\r\n/**\r\n * Client wrapping the aadTokenProvider available from SPFx >= 1.6\r\n */\r\nexport class SPFxAdalClient extends LambdaFetchClient {\r\n    /**\r\n     *\r\n     * @param context provide the appropriate SPFx Context object\r\n     */\r\n    constructor(context) {\r\n        super((params) => __awaiter(this, void 0, void 0, function* () {\r\n            const provider = yield context.aadTokenProviderFactory.getTokenProvider();\r\n            return provider.getToken(getADALResource(params.url));\r\n        }));\r\n        this.context = context;\r\n    }\r\n    /**\r\n     * Gets an AAD token for the provided resource using the SPFx AADTokenProvider\r\n     *\r\n     * @param resource Resource for which a token is to be requested (ex: https://graph.microsoft.com)\r\n     */\r\n    getToken(resource) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const provider = yield this.context.aadTokenProviderFactory.getTokenProvider();\r\n            return provider.getToken(resource);\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=net.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","// export either window or global\r\nexport const safeGlobal = typeof global === \"undefined\" ? window : global;\r\n//# sourceMappingURL=safe-global.js.map","export {};\r\n//# sourceMappingURL=spfxcontextinterface.js.map","import { __awaiter } from \"tslib\";\r\nimport { dateAdd, getCtxCallback, jsS, objectDefinedNotNull } from \"./util.js\";\r\nimport { DefaultRuntime } from \"./libconfig.js\";\r\n/**\r\n * A wrapper class to provide a consistent interface to browser based storage\r\n *\r\n */\r\nexport class PnPClientStorageWrapper {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorageWrapper class\r\n     *\r\n     * @constructor\r\n     */\r\n    constructor(store, defaultTimeoutMinutes = -1) {\r\n        this.store = store;\r\n        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\r\n        this.enabled = this.test();\r\n        // if the cache timeout is enabled call the handler\r\n        // this will clear any expired items and set the timeout function\r\n        if (DefaultRuntime.get(\"enableCacheExpiration\")) {\r\n            this.cacheExpirationHandler();\r\n        }\r\n    }\r\n    static bind(store) {\r\n        return new PnPClientStorageWrapper(typeof (store) === \"undefined\" ? new MemoryStorage() : store);\r\n    }\r\n    /**\r\n     * Get a value from storage, or null if that value does not exist\r\n     *\r\n     * @param key The key whose value we want to retrieve\r\n     */\r\n    get(key) {\r\n        if (!this.enabled) {\r\n            return null;\r\n        }\r\n        const o = this.store.getItem(key);\r\n        if (!objectDefinedNotNull(o)) {\r\n            return null;\r\n        }\r\n        const persistable = JSON.parse(o);\r\n        if (new Date(persistable.expiration) <= new Date()) {\r\n            this.delete(key);\r\n            return null;\r\n        }\r\n        else {\r\n            return persistable.value;\r\n        }\r\n    }\r\n    /**\r\n     * Adds a value to the underlying storage\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param o The value to store\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    put(key, o, expire) {\r\n        if (this.enabled) {\r\n            this.store.setItem(key, this.createPersistable(o, expire));\r\n        }\r\n    }\r\n    /**\r\n     * Deletes a value from the underlying storage\r\n     *\r\n     * @param key The key of the pair we want to remove from storage\r\n     */\r\n    delete(key) {\r\n        if (this.enabled) {\r\n            this.store.removeItem(key);\r\n        }\r\n    }\r\n    /**\r\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param getter A function which will upon execution provide the desired value\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    getOrPut(key, getter, expire) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this.enabled) {\r\n                return getter();\r\n            }\r\n            let o = this.get(key);\r\n            if (o === null) {\r\n                o = yield getter();\r\n                this.put(key, o, expire);\r\n            }\r\n            return o;\r\n        });\r\n    }\r\n    /**\r\n     * Deletes any expired items placed in the store by the pnp library, leaves other items untouched\r\n     */\r\n    deleteExpired() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this.enabled) {\r\n                return;\r\n            }\r\n            for (let i = 0; i < this.store.length; i++) {\r\n                const key = this.store.key(i);\r\n                if (key !== null) {\r\n                    // test the stored item to see if we stored it\r\n                    if (/[\"|']?pnp[\"|']? ?: ?1/i.test(this.store.getItem(key))) {\r\n                        // get those items as get will delete from cache if they are expired\r\n                        yield this.get(key);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Used to determine if the wrapped storage is available currently\r\n     */\r\n    test() {\r\n        const str = \"t\";\r\n        try {\r\n            this.store.setItem(str, str);\r\n            this.store.removeItem(str);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Creates the persistable to store\r\n     */\r\n    createPersistable(o, expire) {\r\n        if (expire === undefined) {\r\n            // ensure we are by default inline with the global library setting\r\n            let defaultTimeout = DefaultRuntime.get(\"defaultCachingTimeoutSeconds\");\r\n            if (this.defaultTimeoutMinutes > 0) {\r\n                defaultTimeout = this.defaultTimeoutMinutes * 60;\r\n            }\r\n            expire = dateAdd(new Date(), \"second\", defaultTimeout);\r\n        }\r\n        return jsS({ pnp: 1, expiration: expire, value: o });\r\n    }\r\n    /**\r\n     * Deletes expired items added by this library in this.store and sets a timeout to call itself\r\n     */\r\n    cacheExpirationHandler() {\r\n        if (!this.enabled) {\r\n            return;\r\n        }\r\n        this.deleteExpired().then(() => {\r\n            // call ourself in the future\r\n            setTimeout(getCtxCallback(this, this.cacheExpirationHandler), DefaultRuntime.get(\"cacheExpirationIntervalMilliseconds\"));\r\n        }).catch(console.error);\r\n    }\r\n}\r\n/**\r\n * A thin implementation of in-memory storage for use in nodejs\r\n */\r\nclass MemoryStorage {\r\n    constructor(_store = new Map()) {\r\n        this._store = _store;\r\n    }\r\n    get length() {\r\n        return this._store.size;\r\n    }\r\n    clear() {\r\n        this._store.clear();\r\n    }\r\n    getItem(key) {\r\n        return this._store.get(key);\r\n    }\r\n    key(index) {\r\n        return Array.from(this._store)[index][0];\r\n    }\r\n    removeItem(key) {\r\n        this._store.delete(key);\r\n    }\r\n    setItem(key, data) {\r\n        this._store.set(key, data);\r\n    }\r\n}\r\n/**\r\n * A class that will establish wrappers for both local and session storage\r\n */\r\nexport class PnPClientStorage {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorage class\r\n     *\r\n     * @constructor\r\n     */\r\n    constructor(_local = null, _session = null) {\r\n        this._local = _local;\r\n        this._session = _session;\r\n    }\r\n    /**\r\n     * Provides access to the local storage of the browser\r\n     */\r\n    get local() {\r\n        if (this._local === null) {\r\n            this._local = new PnPClientStorageWrapper(typeof (localStorage) === \"undefined\" ? new MemoryStorage() : localStorage);\r\n        }\r\n        return this._local;\r\n    }\r\n    /**\r\n     * Provides access to the session storage of the browser\r\n     */\r\n    get session() {\r\n        if (this._session === null) {\r\n            this._session = new PnPClientStorageWrapper(typeof (sessionStorage) === \"undefined\" ? new MemoryStorage() : sessionStorage);\r\n        }\r\n        return this._session;\r\n    }\r\n}\r\n//# sourceMappingURL=storage.js.map","/**\r\n * Gets a callback function which will maintain context across async calls.\r\n * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\r\n *\r\n * @param context The object that will be the 'this' value in the callback\r\n * @param method The method to which we will apply the context and parameters\r\n * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\r\n */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nexport function getCtxCallback(context, method, ...params) {\r\n    return function () {\r\n        method.apply(context, params);\r\n    };\r\n}\r\n/**\r\n * Adds a value to a date\r\n *\r\n * @param date The date to which we will add units, done in local time\r\n * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\r\n * @param units The amount to add to date of the given interval\r\n *\r\n * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\r\n */\r\nexport function dateAdd(date, interval, units) {\r\n    let ret = new Date(date.toString()); // don't change original date\r\n    switch (interval.toLowerCase()) {\r\n        case \"year\":\r\n            ret.setFullYear(ret.getFullYear() + units);\r\n            break;\r\n        case \"quarter\":\r\n            ret.setMonth(ret.getMonth() + 3 * units);\r\n            break;\r\n        case \"month\":\r\n            ret.setMonth(ret.getMonth() + units);\r\n            break;\r\n        case \"week\":\r\n            ret.setDate(ret.getDate() + 7 * units);\r\n            break;\r\n        case \"day\":\r\n            ret.setDate(ret.getDate() + units);\r\n            break;\r\n        case \"hour\":\r\n            ret.setTime(ret.getTime() + units * 3600000);\r\n            break;\r\n        case \"minute\":\r\n            ret.setTime(ret.getTime() + units * 60000);\r\n            break;\r\n        case \"second\":\r\n            ret.setTime(ret.getTime() + units * 1000);\r\n            break;\r\n        default:\r\n            ret = undefined;\r\n            break;\r\n    }\r\n    return ret;\r\n}\r\n/**\r\n * Combines an arbitrary set of paths ensuring and normalizes the slashes\r\n *\r\n * @param paths 0 to n path parts to combine\r\n */\r\nexport function combine(...paths) {\r\n    return paths\r\n        .filter(path => !stringIsNullOrEmpty(path))\r\n        .map(path => path.replace(/^[\\\\|/]/, \"\").replace(/[\\\\|/]$/, \"\"))\r\n        .join(\"/\")\r\n        .replace(/\\\\/g, \"/\");\r\n}\r\n/**\r\n * Gets a random string of chars length\r\n *\r\n * https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript\r\n *\r\n * @param chars The length of the random string to generate\r\n */\r\nexport function getRandomString(chars) {\r\n    const text = new Array(chars);\r\n    for (let i = 0; i < chars; i++) {\r\n        text[i] = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\".charAt(Math.floor(Math.random() * 62));\r\n    }\r\n    return text.join(\"\");\r\n}\r\n/**\r\n * Gets a random GUID value\r\n *\r\n * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n */\r\n/* eslint-disable no-bitwise */\r\nexport function getGUID() {\r\n    let d = Date.now();\r\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n        const r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n}\r\n/* eslint-enable no-bitwise */\r\n/**\r\n * Determines if a given value is a function\r\n *\r\n * @param cf The thing to test for functionness\r\n */\r\nexport function isFunc(f) {\r\n    return typeof f === \"function\";\r\n}\r\n/**\r\n * Determines if an object is both defined and not null\r\n * @param obj Object to test\r\n */\r\nexport function objectDefinedNotNull(obj) {\r\n    return typeof obj !== \"undefined\" && obj !== null;\r\n}\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Array or not.\r\n*/\r\nexport function isArray(array) {\r\n    return Array.isArray ? Array.isArray(array) : array && typeof array.length === \"number\" && array.constructor === Array;\r\n}\r\n/**\r\n * Provides functionality to extend the given object by doing a shallow copy\r\n *\r\n * @param target The object to which properties will be copied\r\n * @param source The source object from which properties will be copied\r\n * @param noOverwrite If true existing properties on the target are not overwritten from the source\r\n * @param filter If provided allows additional filtering on what properties are copied (propName: string) => boolean\r\n *\r\n */\r\nexport function assign(target, source, noOverwrite = false, filter = () => true) {\r\n    if (!objectDefinedNotNull(source)) {\r\n        return target;\r\n    }\r\n    // ensure we don't overwrite things we don't want overwritten\r\n    const check = noOverwrite ? (o, i) => !(i in o) : () => true;\r\n    // final filter we will use\r\n    const f = (v) => check(target, v) && filter(v);\r\n    return Object.getOwnPropertyNames(source)\r\n        .filter(f)\r\n        .reduce((t, v) => {\r\n        t[v] = source[v];\r\n        return t;\r\n    }, target);\r\n}\r\n/**\r\n * Determines if a given url is absolute\r\n *\r\n * @param url The url to check to see if it is absolute\r\n */\r\nexport function isUrlAbsolute(url) {\r\n    return /^https?:\\/\\/|^\\/\\//i.test(url);\r\n}\r\n/**\r\n * Determines if a string is null or empty or undefined\r\n *\r\n * @param s The string to test\r\n */\r\nexport function stringIsNullOrEmpty(s) {\r\n    return s === undefined || s === null || s.length < 1;\r\n}\r\n/**\r\n * Ensures guid values are represented consistently as \"ea123463-137d-4ae3-89b8-cf3fc578ca05\"\r\n *\r\n * @param guid The candidate guid\r\n */\r\nexport function sanitizeGuid(guid) {\r\n    if (stringIsNullOrEmpty(guid)) {\r\n        return guid;\r\n    }\r\n    const matches = /([0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12})/i.exec(guid);\r\n    return matches === null ? guid : matches[1];\r\n}\r\n/**\r\n * Shorthand for JSON.stringify\r\n *\r\n * @param o Any type of object\r\n */\r\nexport function jsS(o) {\r\n    return JSON.stringify(o);\r\n}\r\n/**\r\n * Shorthand for Object.hasOwnProperty\r\n *\r\n * @param o Object to check for\r\n * @param p Name of the property\r\n */\r\nexport function hOP(o, p) {\r\n    return Object.hasOwnProperty.call(o, p);\r\n}\r\n/**\r\n * Generates a ~unique hash code\r\n *\r\n * From: https://stackoverflow.com/questions/6122571/simple-non-secure-hash-function-for-javascript\r\n */\r\n/* eslint-disable no-bitwise */\r\nexport function getHashCode(s) {\r\n    let hash = 0;\r\n    if (s.length === 0) {\r\n        return hash;\r\n    }\r\n    for (let i = 0; i < s.length; i++) {\r\n        const chr = s.charCodeAt(i);\r\n        hash = ((hash << 5) - hash) + chr;\r\n        hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n/* eslint-enable no-bitwise */\r\n//# sourceMappingURL=util.js.map","export * from \"./logger.js\";\r\nexport * from \"./listeners.js\";\r\n//# sourceMappingURL=index.js.map","/**\r\n * Implementation of LogListener which logs to the console\r\n *\r\n */\r\nexport class ConsoleListener {\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    log(entry) {\r\n        const msg = this.format(entry);\r\n        switch (entry.level) {\r\n            case 0 /* Verbose */:\r\n            case 1 /* Info */:\r\n                console.log(msg);\r\n                break;\r\n            case 2 /* Warning */:\r\n                console.warn(msg);\r\n                break;\r\n            case 3 /* Error */:\r\n                console.error(msg);\r\n                break;\r\n        }\r\n    }\r\n    /**\r\n     * Formats the message\r\n     *\r\n     * @param entry The information to format into a string\r\n     */\r\n    format(entry) {\r\n        const msg = [];\r\n        msg.push(\"Message: \" + entry.message);\r\n        if (entry.data !== undefined) {\r\n            try {\r\n                msg.push(\" Data: \" + JSON.stringify(entry.data));\r\n            }\r\n            catch (e) {\r\n                msg.push(` Data: Error in stringify of supplied data ${e}`);\r\n            }\r\n        }\r\n        return msg.join(\"\");\r\n    }\r\n}\r\n/**\r\n * Implementation of LogListener which logs to the supplied function\r\n *\r\n */\r\nexport class FunctionListener {\r\n    /**\r\n     * Creates a new instance of the FunctionListener class\r\n     *\r\n     * @constructor\r\n     * @param  method The method to which any logging data will be passed\r\n     */\r\n    constructor(method) {\r\n        this.method = method;\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    log(entry) {\r\n        this.method(entry);\r\n    }\r\n}\r\n//# sourceMappingURL=listeners.js.map","/**\r\n * Class used to subscribe ILogListener and log messages throughout an application\r\n *\r\n */\r\nexport class Logger {\r\n    /**\r\n   * Gets or sets the active log level to apply for log filtering\r\n   */\r\n    static get activeLogLevel() {\r\n        return Logger.instance.activeLogLevel;\r\n    }\r\n    static set activeLogLevel(value) {\r\n        Logger.instance.activeLogLevel = value;\r\n    }\r\n    static get instance() {\r\n        if (Logger._instance === undefined || Logger._instance === null) {\r\n            Logger._instance = new LoggerImpl();\r\n        }\r\n        return Logger._instance;\r\n    }\r\n    /**\r\n   * Adds ILogListener instances to the set of subscribed listeners\r\n   *\r\n   * @param listeners One or more listeners to subscribe to this log\r\n   */\r\n    static subscribe(...listeners) {\r\n        listeners.forEach(listener => Logger.instance.subscribe(listener));\r\n    }\r\n    /**\r\n   * Clears the subscribers collection, returning the collection before modification\r\n   */\r\n    static clearSubscribers() {\r\n        return Logger.instance.clearSubscribers();\r\n    }\r\n    /**\r\n   * Gets the current subscriber count\r\n   */\r\n    static get count() {\r\n        return Logger.instance.count;\r\n    }\r\n    /**\r\n   * Writes the supplied string to the subscribed listeners\r\n   *\r\n   * @param message The message to write\r\n   * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n   */\r\n    static write(message, level = 1 /* Info */) {\r\n        Logger.instance.log({ level: level, message: message });\r\n    }\r\n    /**\r\n   * Writes the supplied string to the subscribed listeners\r\n   *\r\n   * @param json The json object to stringify and write\r\n   * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n   */\r\n    static writeJSON(json, level = 1 /* Info */) {\r\n        this.write(JSON.stringify(json), level);\r\n    }\r\n    /**\r\n   * Logs the supplied entry to the subscribed listeners\r\n   *\r\n   * @param entry The message to log\r\n   */\r\n    static log(entry) {\r\n        Logger.instance.log(entry);\r\n    }\r\n    /**\r\n   * Logs an error object to the subscribed listeners\r\n   *\r\n   * @param err The error object\r\n   */\r\n    static error(err) {\r\n        Logger.instance.log({ data: err, level: 3 /* Error */, message: err.message });\r\n    }\r\n}\r\nclass LoggerImpl {\r\n    constructor(activeLogLevel = 2 /* Warning */, subscribers = []) {\r\n        this.activeLogLevel = activeLogLevel;\r\n        this.subscribers = subscribers;\r\n    }\r\n    subscribe(listener) {\r\n        this.subscribers.push(listener);\r\n    }\r\n    clearSubscribers() {\r\n        const s = this.subscribers.slice(0);\r\n        this.subscribers.length = 0;\r\n        return s;\r\n    }\r\n    get count() {\r\n        return this.subscribers.length;\r\n    }\r\n    write(message, level = 1 /* Info */) {\r\n        this.log({ level: level, message: message });\r\n    }\r\n    log(entry) {\r\n        if (entry !== undefined && this.activeLogLevel <= entry.level) {\r\n            this.subscribers.map(subscriber => subscriber.log(entry));\r\n        }\r\n    }\r\n}\r\n/**\r\n * A set of logging levels\r\n */\r\nexport var LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    LogLevel[LogLevel[\"Info\"] = 1] = \"Info\";\r\n    LogLevel[LogLevel[\"Warning\"] = 2] = \"Warning\";\r\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\r\n    LogLevel[LogLevel[\"Off\"] = 99] = \"Off\";\r\n})(LogLevel || (LogLevel = {}));\r\n//# sourceMappingURL=logger.js.map","/**\r\n * Adds a property to a target instance\r\n *\r\n * @param target The object to whose prototype we will add a property\r\n * @param name Property name\r\n * @param factory Factory method used to produce the property value\r\n * @param path Any additional path required to produce the value\r\n */\r\nexport function addProp(target, name, factory, path) {\r\n    Reflect.defineProperty(target.prototype, name, {\r\n        configurable: true,\r\n        enumerable: true,\r\n        get: function () {\r\n            return factory(this, path);\r\n        },\r\n    });\r\n}\r\n//# sourceMappingURL=add-prop.js.map","import { getGUID } from \"@pnp/common\";\r\nexport class Batch {\r\n    constructor(_batchId = getGUID()) {\r\n        this._batchId = _batchId;\r\n        this._reqs = [];\r\n        this._deps = [];\r\n        this._rDeps = [];\r\n        this._index = -1;\r\n    }\r\n    get batchId() {\r\n        return this._batchId;\r\n    }\r\n    /**\r\n     * The requests contained in this batch\r\n     */\r\n    get requests() {\r\n        // we sort these each time this is accessed\r\n        return this._reqs.sort((info1, info2) => info1.index - info2.index);\r\n    }\r\n    /**\r\n     * Not meant for use directly\r\n     *\r\n     * @param batchee The IQueryable for this batch to track in order\r\n     */\r\n    track(batchee) {\r\n        batchee.data.batch = this;\r\n        // we need to track the order requests are added to the batch to ensure we always\r\n        // operate on them in order\r\n        if (typeof batchee.data.batchIndex === \"undefined\" || batchee.data.batchIndex < 0) {\r\n            batchee.data.batchIndex = ++this._index;\r\n        }\r\n    }\r\n    /**\r\n     * Adds the given request context to the batch for execution\r\n     *\r\n     * @param context Details of the request to batch\r\n     */\r\n    add(context) {\r\n        const info = {\r\n            id: context.requestId,\r\n            index: context.batchIndex,\r\n            method: context.method.toUpperCase(),\r\n            options: context.options,\r\n            parser: context.parser,\r\n            reject: null,\r\n            resolve: null,\r\n            url: context.url,\r\n        };\r\n        // we create a new promise that will be resolved within the batch\r\n        const p = new Promise((resolve, reject) => {\r\n            info.resolve = resolve;\r\n            info.reject = reject;\r\n        });\r\n        this._reqs.push(info);\r\n        return p;\r\n    }\r\n    /**\r\n     * Adds a dependency insuring that some set of actions will occur before a batch is processed.\r\n     * MUST be cleared using the returned resolve delegate to allow batches to run\r\n     */\r\n    addDependency() {\r\n        let resolver = () => void (0);\r\n        this._deps.push(new Promise((resolve) => {\r\n            resolver = resolve;\r\n        }));\r\n        return resolver;\r\n    }\r\n    /**\r\n     * The batch's execute method will not resolve util any promises added here resolve\r\n     *\r\n     * @param p The dependent promise\r\n     */\r\n    addResolveBatchDependency(p) {\r\n        this._rDeps.push(p);\r\n    }\r\n    /**\r\n     * Execute the current batch and resolve the associated promises\r\n     *\r\n     * @returns A promise which will be resolved once all of the batch's child promises have resolved\r\n     */\r\n    execute() {\r\n        // we need to check the dependencies twice due to how different engines handle things.\r\n        // We can get a second set of promises added during the first set resolving\r\n        return Promise.all(this._deps)\r\n            .then(() => Promise.all(this._deps))\r\n            .then(() => this.executeImpl())\r\n            .then(() => Promise.all(this._rDeps))\r\n            .then(() => void (0));\r\n    }\r\n}\r\n//# sourceMappingURL=batch.js.map","import { PnPClientStorage } from \"@pnp/common\";\r\nconst storage = new PnPClientStorage();\r\nexport class CachingOptions {\r\n    constructor(key, storeName, expiration) {\r\n        this.key = key;\r\n        this.storeName = storeName;\r\n        this.expiration = expiration;\r\n    }\r\n    get store() {\r\n        if (this.storeName === \"local\") {\r\n            return storage.local;\r\n        }\r\n        else {\r\n            return storage.session;\r\n        }\r\n    }\r\n}\r\nexport class CachingParserWrapper {\r\n    constructor(parser, cacheOptions) {\r\n        this.parser = parser;\r\n        this.cacheOptions = cacheOptions;\r\n    }\r\n    parse(response) {\r\n        return this.parser.parse(response).then(r => this.cacheData(r));\r\n    }\r\n    cacheData(data) {\r\n        if (this.cacheOptions.store !== null) {\r\n            this.cacheOptions.store.put(this.cacheOptions.key, data, this.cacheOptions.expiration);\r\n        }\r\n        return data;\r\n    }\r\n}\r\n//# sourceMappingURL=caching.js.map","export * from \"./batch.js\";\r\nexport * from \"./caching.js\";\r\nexport * from \"./add-prop.js\";\r\nexport * from \"./invokable-binder.js\";\r\nexport * from \"./pipeline-binder.js\";\r\nexport * from \"./parsers.js\";\r\nexport * from \"./pipeline.js\";\r\nexport * from \"./queryable.js\";\r\nexport * from \"./request-builders.js\";\r\nexport { extendGlobal, extendObj, extendFactory, clearGlobalExtensions, enableExtensions, disableExtensions, } from \"./invokable-extensions.js\";\r\n//# sourceMappingURL=index.js.map","import { DefaultRuntime } from \"@pnp/common\";\r\nimport { extensionOrDefault, applyFactoryExtensions } from \"./invokable-extensions.js\";\r\nconst invokableBinder = (invoker) => (constructor) => {\r\n    return (...args) => {\r\n        const factory = (as) => {\r\n            const r = Object.assign(function (...ags) {\r\n                return invoker.call(r, ...ags);\r\n            }, new constructor(...as));\r\n            Reflect.setPrototypeOf(r, constructor.prototype);\r\n            return r;\r\n        };\r\n        // ie11 setting is always global\r\n        if (DefaultRuntime.get(\"ie11\") || false) {\r\n            return factory(args);\r\n        }\r\n        else {\r\n            return new Proxy(applyFactoryExtensions(factory, args), {\r\n                apply: (target, _thisArg, argArray) => {\r\n                    return extensionOrDefault(\"apply\", (...a) => Reflect.apply(a[0], a[1], a[2]), target, _thisArg, argArray);\r\n                },\r\n                get: (target, p, receiver) => {\r\n                    return extensionOrDefault(\"get\", (...a) => Reflect.get(a[0], a[1], a[2]), target, p, receiver);\r\n                },\r\n                has: (target, p) => {\r\n                    return extensionOrDefault(\"has\", (...a) => Reflect.has(a[0], a[1]), target, p);\r\n                },\r\n                set: (target, p, value, receiver) => {\r\n                    return extensionOrDefault(\"set\", (...a) => Reflect.set(a[0], a[1], a[2], a[3]), target, p, value, receiver);\r\n                },\r\n            });\r\n        }\r\n    };\r\n};\r\nexport const invokableFactory = invokableBinder(function (options) {\r\n    return this.defaultAction(options);\r\n});\r\n//# sourceMappingURL=invokable-binder.js.map","import { isFunc, getGUID } from \"@pnp/common\";\r\nlet _enableExtensions = false;\r\nconst globalExtensions = [];\r\nconst factoryExtensions = new Map();\r\nconst ObjExtensionsSym = Symbol.for(\"43f7a601\");\r\n/**\r\n * Creates global extensions across all invokable objects\r\n *\r\n * @param e The global extensions to apply\r\n */\r\nexport const extendGlobal = (e) => {\r\n    _enableExtensions = true;\r\n    extendCol(globalExtensions, e);\r\n};\r\n/**\r\n * Applies the supplied extensions to a single instance\r\n *\r\n * @param target Object to which extensions are applied\r\n * @param extensions Extensions to apply\r\n */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nexport const extendObj = (target, extensions) => {\r\n    _enableExtensions = true;\r\n    if (!Reflect.has(target, ObjExtensionsSym)) {\r\n        Reflect.set(target, ObjExtensionsSym, []);\r\n    }\r\n    extendCol(Reflect.get(target, ObjExtensionsSym), extensions);\r\n    return target;\r\n};\r\n/**\r\n * Allows applying extensions to all instances created from the supplied factory\r\n *\r\n * @param factory The Invokable Factory method to extend\r\n * @param extensions Extensions to apply\r\n */\r\nexport const extendFactory = (factory, extensions) => {\r\n    _enableExtensions = true;\r\n    // factoryExtensions\r\n    const proto = Reflect.getPrototypeOf(factory);\r\n    if (!Reflect.has(proto, ObjExtensionsSym)) {\r\n        Reflect.defineProperty(proto, ObjExtensionsSym, {\r\n            value: getGUID(),\r\n        });\r\n    }\r\n    const key = proto[ObjExtensionsSym];\r\n    if (!factoryExtensions.has(key)) {\r\n        factoryExtensions.set(key, []);\r\n    }\r\n    extendCol(factoryExtensions.get(key), extensions);\r\n};\r\nfunction extendCol(a, e) {\r\n    if (Array.isArray(e)) {\r\n        a.push(...e);\r\n    }\r\n    else {\r\n        a.push(e);\r\n    }\r\n}\r\n/**\r\n * Clears all global extensions\r\n */\r\nexport const clearGlobalExtensions = () => {\r\n    globalExtensions.length = 0;\r\n};\r\n/**\r\n * Disables all extensions\r\n */\r\nexport const disableExtensions = () => {\r\n    _enableExtensions = false;\r\n};\r\n/**\r\n * Enables all extensions\r\n */\r\nexport const enableExtensions = () => {\r\n    _enableExtensions = true;\r\n};\r\n/**\r\n * Applies a set of extension previously applied to a factory using extendFactory to an object created from that factory\r\n *\r\n * @param factory\r\n * @param args\r\n */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nexport const applyFactoryExtensions = (factory, args) => {\r\n    let o = factory(args);\r\n    const proto = Reflect.getPrototypeOf(factory);\r\n    if (Reflect.has(proto, ObjExtensionsSym)) {\r\n        const extensions = factoryExtensions.get(Reflect.get(proto, ObjExtensionsSym));\r\n        o = extendObj(o, extensions);\r\n    }\r\n    return o;\r\n};\r\nexport function extensionOrDefault(op, or, target, ...rest) {\r\n    if (_enableExtensions) {\r\n        const extensions = [];\r\n        // we need to first invoke extensions tied to only this object\r\n        if (Reflect.has(target, ObjExtensionsSym)) {\r\n            extensions.push(...Reflect.get(target, ObjExtensionsSym));\r\n        }\r\n        // second we need to process any global extensions\r\n        extensions.push(...globalExtensions);\r\n        for (let i = 0; i < extensions.length; i++) {\r\n            const extension = extensions[i];\r\n            let result = undefined;\r\n            if (isFunc(extension)) {\r\n                // this extension is a function which we call\r\n                result = extension(op, target, ...rest);\r\n            }\r\n            else if (op === \"get\" && Reflect.has(extension, rest[0])) {\r\n                // this extension is a named extension meaning we are overriding a specific method/property\r\n                result = Reflect.get(extension, rest[0], target);\r\n            }\r\n            else if (Reflect.has(extension, op)) {\r\n                // this extension is a ProxyHandler that has a handler defined for {op} so we pass control and see if we get a result\r\n                result = Reflect.get(extension, op)(target, ...rest);\r\n            }\r\n            if (typeof result !== \"undefined\") {\r\n                // if a extension returned a result, we return that\r\n                // this means that this extension overrides any other extensions and no more are executed\r\n                // first extension in the list to return \"wins\"\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n    return or(target, ...rest);\r\n}\r\n//# sourceMappingURL=invokable-extensions.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { __awaiter } from \"tslib\";\r\nimport { isFunc, hOP } from \"@pnp/common\";\r\nexport class ODataParser {\r\n    parse(r) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.handleError(r, reject)) {\r\n                this.parseImpl(r, resolve, reject);\r\n            }\r\n        });\r\n    }\r\n    parseImpl(r, resolve, reject) {\r\n        if ((r.headers.has(\"Content-Length\") && parseFloat(r.headers.get(\"Content-Length\")) === 0) || r.status === 204) {\r\n            resolve({});\r\n        }\r\n        else {\r\n            // patch to handle cases of 200 response with no or whitespace only bodies (#487 & #545)\r\n            r.text()\r\n                .then(txt => txt.replace(/\\s/ig, \"\").length > 0 ? JSON.parse(txt) : {})\r\n                .then(json => resolve(this.parseODataJSON(json)))\r\n                .catch(e => reject(e));\r\n        }\r\n    }\r\n    /**\r\n     * Handles a response with ok === false by parsing the body and creating a ProcessHttpClientResponseException\r\n     * which is passed to the reject delegate. This method returns true if there is no error, otherwise false\r\n     *\r\n     * @param r Current response object\r\n     * @param reject reject delegate for the surrounding promise\r\n     */\r\n    handleError(r, reject) {\r\n        if (!r.ok) {\r\n            HttpRequestError.init(r).then(reject);\r\n        }\r\n        return r.ok;\r\n    }\r\n    /**\r\n     * Normalizes the json response by removing the various nested levels\r\n     *\r\n     * @param json json object to parse\r\n     */\r\n    parseODataJSON(json) {\r\n        let result = json;\r\n        if (hOP(json, \"d\")) {\r\n            if (hOP(json.d, \"results\")) {\r\n                result = json.d.results;\r\n            }\r\n            else {\r\n                result = json.d;\r\n            }\r\n        }\r\n        else if (hOP(json, \"value\")) {\r\n            result = json.value;\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexport class TextParser extends ODataParser {\r\n    parseImpl(r, resolve) {\r\n        r.text().then(resolve);\r\n    }\r\n}\r\nexport class BlobParser extends ODataParser {\r\n    parseImpl(r, resolve) {\r\n        r.blob().then(resolve);\r\n    }\r\n}\r\nexport class JSONParser extends ODataParser {\r\n    parseImpl(r, resolve) {\r\n        r.json().then(resolve);\r\n    }\r\n}\r\nexport class BufferParser extends ODataParser {\r\n    parseImpl(r, resolve) {\r\n        if (isFunc(r.arrayBuffer)) {\r\n            r.arrayBuffer().then(resolve);\r\n        }\r\n        else {\r\n            r.buffer().then(resolve);\r\n        }\r\n    }\r\n}\r\nexport class LambdaParser extends ODataParser {\r\n    constructor(parser) {\r\n        super();\r\n        this.parser = parser;\r\n    }\r\n    parseImpl(r, resolve) {\r\n        this.parser(r).then(resolve);\r\n    }\r\n}\r\nexport class HttpRequestError extends Error {\r\n    constructor(message, response, status = response.status, statusText = response.statusText) {\r\n        super(message);\r\n        this.response = response;\r\n        this.status = status;\r\n        this.statusText = statusText;\r\n        this.isHttpRequestError = true;\r\n    }\r\n    static init(r) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const t = yield r.clone().text();\r\n            return new HttpRequestError(`Error making HttpClient request in queryable [${r.status}] ${r.statusText} ::> ${t}`, r.clone());\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=parsers.js.map","import { ODataParser } from \"./parsers.js\";\r\nimport { getGUID, objectDefinedNotNull } from \"@pnp/common\";\r\nimport { cloneQueryableData } from \"./queryable.js\";\r\nimport { pipe, getDefaultPipeline } from \"./pipeline.js\";\r\n// first we bind the pipeline we will use for all requests within this closure\r\nexport function pipelineBinder(pipes) {\r\n    // then we bind the client factory we'll use (typically done in an implementing library such as sp)\r\n    return function (clientFactory) {\r\n        // then we create a binder we can apply for each type of method (GET, POST, etc.)\r\n        return function (method) {\r\n            // finally we get a function back to which we can pass an IQueryableData instance and execute the request it defines\r\n            return function (o) {\r\n                // send the IQueryableData down the pipeline\r\n                return pipe(Object.assign({}, {\r\n                    batch: null,\r\n                    batchDependency: null,\r\n                    batchIndex: -1,\r\n                    cachingOptions: null,\r\n                    clientFactory,\r\n                    cloneParentCacheOptions: null,\r\n                    cloneParentWasCaching: false,\r\n                    hasResult: false,\r\n                    isBatched: objectDefinedNotNull(o.batch),\r\n                    method,\r\n                    options: null,\r\n                    parentUrl: \"\",\r\n                    parser: new ODataParser(),\r\n                    pipes: pipes.slice(0),\r\n                    query: new Map(),\r\n                    requestId: getGUID(),\r\n                    url: \"\",\r\n                    useCaching: /^get$/i.test(o.method) && o.useCaching,\r\n                }, cloneQueryableData(o)));\r\n            };\r\n        };\r\n    };\r\n}\r\nexport const defaultPipelineBinder = pipelineBinder(getDefaultPipeline());\r\n//# sourceMappingURL=pipeline-binder.js.map","import { __decorate } from \"tslib\";\r\nimport { assign, isFunc, hOP } from \"@pnp/common\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { CachingOptions, CachingParserWrapper } from \"./caching.js\";\r\n/**\r\n * Resolves the context's result value\r\n *\r\n * @param context The current context\r\n */\r\nfunction returnResult(context) {\r\n    Logger.log({\r\n        data: Logger.activeLogLevel === 0 /* Verbose */ ? context.result : {},\r\n        level: 1 /* Info */,\r\n        message: `[${context.requestId}] (${(new Date()).getTime()}) Returning result from pipeline. Set logging to verbose to see data.`,\r\n    });\r\n    return Promise.resolve(context.result);\r\n}\r\n/**\r\n * Sets the result on the context\r\n */\r\nexport function setResult(context, value) {\r\n    return new Promise((resolve) => {\r\n        context.result = value;\r\n        context.hasResult = true;\r\n        resolve(context);\r\n    });\r\n}\r\n/**\r\n * Invokes the next method in the provided context's pipeline\r\n *\r\n * @param c The current request context\r\n */\r\nfunction next(c) {\r\n    return c.pipes.length > 0 ? c.pipes.shift()(c) : Promise.resolve(c);\r\n}\r\n/**\r\n * Executes the current request context's pipeline\r\n *\r\n * @param context Current context\r\n */\r\nexport function pipe(context) {\r\n    if (context.pipes.length < 1) {\r\n        Logger.write(`[${context.requestId}] (${(new Date()).getTime()}) Request pipeline contains no methods!`, 3 /* Error */);\r\n        throw Error(\"Request pipeline contains no methods!\");\r\n    }\r\n    const promise = next(context).then(ctx => returnResult(ctx)).catch((e) => {\r\n        Logger.error(e);\r\n        throw e;\r\n    });\r\n    if (context.isBatched) {\r\n        // this will block the batch's execute method from returning until the child requests have been resolved\r\n        context.batch.addResolveBatchDependency(promise);\r\n    }\r\n    return promise;\r\n}\r\n/**\r\n * decorator factory applied to methods in the pipeline to control behavior\r\n */\r\nexport function requestPipelineMethod(alwaysRun = false) {\r\n    return (target, propertyKey, descriptor) => {\r\n        const method = descriptor.value;\r\n        descriptor.value = function (...args) {\r\n            // if we have a result already in the pipeline, pass it along and don't call the tagged method\r\n            if (!alwaysRun && args.length > 0 && hOP(args[0], \"hasResult\") && args[0].hasResult) {\r\n                Logger.write(`[${args[0].requestId}] (${(new Date()).getTime()}) Skipping request pipeline method ${propertyKey}, existing result in pipeline.`, 0 /* Verbose */);\r\n                return Promise.resolve(args[0]);\r\n            }\r\n            // apply the tagged method\r\n            Logger.write(`[${args[0].requestId}] (${(new Date()).getTime()}) Calling request pipeline method ${propertyKey}.`, 0 /* Verbose */);\r\n            // then chain the next method in the context's pipeline - allows for dynamic pipeline\r\n            return method.apply(target, args).then((ctx) => next(ctx));\r\n        };\r\n    };\r\n}\r\n/**\r\n * Contains the methods used within the request pipeline\r\n */\r\nexport class PipelineMethods {\r\n    /**\r\n     * Logs the start of the request\r\n     */\r\n    static logStart(context) {\r\n        return new Promise(resolve => {\r\n            Logger.log({\r\n                data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                level: 1 /* Info */,\r\n                message: `[${context.requestId}] (${(new Date()).getTime()}) Beginning ${context.method} request (${context.url})`,\r\n            });\r\n            resolve(context);\r\n        });\r\n    }\r\n    /**\r\n     * Handles caching of the request\r\n     */\r\n    static caching(context) {\r\n        return new Promise(resolve => {\r\n            // handle caching, if applicable\r\n            if (context.useCaching) {\r\n                Logger.write(`[${context.requestId}] (${(new Date()).getTime()}) Caching is enabled for request, checking cache...`, 1 /* Info */);\r\n                let cacheOptions = new CachingOptions(context.url.toLowerCase());\r\n                if (context.cachingOptions !== undefined) {\r\n                    cacheOptions = assign(cacheOptions, context.cachingOptions);\r\n                }\r\n                // we may not have a valid store\r\n                if (cacheOptions.store !== null) {\r\n                    // check if we have the data in cache and if so resolve the promise and return\r\n                    let data = cacheOptions.store.get(cacheOptions.key);\r\n                    if (data !== null) {\r\n                        Logger.log({\r\n                            data: Logger.activeLogLevel === 1 /* Info */ ? {} : data,\r\n                            level: 1 /* Info */,\r\n                            message: `[${context.requestId}] (${(new Date()).getTime()}) Value returned from cache.`,\r\n                        });\r\n                        // ensure we clear any held batch dependency we are resolving from the cache\r\n                        if (isFunc(context.batchDependency)) {\r\n                            context.batchDependency();\r\n                        }\r\n                        // handle the case where a parser needs to take special actions with a cached result\r\n                        if (hOP(context.parser, \"hydrate\")) {\r\n                            data = context.parser.hydrate(data);\r\n                        }\r\n                        return setResult(context, data).then(ctx => resolve(ctx));\r\n                    }\r\n                }\r\n                Logger.write(`[${context.requestId}] (${(new Date()).getTime()}) Value not found in cache.`, 1 /* Info */);\r\n                // if we don't then wrap the supplied parser in the caching parser wrapper\r\n                // and send things on their way\r\n                context.parser = new CachingParserWrapper(context.parser, cacheOptions);\r\n            }\r\n            return resolve(context);\r\n        });\r\n    }\r\n    /**\r\n     * Sends the request\r\n     */\r\n    static send(context) {\r\n        return new Promise((resolve, reject) => {\r\n            // send or batch the request\r\n            if (context.isBatched) {\r\n                const p = context.batch.add(context);\r\n                // we release the dependency here to ensure the batch does not execute until the request is added to the batch\r\n                if (isFunc(context.batchDependency)) {\r\n                    context.batchDependency();\r\n                }\r\n                Logger.write(`[${context.requestId}] (${(new Date()).getTime()}) Batching request in batch ${context.batch.batchId}.`, 1 /* Info */);\r\n                // we set the result as the promise which will be resolved by the batch's execution\r\n                resolve(setResult(context, p));\r\n            }\r\n            else {\r\n                Logger.write(`[${context.requestId}] (${(new Date()).getTime()}) Sending request.`, 1 /* Info */);\r\n                // we are not part of a batch, so proceed as normal\r\n                const client = context.clientFactory();\r\n                const opts = assign(context.options || {}, { method: context.method });\r\n                client.fetch(context.url, opts)\r\n                    .then(response => context.parser.parse(response))\r\n                    .then(result => setResult(context, result))\r\n                    .then(ctx => resolve(ctx))\r\n                    .catch(e => reject(e));\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Logs the end of the request\r\n     */\r\n    static logEnd(context) {\r\n        return new Promise(resolve => {\r\n            if (context.isBatched) {\r\n                Logger.log({\r\n                    data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: `[${context.requestId}] (${(new Date()).getTime()}) ${context.method} request will complete in batch ${context.batch.batchId}.`,\r\n                });\r\n            }\r\n            else {\r\n                Logger.log({\r\n                    data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: `[${context.requestId}] (${(new Date()).getTime()}) Completing ${context.method} request.`,\r\n                });\r\n            }\r\n            resolve(context);\r\n        });\r\n    }\r\n}\r\n__decorate([\r\n    requestPipelineMethod(true)\r\n], PipelineMethods, \"logStart\", null);\r\n__decorate([\r\n    requestPipelineMethod()\r\n], PipelineMethods, \"caching\", null);\r\n__decorate([\r\n    requestPipelineMethod()\r\n], PipelineMethods, \"send\", null);\r\n__decorate([\r\n    requestPipelineMethod(true)\r\n], PipelineMethods, \"logEnd\", null);\r\nexport function getDefaultPipeline() {\r\n    return [\r\n        PipelineMethods.logStart,\r\n        PipelineMethods.caching,\r\n        PipelineMethods.send,\r\n        PipelineMethods.logEnd,\r\n    ].slice(0);\r\n}\r\n//# sourceMappingURL=pipeline.js.map","import { combine, mergeOptions, objectDefinedNotNull, assign, Runtime, DefaultRuntime, dateAdd, stringIsNullOrEmpty, } from \"@pnp/common\";\r\nimport { ODataParser } from \"./parsers.js\";\r\nexport function cloneQueryableData(source) {\r\n    let body;\r\n    // this handles bodies that cannot be JSON encoded (Blob, etc)\r\n    // Note however, even bodies that can be serialized will not be cloned.\r\n    if (source.options && source.options.body) {\r\n        body = source.options.body;\r\n        source.options.body = \"-\";\r\n    }\r\n    const s = JSON.stringify(source, (key, value) => {\r\n        switch (key) {\r\n            case \"query\":\r\n                return JSON.stringify([...value]);\r\n            case \"batch\":\r\n            case \"batchDependency\":\r\n            case \"cachingOptions\":\r\n            case \"clientFactory\":\r\n            case \"parser\":\r\n                return \"-\";\r\n            default:\r\n                return value;\r\n        }\r\n    }, 0);\r\n    const parsed = JSON.parse(s, (key, value) => {\r\n        switch (key) {\r\n            case \"query\":\r\n                return new Map(JSON.parse(value));\r\n            case \"batch\":\r\n            case \"batchDependency\":\r\n            case \"cachingOptions\":\r\n            case \"clientFactory\":\r\n            case \"parser\":\r\n                return source[key];\r\n            default:\r\n                return value;\r\n        }\r\n    });\r\n    if (body) {\r\n        parsed.options.body = body;\r\n        source.options.body = body;\r\n    }\r\n    return parsed;\r\n}\r\nexport class Queryable {\r\n    constructor(dataSeed = {}) {\r\n        this._data = Object.assign({}, {\r\n            cloneParentWasCaching: false,\r\n            options: {},\r\n            parentUrl: \"\",\r\n            parser: new ODataParser(),\r\n            query: new Map(),\r\n            url: \"\",\r\n            useCaching: false,\r\n        }, cloneQueryableData(dataSeed));\r\n        this._runtime = null;\r\n    }\r\n    get data() {\r\n        return this._data;\r\n    }\r\n    set data(value) {\r\n        this._data = Object.assign({}, this.data, cloneQueryableData(value));\r\n    }\r\n    getRuntime() {\r\n        if (this._runtime === null) {\r\n            return DefaultRuntime;\r\n        }\r\n        return this._runtime;\r\n    }\r\n    setRuntime(...args) {\r\n        // need to wait for ts update in spfx: [runtime: Runtime] | [cloneGlobal: boolean, additionalConfig?: ITypedHash<any>]\r\n        if (args[0] instanceof Runtime) {\r\n            this._runtime = args[0];\r\n        }\r\n        else {\r\n            this._runtime = args[0] ? new Runtime(DefaultRuntime.export()) : new Runtime();\r\n            if (args.length > 1 && objectDefinedNotNull(args[1])) {\r\n                this._runtime.assign(args[1]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n  * Gets the current url\r\n  *\r\n  */\r\n    toUrl() {\r\n        return this.data.url;\r\n    }\r\n    /**\r\n   * Directly concatenates the supplied string to the current url, not normalizing \"/\" chars\r\n   *\r\n   * @param pathPart The string to concatenate to the url\r\n   */\r\n    concat(pathPart) {\r\n        this.data.url += pathPart;\r\n        return this;\r\n    }\r\n    /**\r\n   * Provides access to the query builder for this url\r\n   *\r\n   */\r\n    get query() {\r\n        return this.data.query;\r\n    }\r\n    /**\r\n   * Sets custom options for current object and all derived objects accessible via chaining\r\n   *\r\n   * @param options custom options\r\n   */\r\n    configure(options) {\r\n        mergeOptions(this.data.options, options);\r\n        return this;\r\n    }\r\n    /**\r\n   * Configures this instance from the configure options of the supplied instance\r\n   *\r\n   * @param o Instance from which options should be taken\r\n   */\r\n    configureFrom(o) {\r\n        mergeOptions(this.data.options, o.data.options);\r\n        const sourceRuntime = o.getRuntime();\r\n        if (!sourceRuntime.get(\"__isDefault__\")) {\r\n            this.setRuntime(sourceRuntime);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n   * Enables caching for this request\r\n   *\r\n   * @param options Defines the options used when caching this request\r\n   */\r\n    usingCaching(options) {\r\n        const runtime = this.getRuntime();\r\n        if (!runtime.get(\"globalCacheDisable\")) {\r\n            this.data.useCaching = true;\r\n            // handle getting just the key\r\n            if (typeof options === \"string\") {\r\n                if (stringIsNullOrEmpty(options)) {\r\n                    throw Error(\"Cache key cannot be empty.\");\r\n                }\r\n                options = { key: options };\r\n            }\r\n            // this uses our local options if they are defined as defaults\r\n            const defaultOpts = {\r\n                expiration: dateAdd(new Date(), \"second\", runtime.get(\"defaultCachingTimeoutSeconds\")),\r\n                storeName: runtime.get(\"defaultCachingStore\"),\r\n            };\r\n            this.data.cachingOptions = assign(defaultOpts, options);\r\n        }\r\n        return this;\r\n    }\r\n    usingParser(parser) {\r\n        this.data.parser = parser;\r\n        return this;\r\n    }\r\n    /**\r\n   * Allows you to set a request specific processing pipeline\r\n   *\r\n   * @param pipeline The set of methods, in order, to execute a given request\r\n   */\r\n    withPipeline(pipeline) {\r\n        this.data.pipes = pipeline.slice(0);\r\n        return this;\r\n    }\r\n    /**\r\n   * Appends the given string and normalizes \"/\" chars\r\n   *\r\n   * @param pathPart The string to append\r\n   */\r\n    append(pathPart) {\r\n        this.data.url = combine(this.data.url, pathPart);\r\n    }\r\n    /**\r\n   * Adds this query to the supplied batch\r\n   *\r\n   * @example\r\n   * ```\r\n   *\r\n   * let b = pnp.sp.createBatch();\r\n   * pnp.sp.web.inBatch(b).get().then(...);\r\n   * b.execute().then(...)\r\n   * ```\r\n   */\r\n    inBatch(batch) {\r\n        if (this.hasBatch) {\r\n            throw Error(\"This query is already part of a batch.\");\r\n        }\r\n        if (objectDefinedNotNull(batch)) {\r\n            batch.track(this);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n   * Blocks a batch call from occuring, MUST be cleared by calling the returned function\r\n  */\r\n    addBatchDependency() {\r\n        if (objectDefinedNotNull(this.data.batch)) {\r\n            return this.data.batch.addDependency();\r\n        }\r\n        return () => null;\r\n    }\r\n    /**\r\n   * Indicates if the current query has a batch associated\r\n   *\r\n   */\r\n    get hasBatch() {\r\n        return objectDefinedNotNull(this.data.batch);\r\n    }\r\n    /**\r\n   * The batch currently associated with this query or null\r\n   *\r\n   */\r\n    get batch() {\r\n        return this.hasBatch ? this.data.batch : null;\r\n    }\r\n    /**\r\n   * Gets the parent url used when creating this instance\r\n   *\r\n   */\r\n    get parentUrl() {\r\n        return this.data.parentUrl;\r\n    }\r\n    /**\r\n   * Clones this instance's data to target\r\n   *\r\n   * @param target Instance to which data is written\r\n   * @param settings [Optional] Settings controlling how clone is applied\r\n   */\r\n    cloneTo(target, settings = {}) {\r\n        // default values for settings\r\n        settings = assign({\r\n            includeBatch: true,\r\n            includeQuery: false,\r\n        }, settings);\r\n        target.data = Object.assign({}, cloneQueryableData(this.data), {\r\n            batch: null,\r\n            cloneParentCacheOptions: null,\r\n            cloneParentWasCaching: false,\r\n        }, cloneQueryableData(target.data));\r\n        target.configureFrom(this);\r\n        if (settings.includeBatch) {\r\n            target.inBatch(this.batch);\r\n        }\r\n        if (settings.includeQuery && this.query.size > 0) {\r\n            this.query.forEach((v, k) => target.query.set(k, v));\r\n        }\r\n        if (this.data.useCaching) {\r\n            target.data.cloneParentWasCaching = true;\r\n            target.data.cloneParentCacheOptions = this.data.cachingOptions;\r\n        }\r\n        return target;\r\n    }\r\n}\r\n//# sourceMappingURL=queryable.js.map","import { jsS } from \"@pnp/common\";\r\nexport function body(o, previous) {\r\n    return Object.assign({ body: jsS(o) }, previous);\r\n}\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nexport function headers(o, previous) {\r\n    return Object.assign({ headers: o }, previous);\r\n}\r\n//# sourceMappingURL=request-builders.js.map","import { __awaiter } from \"tslib\";\r\nimport { Batch, HttpRequestError } from \"@pnp/odata\";\r\nimport { getGUID, isUrlAbsolute, combine, mergeHeaders, hOP, DefaultRuntime } from \"@pnp/common\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { SPHttpClient } from \"./sphttpclient.js\";\r\nimport { toAbsoluteUrl } from \"./utils/toabsoluteurl.js\";\r\n/**\r\n * Manages a batch of OData operations\r\n */\r\nexport class SPBatch extends Batch {\r\n    constructor(url, runtime = DefaultRuntime) {\r\n        super();\r\n        this.url = url;\r\n        this.runtime = runtime;\r\n    }\r\n    /**\r\n     * Parses the response from a batch request into an array of Response instances\r\n     *\r\n     * @param body Text body of the response from the batch request\r\n     */\r\n    static ParseResponse(body) {\r\n        const responses = [];\r\n        const header = \"--batchresponse_\";\r\n        // Ex. \"HTTP/1.1 500 Internal Server Error\"\r\n        const statusRegExp = new RegExp(\"^HTTP/[0-9.]+ +([0-9]+) +(.*)\", \"i\");\r\n        const lines = body.split(\"\\n\");\r\n        let state = \"batch\";\r\n        let status;\r\n        let statusText;\r\n        for (let i = 0; i < lines.length; ++i) {\r\n            const line = lines[i];\r\n            switch (state) {\r\n                case \"batch\":\r\n                    if (line.substr(0, header.length) === header) {\r\n                        state = \"batchHeaders\";\r\n                    }\r\n                    else {\r\n                        if (line.trim() !== \"\") {\r\n                            throw Error(`Invalid response, line ${i}`);\r\n                        }\r\n                    }\r\n                    break;\r\n                case \"batchHeaders\":\r\n                    if (line.trim() === \"\") {\r\n                        state = \"status\";\r\n                    }\r\n                    break;\r\n                case \"status\": {\r\n                    const parts = statusRegExp.exec(line);\r\n                    if (parts.length !== 3) {\r\n                        throw Error(`Invalid status, line ${i}`);\r\n                    }\r\n                    status = parseInt(parts[1], 10);\r\n                    statusText = parts[2];\r\n                    state = \"statusHeaders\";\r\n                    break;\r\n                }\r\n                case \"statusHeaders\":\r\n                    if (line.trim() === \"\") {\r\n                        state = \"body\";\r\n                    }\r\n                    break;\r\n                case \"body\":\r\n                    responses.push((status === 204) ? new Response() : new Response(line, { status: status, statusText: statusText }));\r\n                    state = \"batch\";\r\n                    break;\r\n            }\r\n        }\r\n        if (state !== \"status\") {\r\n            throw Error(\"Unexpected end of input\");\r\n        }\r\n        return responses;\r\n    }\r\n    executeImpl() {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            Logger.write(`[${this.batchId}] (${(new Date()).getTime()}) Executing batch with ${this.requests.length} requests.`, 1 /* Info */);\r\n            // if we don't have any requests, don't bother sending anything\r\n            // this could be due to caching further upstream, or just an empty batch\r\n            if (this.requests.length < 1) {\r\n                Logger.write(\"Resolving empty batch.\", 1 /* Info */);\r\n                return;\r\n            }\r\n            // creating the client here allows the url to be populated for nodejs client as well as potentially\r\n            // any other hacks needed for other types of clients. Essentially allows the absoluteRequestUrl\r\n            // below to be correct\r\n            const client = new SPHttpClient(this.runtime);\r\n            // due to timing we need to get the absolute url here so we can use it for all the individual requests\r\n            // and for sending the entire batch\r\n            const absoluteRequestUrl = yield toAbsoluteUrl(this.url, this.runtime);\r\n            // build all the requests, send them, pipe results in order to parsers\r\n            const batchBody = [];\r\n            let currentChangeSetId = \"\";\r\n            for (let i = 0; i < this.requests.length; i++) {\r\n                const reqInfo = this.requests[i];\r\n                if (reqInfo.method === \"GET\") {\r\n                    if (currentChangeSetId.length > 0) {\r\n                        // end an existing change set\r\n                        batchBody.push(`--changeset_${currentChangeSetId}--\\n\\n`);\r\n                        currentChangeSetId = \"\";\r\n                    }\r\n                    batchBody.push(`--batch_${this.batchId}\\n`);\r\n                }\r\n                else {\r\n                    if (currentChangeSetId.length < 1) {\r\n                        // start new change set\r\n                        currentChangeSetId = getGUID();\r\n                        batchBody.push(`--batch_${this.batchId}\\n`);\r\n                        batchBody.push(`Content-Type: multipart/mixed; boundary=\"changeset_${currentChangeSetId}\"\\n\\n`);\r\n                    }\r\n                    batchBody.push(`--changeset_${currentChangeSetId}\\n`);\r\n                }\r\n                // common batch part prefix\r\n                batchBody.push(\"Content-Type: application/http\\n\");\r\n                batchBody.push(\"Content-Transfer-Encoding: binary\\n\\n\");\r\n                // these are the per-request headers\r\n                const headers = new Headers();\r\n                // this is the url of the individual request within the batch\r\n                const url = isUrlAbsolute(reqInfo.url) ? reqInfo.url : combine(absoluteRequestUrl, reqInfo.url);\r\n                Logger.write(`[${this.batchId}] (${(new Date()).getTime()}) Adding request ${reqInfo.method} ${url} to batch.`, 0 /* Verbose */);\r\n                if (reqInfo.method !== \"GET\") {\r\n                    let method = reqInfo.method;\r\n                    const castHeaders = reqInfo.options.headers;\r\n                    if (hOP(reqInfo, \"options\") && hOP(reqInfo.options, \"headers\") && castHeaders[\"X-HTTP-Method\"] !== undefined) {\r\n                        method = castHeaders[\"X-HTTP-Method\"];\r\n                        delete castHeaders[\"X-HTTP-Method\"];\r\n                    }\r\n                    batchBody.push(`${method} ${url} HTTP/1.1\\n`);\r\n                    headers.set(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                else {\r\n                    batchBody.push(`${reqInfo.method} ${url} HTTP/1.1\\n`);\r\n                }\r\n                // merge global config headers\r\n                mergeHeaders(headers, (_a = this.runtime.get(\"sp\")) === null || _a === void 0 ? void 0 : _a.headers);\r\n                // merge per-request headers\r\n                if (reqInfo.options) {\r\n                    mergeHeaders(headers, reqInfo.options.headers);\r\n                }\r\n                // lastly we apply any default headers we need that may not exist\r\n                if (!headers.has(\"Accept\")) {\r\n                    headers.append(\"Accept\", \"application/json\");\r\n                }\r\n                if (!headers.has(\"Content-Type\")) {\r\n                    headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n                    headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-2.1.0:batch\");\r\n                }\r\n                // write headers into batch body\r\n                headers.forEach((value, name) => {\r\n                    batchBody.push(`${name}: ${value}\\n`);\r\n                });\r\n                batchBody.push(\"\\n\");\r\n                if (reqInfo.options.body) {\r\n                    batchBody.push(`${reqInfo.options.body}\\n\\n`);\r\n                }\r\n            }\r\n            if (currentChangeSetId.length > 0) {\r\n                // Close the changeset\r\n                batchBody.push(`--changeset_${currentChangeSetId}--\\n\\n`);\r\n                currentChangeSetId = \"\";\r\n            }\r\n            batchBody.push(`--batch_${this.batchId}--\\n`);\r\n            const batchOptions = {\r\n                \"body\": batchBody.join(\"\"),\r\n                \"headers\": {\r\n                    \"Content-Type\": `multipart/mixed; boundary=batch_${this.batchId}`,\r\n                },\r\n                \"method\": \"POST\",\r\n            };\r\n            Logger.write(`[${this.batchId}] (${(new Date()).getTime()}) Sending batch request.`, 1 /* Info */);\r\n            const fetchResponse = yield client.fetch(combine(absoluteRequestUrl, \"/_api/$batch\"), batchOptions);\r\n            if (!fetchResponse.ok) {\r\n                // the entire batch resulted in an error and we need to handle that better #1356\r\n                // things consistently with the rest of the http errors\r\n                throw (yield HttpRequestError.init(fetchResponse));\r\n            }\r\n            const text = yield fetchResponse.clone().text();\r\n            const responses = SPBatch.ParseResponse(text);\r\n            if (responses.length !== this.requests.length) {\r\n                throw Error(\"Could not properly parse responses to match requests in batch.\");\r\n            }\r\n            Logger.write(`[${this.batchId}] (${(new Date()).getTime()}) Resolving batched requests.`, 1 /* Info */);\r\n            // this structure ensures that we resolve the batched requests in the order we expect\r\n            // using async this is not guaranteed depending on the requests\r\n            return responses.reduce((p, response, index) => p.then(() => __awaiter(this, void 0, void 0, function* () {\r\n                const request = this.requests[index];\r\n                Logger.write(`[${request.id}] (${(new Date()).getTime()}) Resolving request in batch ${this.batchId}.`, 1 /* Info */);\r\n                try {\r\n                    request.resolve(yield request.parser.parse(response));\r\n                }\r\n                catch (e) {\r\n                    request.reject(e);\r\n                }\r\n            })), Promise.resolve(void (0)));\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=batch.js.map","/**\r\n * Class Decorators\r\n */\r\n/**\r\n * Decorator used to specify the default path for SharePointQueryable objects\r\n *\r\n * @param path\r\n */\r\nexport function defaultPath(path) {\r\n    // eslint-disable-next-line @typescript-eslint/ban-types\r\n    return function (target) {\r\n        return class extends target {\r\n            constructor(...args) {\r\n                super(args[0], args.length > 1 && args[1] !== undefined ? args[1] : path);\r\n            }\r\n        };\r\n    };\r\n}\r\n// TODO::?\r\n// performance tracking method decorator\r\n// redirect to graph api\r\n//# sourceMappingURL=decorators.js.map","import \"./web.js\";\r\nexport { List, Lists, ControlMode, RenderListDataOptions, } from \"./types.js\";\r\n//# sourceMappingURL=index.js.map","import { __awaiter, __decorate } from \"tslib\";\r\nimport { assign, dateAdd, hOP, isArray, objectDefinedNotNull } from \"@pnp/common\";\r\nimport { body, headers } from \"@pnp/odata\";\r\nimport { SharePointQueryable, SharePointQueryableCollection, _SharePointQueryableInstance, _SharePointQueryableCollection, spInvokableFactory, deleteableWithETag, } from \"../sharepointqueryable.js\";\r\nimport { odataUrlFrom } from \"../odata.js\";\r\nimport { metadata } from \"../utils/metadata.js\";\r\nimport { defaultPath } from \"../decorators.js\";\r\nimport { spPost } from \"../operations.js\";\r\nimport { escapeQueryStrValue } from \"../utils/escapeQueryStrValue.js\";\r\nimport { tag } from \"../telemetry.js\";\r\nimport { toResourcePath } from \"../utils/toResourcePath.js\";\r\nlet _Lists = class _Lists extends _SharePointQueryableCollection {\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param id The Id of the list (GUID)\r\n     */\r\n    getById(id) {\r\n        return tag.configure(List(this).concat(`('${id}')`), \"ls.getById\");\r\n    }\r\n    /**\r\n     * Gets a list from the collection by title\r\n     *\r\n     * @param title The title of the list\r\n     */\r\n    getByTitle(title) {\r\n        return tag.configure(List(this, `getByTitle('${escapeQueryStrValue(title)}')`), \"ls.getByTitle\");\r\n    }\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body\r\n     */\r\n    add(title, desc = \"\", template = 100, enableContentTypes = false, additionalSettings = {}) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const addSettings = Object.assign({\r\n                \"AllowContentTypes\": enableContentTypes,\r\n                \"BaseTemplate\": template,\r\n                \"ContentTypesEnabled\": enableContentTypes,\r\n                \"Description\": desc,\r\n                \"Title\": title,\r\n            }, metadata(\"SP.List\"), additionalSettings);\r\n            const data = yield spPost(this, body(addSettings));\r\n            return { data, list: this.getByTitle(addSettings.Title) };\r\n        });\r\n    }\r\n    /**\r\n     * Ensures that the specified list exists in the collection (note: this method not supported for batching)\r\n     *\r\n     * @param title The new list's title\r\n     * @param desc The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body or used to update an existing list\r\n     */\r\n    ensure(title, desc = \"\", template = 100, enableContentTypes = false, additionalSettings = {}) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.hasBatch) {\r\n                throw Error(\"The ensure list method is not supported for use in a batch.\");\r\n            }\r\n            const addOrUpdateSettings = assign(additionalSettings, { Title: title, Description: desc, ContentTypesEnabled: enableContentTypes }, true);\r\n            const list = this.getByTitle(addOrUpdateSettings.Title);\r\n            try {\r\n                // this will throw if the list doesn't exist\r\n                yield list.select(\"Title\")();\r\n                const data = yield list.update(addOrUpdateSettings).then(r => r.data);\r\n                return { created: false, data, list: this.getByTitle(addOrUpdateSettings.Title) };\r\n            }\r\n            catch (e) {\r\n                const data = yield this.add(title, desc, template, enableContentTypes, addOrUpdateSettings).then(r => r.data);\r\n                return { created: true, data, list: this.getByTitle(addOrUpdateSettings.Title) };\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Gets a list that is the default asset location for images or other files, which the users upload to their wiki pages.\r\n     */\r\n    ensureSiteAssetsLibrary() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const json = yield spPost(this.clone(Lists, \"ensuresiteassetslibrary\"));\r\n            return List(odataUrlFrom(json));\r\n        });\r\n    }\r\n    /**\r\n     * Gets a list that is the default location for wiki pages.\r\n     */\r\n    ensureSitePagesLibrary() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const json = yield spPost(this.clone(Lists, \"ensuresitepageslibrary\"));\r\n            return List(odataUrlFrom(json));\r\n        });\r\n    }\r\n};\r\n__decorate([\r\n    tag(\"ls.add\")\r\n], _Lists.prototype, \"add\", null);\r\n__decorate([\r\n    tag(\"ls.ensure\")\r\n], _Lists.prototype, \"ensure\", null);\r\n__decorate([\r\n    tag(\"ls.ensureSiteAssetsLibrary\")\r\n], _Lists.prototype, \"ensureSiteAssetsLibrary\", null);\r\n__decorate([\r\n    tag(\"ls.ensureSitePagesLibrary\")\r\n], _Lists.prototype, \"ensureSitePagesLibrary\", null);\r\n_Lists = __decorate([\r\n    defaultPath(\"lists\")\r\n], _Lists);\r\nexport { _Lists };\r\nexport const Lists = spInvokableFactory(_Lists);\r\nexport class _List extends _SharePointQueryableInstance {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.delete = deleteableWithETag(\"l\");\r\n    }\r\n    /**\r\n     * Gets the effective base permissions of this list\r\n     *\r\n     */\r\n    get effectiveBasePermissions() {\r\n        return tag.configure(SharePointQueryable(this, \"EffectiveBasePermissions\"), \"l.effectiveBasePermissions\");\r\n    }\r\n    /**\r\n     * Gets the event receivers attached to this list\r\n     *\r\n     */\r\n    get eventReceivers() {\r\n        return tag.configure(SharePointQueryableCollection(this, \"EventReceivers\"), \"l.eventReceivers\");\r\n    }\r\n    /**\r\n     * Gets the related fields of this list\r\n     *\r\n     */\r\n    get relatedFields() {\r\n        return tag.configure(SharePointQueryable(this, \"getRelatedFields\"), \"l.relatedFields\");\r\n    }\r\n    /**\r\n     * Gets the IRM settings for this list\r\n     *\r\n     */\r\n    get informationRightsManagementSettings() {\r\n        return tag.configure(SharePointQueryable(this, \"InformationRightsManagementSettings\"), \"l.informationRightsManagementSettings\");\r\n    }\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    update(properties, eTag = \"*\") {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const postBody = body(assign(metadata(\"SP.List\"), properties), headers({\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            }));\r\n            const data = yield spPost(this, postBody);\r\n            const list = hOP(properties, \"Title\") ? this.getParent(List, this.parentUrl, `getByTitle('${properties.Title}')`) : List(this);\r\n            return {\r\n                data,\r\n                list,\r\n            };\r\n        });\r\n    }\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\r\n     * @param query A query that is performed against the change log.\r\n     */\r\n    getChanges(query) {\r\n        return spPost(this.clone(List, \"getchanges\"), body({ query: assign(metadata(\"SP.ChangeQuery\"), query) }));\r\n    }\r\n    /**\r\n     * Returns the collection of items in the list based on the provided CamlQuery\r\n     * @param query A query that is performed against the list\r\n     * @param expands An expanded array of n items that contains fields to expand in the CamlQuery\r\n     */\r\n    getItemsByCAMLQuery(query, ...expands) {\r\n        const q = this.clone(List, \"getitems\");\r\n        return spPost(q.expand(...expands), body({ query: assign(metadata(\"SP.CamlQuery\"), query) }));\r\n    }\r\n    /**\r\n     * See: https://msdn.microsoft.com/en-us/library/office/dn292554.aspx\r\n     * @param query An object that defines the change log item query\r\n     */\r\n    getListItemChangesSinceToken(query) {\r\n        const o = this.clone(List, \"getlistitemchangessincetoken\").usingParser({\r\n            parse(r) {\r\n                return r.text();\r\n            },\r\n        });\r\n        return spPost(o, body({ \"query\": assign(metadata(\"SP.ChangeLogItemQuery\"), query) }));\r\n    }\r\n    /**\r\n     * Moves the list to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    recycle() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const data = yield spPost(this.clone(List, \"recycle\"));\r\n            return hOP(data, \"Recycle\") ? data.Recycle : data;\r\n        });\r\n    }\r\n    /**\r\n     * Renders list data based on the view xml provided\r\n     * @param viewXml A string object representing a view xml\r\n     */\r\n    renderListData(viewXml) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const q = this.clone(List, \"renderlistdata(@viewXml)\");\r\n            q.query.set(\"@viewXml\", `'${viewXml}'`);\r\n            const data = yield spPost(q);\r\n            // data will be a string, so we parse it again\r\n            return JSON.parse(hOP(data, \"RenderListData\") ? data.RenderListData : data);\r\n        });\r\n    }\r\n    /**\r\n     * Returns the data for the specified query view\r\n     *\r\n     * @param parameters The parameters to be used to render list data as JSON string.\r\n     * @param overrideParams The parameters that are used to override and extend the regular SPRenderListDataParameters.\r\n     * @param query Allows setting of query parameters\r\n     */\r\n    renderListDataAsStream(parameters, overrideParams = null, query = new Map()) {\r\n        if (hOP(parameters, \"RenderOptions\") && isArray(parameters.RenderOptions)) {\r\n            parameters.RenderOptions = parameters.RenderOptions.reduce((v, c) => v + c);\r\n        }\r\n        let bodyOptions = { parameters: assign(metadata(\"SP.RenderListDataParameters\"), parameters) };\r\n        if (objectDefinedNotNull(overrideParams)) {\r\n            bodyOptions = assign(bodyOptions, { overrideParameters: assign(metadata(\"SP.RenderListDataOverrideParameters\"), overrideParams) });\r\n        }\r\n        const clone = this.clone(List, \"RenderListDataAsStream\", true, true);\r\n        if (query && query.size > 0) {\r\n            query.forEach((v, k) => clone.query.set(k, v));\r\n        }\r\n        return spPost(clone, body(bodyOptions));\r\n    }\r\n    /**\r\n     * Gets the field values and field schema attributes for a list item.\r\n     * @param itemId Item id of the item to render form data for\r\n     * @param formId The id of the form\r\n     * @param mode Enum representing the control mode of the form (Display, Edit, New)\r\n     */\r\n    renderListFormData(itemId, formId, mode) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const data = yield spPost(this.clone(List, `renderlistformdata(itemid=${itemId}, formid='${formId}', mode='${mode}')`));\r\n            // data will be a string, so we parse it again\r\n            return JSON.parse(hOP(data, \"RenderListFormData\") ? data.RenderListFormData : data);\r\n        });\r\n    }\r\n    /**\r\n     * Reserves a list item ID for idempotent list item creation.\r\n     */\r\n    reserveListItemId() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const data = yield spPost(this.clone(List, \"reservelistitemid\"));\r\n            return hOP(data, \"ReserveListItemId\") ? data.ReserveListItemId : data;\r\n        });\r\n    }\r\n    /**\r\n     * Returns the ListItemEntityTypeFullName for this list, used when adding/updating list items. Does not support batching.\r\n     */\r\n    getListItemEntityTypeFullName() {\r\n        // we cache these requests as the entity name doesn't change and we can save traffic\r\n        // this is justified as this method generates our second highest number of monthly executions ahead of item add and update\r\n        return this.clone(List, null, false).select(\"ListItemEntityTypeFullName\").usingCaching({\r\n            expiration: dateAdd(new Date(), \"day\", 5),\r\n            key: `PnPjs-ListEntityName:${this.toUrl()}`,\r\n            storeName: \"local\",\r\n        })().then(o => o.ListItemEntityTypeFullName);\r\n    }\r\n    /**\r\n     * Creates an item using path (in a folder), validates and sets its field values.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param decodedUrl Path decoded url; folder's server relative path.\r\n     * @param bNewDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     * @param checkInComment Optional check in comment.\r\n     * @param additionalProps Optional set of additional properties LeafName new document file name,\r\n     */\r\n    addValidateUpdateItemUsingPath(formValues, decodedUrl, bNewDocumentUpdate = false, checkInComment, additionalProps) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const addProps = {\r\n                FolderPath: toResourcePath(decodedUrl),\r\n            };\r\n            if (objectDefinedNotNull(additionalProps)) {\r\n                if (additionalProps.leafName) {\r\n                    addProps.LeafName = toResourcePath(additionalProps.leafName);\r\n                }\r\n                if (additionalProps.objectType) {\r\n                    addProps.UnderlyingObjectType = additionalProps.objectType;\r\n                }\r\n            }\r\n            const res = yield spPost(this.clone(List, \"AddValidateUpdateItemUsingPath()\"), body({\r\n                bNewDocumentUpdate,\r\n                checkInComment,\r\n                formValues,\r\n                listItemCreateInfo: assign(metadata(\"SP.ListItemCreationInformationUsingPath\"), addProps),\r\n            }));\r\n            return hOP(res, \"AddValidateUpdateItemUsingPath\") ? res.AddValidateUpdateItemUsingPath : res;\r\n        });\r\n    }\r\n    /**\r\n     * Gets the parent information for this item's list and web\r\n     */\r\n    getParentInfos() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const urlInfo = yield this.select(\"Id\", \"RootFolder/UniqueId\", \"RootFolder/ServerRelativeUrl\", \"RootFolder/ServerRelativePath\", \"ParentWeb/Id\", \"ParentWeb/Url\", \"ParentWeb/ServerRelativeUrl\", \"ParentWeb/ServerRelativePath\").expand(\"RootFolder\", \"ParentWeb\")();\r\n            return {\r\n                List: {\r\n                    Id: urlInfo.Id,\r\n                    RootFolderServerRelativePath: urlInfo.RootFolder.ServerRelativePath,\r\n                    RootFolderServerRelativeUrl: urlInfo.RootFolder.ServerRelativeUrl,\r\n                    RootFolderUniqueId: urlInfo.RootFolder.UniqueId,\r\n                },\r\n                ParentWeb: {\r\n                    Id: urlInfo.ParentWeb.Id,\r\n                    ServerRelativePath: urlInfo.ParentWeb.ServerRelativePath,\r\n                    ServerRelativeUrl: urlInfo.ParentWeb.ServerRelativeUrl,\r\n                    Url: urlInfo.ParentWeb.Url,\r\n                },\r\n            };\r\n        });\r\n    }\r\n}\r\n__decorate([\r\n    tag(\"l.update\")\r\n], _List.prototype, \"update\", null);\r\n__decorate([\r\n    tag(\"l.getChanges\")\r\n], _List.prototype, \"getChanges\", null);\r\n__decorate([\r\n    tag(\"l.CAMLQuery\")\r\n], _List.prototype, \"getItemsByCAMLQuery\", null);\r\n__decorate([\r\n    tag(\"l.ChangesSinceToken\")\r\n], _List.prototype, \"getListItemChangesSinceToken\", null);\r\n__decorate([\r\n    tag(\"l.recycle\")\r\n], _List.prototype, \"recycle\", null);\r\n__decorate([\r\n    tag(\"l.renderListData\")\r\n], _List.prototype, \"renderListData\", null);\r\n__decorate([\r\n    tag(\"l.AsStream\")\r\n], _List.prototype, \"renderListDataAsStream\", null);\r\n__decorate([\r\n    tag(\"l.renderListFormData\")\r\n], _List.prototype, \"renderListFormData\", null);\r\n__decorate([\r\n    tag(\"l.reserveListItemId\")\r\n], _List.prototype, \"reserveListItemId\", null);\r\n__decorate([\r\n    tag(\"l.getListItemEntityTypeFullName\")\r\n], _List.prototype, \"getListItemEntityTypeFullName\", null);\r\n__decorate([\r\n    tag(\"l.addValidateUpdateItemUsingPath\")\r\n], _List.prototype, \"addValidateUpdateItemUsingPath\", null);\r\nexport const List = spInvokableFactory(_List);\r\n/**\r\n * Enum representing the options of the RenderOptions property on IRenderListDataParameters interface\r\n */\r\nexport var RenderListDataOptions;\r\n(function (RenderListDataOptions) {\r\n    RenderListDataOptions[RenderListDataOptions[\"None\"] = 0] = \"None\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ContextInfo\"] = 1] = \"ContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListData\"] = 2] = \"ListData\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListSchema\"] = 4] = \"ListSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"MenuView\"] = 8] = \"MenuView\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListContentType\"] = 16] = \"ListContentType\";\r\n    RenderListDataOptions[RenderListDataOptions[\"FileSystemItemId\"] = 32] = \"FileSystemItemId\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientFormSchema\"] = 64] = \"ClientFormSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"QuickLaunch\"] = 128] = \"QuickLaunch\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Spotlight\"] = 256] = \"Spotlight\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Visualization\"] = 512] = \"Visualization\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ViewMetadata\"] = 1024] = \"ViewMetadata\";\r\n    RenderListDataOptions[RenderListDataOptions[\"DisableAutoHyperlink\"] = 2048] = \"DisableAutoHyperlink\";\r\n    RenderListDataOptions[RenderListDataOptions[\"EnableMediaTAUrls\"] = 4096] = \"EnableMediaTAUrls\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ParentInfo\"] = 8192] = \"ParentInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"PageContextInfo\"] = 16384] = \"PageContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientSideComponentManifest\"] = 32768] = \"ClientSideComponentManifest\";\r\n})(RenderListDataOptions || (RenderListDataOptions = {}));\r\n/**\r\n * Determines the display mode of the given control or view\r\n */\r\nexport var ControlMode;\r\n(function (ControlMode) {\r\n    ControlMode[ControlMode[\"Display\"] = 1] = \"Display\";\r\n    ControlMode[ControlMode[\"Edit\"] = 2] = \"Edit\";\r\n    ControlMode[ControlMode[\"New\"] = 3] = \"New\";\r\n})(ControlMode || (ControlMode = {}));\r\n//# sourceMappingURL=types.js.map","import { __awaiter } from \"tslib\";\r\nimport { addProp } from \"@pnp/odata\";\r\nimport { _Web, Web } from \"../webs/types.js\";\r\nimport { Lists, List } from \"./types.js\";\r\nimport { odataUrlFrom } from \"../odata.js\";\r\nimport { SharePointQueryableCollection } from \"../sharepointqueryable.js\";\r\nimport { escapeQueryStrValue } from \"../utils/escapeQueryStrValue.js\";\r\naddProp(_Web, \"lists\", Lists);\r\naddProp(_Web, \"siteUserInfoList\", List, \"siteuserinfolist\");\r\naddProp(_Web, \"defaultDocumentLibrary\", List, \"DefaultDocumentLibrary\");\r\naddProp(_Web, \"customListTemplates\", SharePointQueryableCollection, \"getcustomlisttemplates\");\r\n_Web.prototype.getList = function (listRelativeUrl) {\r\n    return List(this, `getList('${escapeQueryStrValue(listRelativeUrl)}')`);\r\n};\r\n_Web.prototype.getCatalog = function (type) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const data = yield this.clone(Web, `getcatalog(${type})`).select(\"Id\").get();\r\n        return List(odataUrlFrom(data));\r\n    });\r\n};\r\n//# sourceMappingURL=web.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { assign, combine, hOP, isUrlAbsolute } from \"@pnp/common\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { ODataParser } from \"@pnp/odata\";\r\nimport { extractWebUrl } from \"./utils/extractweburl.js\";\r\nexport function odataUrlFrom(candidate) {\r\n    const parts = [];\r\n    const s = [\"odata.type\", \"odata.editLink\", \"__metadata\", \"odata.metadata\", \"odata.id\"];\r\n    if (hOP(candidate, s[0]) && candidate[s[0]] === \"SP.Web\") {\r\n        // webs return an absolute url in the id\r\n        if (hOP(candidate, s[4])) {\r\n            parts.push(candidate[s[4]]);\r\n        }\r\n        else if (hOP(candidate, s[2])) {\r\n            // we are dealing with verbose, which has an absolute uri\r\n            parts.push(candidate.__metadata.uri);\r\n        }\r\n    }\r\n    else {\r\n        if (hOP(candidate, s[3]) && hOP(candidate, s[1])) {\r\n            // we are dealign with minimal metadata (default)\r\n            // some entities return an abosolute url in the editlink while for others it is relative\r\n            // without the _api. This code is meant to handle both situations\r\n            const editLink = isUrlAbsolute(candidate[s[1]]) ? candidate[s[1]].split(\"_api\")[1] : candidate[s[1]];\r\n            parts.push(extractWebUrl(candidate[s[3]]), \"_api\", editLink);\r\n        }\r\n        else if (hOP(candidate, s[1])) {\r\n            parts.push(\"_api\", candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[2])) {\r\n            // we are dealing with verbose, which has an absolute uri\r\n            parts.push(candidate.__metadata.uri);\r\n        }\r\n    }\r\n    if (parts.length < 1) {\r\n        Logger.write(\"No uri information found in ODataEntity parsing, chaining will fail for this object.\", 2 /* Warning */);\r\n        return \"\";\r\n    }\r\n    return combine(...parts);\r\n}\r\nclass SPODataEntityParserImpl extends ODataParser {\r\n    constructor(factory) {\r\n        super();\r\n        this.factory = factory;\r\n        this.hydrate = (d) => {\r\n            const o = this.factory(odataUrlFrom(d), null);\r\n            return assign(o, d);\r\n        };\r\n    }\r\n    parse(r) {\r\n        return super.parse(r).then((d) => {\r\n            const o = this.factory(odataUrlFrom(d), null);\r\n            return assign(o, d);\r\n        });\r\n    }\r\n}\r\nclass SPODataEntityArrayParserImpl extends ODataParser {\r\n    constructor(factory) {\r\n        super();\r\n        this.factory = factory;\r\n        this.hydrate = (d) => {\r\n            return d.map(v => {\r\n                const o = this.factory(odataUrlFrom(v), null);\r\n                return assign(o, v);\r\n            });\r\n        };\r\n    }\r\n    parse(r) {\r\n        return super.parse(r).then((d) => {\r\n            return d.map(v => {\r\n                const o = this.factory(odataUrlFrom(v), null);\r\n                return assign(o, v);\r\n            });\r\n        });\r\n    }\r\n}\r\nexport function spODataEntity(factory) {\r\n    return new SPODataEntityParserImpl(factory);\r\n}\r\nexport function spODataEntityArray(factory) {\r\n    return new SPODataEntityArrayParserImpl(factory);\r\n}\r\n//# sourceMappingURL=odata.js.map","import { __awaiter } from \"tslib\";\r\nimport { defaultPipelineBinder, cloneQueryableData, headers } from \"@pnp/odata\";\r\nimport { SPHttpClient } from \"./sphttpclient.js\";\r\nimport { mergeOptions, objectDefinedNotNull, isFunc } from \"@pnp/common\";\r\nimport { toAbsoluteUrl } from \"./utils/toabsoluteurl.js\";\r\nexport function registerCustomRequestClientFactory(requestClientFactory) {\r\n    httpClientFactory = isFunc(requestClientFactory) ? () => requestClientFactory : defaultFactory;\r\n}\r\nconst defaultFactory = (runtime) => () => new SPHttpClient(runtime);\r\nlet httpClientFactory = defaultFactory;\r\nconst send = (method) => {\r\n    return function (o, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // use the current runtime\r\n            const runtime = o.getRuntime();\r\n            const operation = defaultPipelineBinder(httpClientFactory(runtime))(method);\r\n            const data = cloneQueryableData(o.data);\r\n            const batchDependency = objectDefinedNotNull(data.batch) ? data.batch.addDependency() : () => {\r\n                return;\r\n            };\r\n            const url = yield toAbsoluteUrl(o.toUrlAndQuery(), runtime);\r\n            mergeOptions(data.options, options);\r\n            return operation(Object.assign({}, data, {\r\n                batchDependency,\r\n                url,\r\n            }));\r\n        });\r\n    };\r\n};\r\nexport const spGet = (o, options) => {\r\n    // Fix for #304 - when we clone objects we in some cases then execute a get request\r\n    // in these cases the caching settings were getting dropped from the request\r\n    // this tracks if the object from which this was cloned was caching and applies that to an immediate get request\r\n    // does not affect objects cloned from this as we are using different fields to track the settings so it won't\r\n    // be triggered\r\n    if (o.data.cloneParentWasCaching) {\r\n        o.usingCaching(o.data.cloneParentCacheOptions);\r\n    }\r\n    // if we are forcing caching set that in the data here\r\n    if (o._forceCaching) {\r\n        o.data.useCaching = true;\r\n    }\r\n    return send(\"GET\")(o, options);\r\n};\r\nexport const spPost = (o, options) => send(\"POST\")(o, options);\r\nexport const spDelete = (o, options) => send(\"DELETE\")(o, options);\r\nexport const spPatch = (o, options) => send(\"PATCH\")(o, options);\r\nexport const spPostDelete = (o, options) => {\r\n    const opts = Object.assign(headers({ \"X-HTTP-Method\": \"DELETE\" }), options);\r\n    return spPost(o, opts);\r\n};\r\nexport const spPostDeleteETag = (o, options, eTag = \"*\") => {\r\n    const opts = Object.assign(headers({ \"X-HTTP-Method\": \"DELETE\", \"IF-Match\": eTag }), options);\r\n    return spPost(o, opts);\r\n};\r\n//# sourceMappingURL=operations.js.map","import { __awaiter } from \"tslib\";\r\nimport { DefaultRuntime, Runtime } from \"@pnp/common\";\r\nimport { setup as _setup, } from \"./splibconfig.js\";\r\n/**\r\n * Root of the SharePoint REST module\r\n */\r\nexport class SPRest {\r\n    /**\r\n     * Creates a new instance of the SPRest class\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    constructor(_options = {}, _baseUrl = \"\", _runtime = DefaultRuntime) {\r\n        this._options = _options;\r\n        this._baseUrl = _baseUrl;\r\n        this._runtime = _runtime;\r\n    }\r\n    /**\r\n     * Configures instance with additional options and baseUrl.\r\n     * Provided configuration used by other objects in a chain\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    configure(options, baseUrl = \"\") {\r\n        return new SPRest(options, baseUrl);\r\n    }\r\n    /**\r\n     * Global SharePoint configuration options\r\n     *\r\n     * @param config The SharePoint configuration to apply\r\n     */\r\n    setup(config) {\r\n        if (config.pageContext) {\r\n            _setup({\r\n                spfxContext: config,\r\n            }, this._runtime);\r\n        }\r\n        else {\r\n            _setup(config, this._runtime);\r\n        }\r\n    }\r\n    createIsolated(init) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // merge our defaults\r\n            init = Object.assign({\r\n                baseUrl: \"\",\r\n                cloneGlobal: true,\r\n                config: {},\r\n                options: {},\r\n            }, init || {});\r\n            const { baseUrl, cloneGlobal, options, config } = init;\r\n            const runtime = cloneGlobal ? new Runtime(DefaultRuntime.export()) : new Runtime();\r\n            runtime.assign(config);\r\n            return new SPRest(options, baseUrl, runtime);\r\n        });\r\n    }\r\n    childConfigHook(callback) {\r\n        return callback({ options: this._options, baseUrl: this._baseUrl, runtime: this._runtime });\r\n    }\r\n}\r\nexport const sp = new SPRest();\r\n//# sourceMappingURL=rest.js.map","import { combine, isUrlAbsolute, assign, jsS } from \"@pnp/common\";\r\nimport { Queryable, invokableFactory } from \"@pnp/odata\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { metadata } from \"./utils/metadata.js\";\r\nimport { spGet, spPost, spPostDelete, spPostDeleteETag } from \"./operations.js\";\r\nimport { tag } from \"./telemetry.js\";\r\nexport const spInvokableFactory = (f) => {\r\n    return invokableFactory(f);\r\n};\r\n/**\r\n * SharePointQueryable Base Class\r\n *\r\n */\r\nexport class _SharePointQueryable extends Queryable {\r\n    /**\r\n     * Creates a new instance of the SharePointQueryable class\r\n     *\r\n     * @constructor\r\n     * @param baseUrl A string or SharePointQueryable that should form the base part of the url\r\n     *\r\n     */\r\n    constructor(baseUrl, path) {\r\n        let url = \"\";\r\n        let parentUrl = \"\";\r\n        const query = new Map();\r\n        if (typeof baseUrl === \"string\") {\r\n            // we need to do some extra parsing to get the parent url correct if we are\r\n            // being created from just a string.\r\n            if (isUrlAbsolute(baseUrl) || baseUrl.lastIndexOf(\"/\") < 0) {\r\n                parentUrl = baseUrl;\r\n                url = combine(baseUrl, path);\r\n            }\r\n            else if (baseUrl.lastIndexOf(\"/\") > baseUrl.lastIndexOf(\"(\")) {\r\n                // .../items(19)/fields\r\n                const index = baseUrl.lastIndexOf(\"/\");\r\n                parentUrl = baseUrl.slice(0, index);\r\n                path = combine(baseUrl.slice(index), path);\r\n                url = combine(parentUrl, path);\r\n            }\r\n            else {\r\n                // .../items(19)\r\n                const index = baseUrl.lastIndexOf(\"(\");\r\n                parentUrl = baseUrl.slice(0, index);\r\n                url = combine(baseUrl, path);\r\n            }\r\n        }\r\n        else {\r\n            parentUrl = baseUrl.toUrl();\r\n            url = combine(parentUrl, path || \"\");\r\n            const target = baseUrl.query.get(\"@target\");\r\n            if (target !== undefined) {\r\n                query.set(\"@target\", target);\r\n            }\r\n        }\r\n        // init base with correct values for data seed\r\n        super({\r\n            parentUrl,\r\n            query,\r\n            url,\r\n        });\r\n        // post init actions\r\n        if (typeof baseUrl !== \"string\") {\r\n            this.configureFrom(baseUrl);\r\n        }\r\n        this._forceCaching = false;\r\n    }\r\n    /**\r\n     * Gets the full url with query information\r\n     */\r\n    toUrlAndQuery() {\r\n        const aliasedParams = new Map(this.query);\r\n        let url = this.toUrl().replace(/'!(@.*?)::(.*?)'/ig, (match, labelName, value) => {\r\n            Logger.write(`Rewriting aliased parameter from match ${match} to label: ${labelName} value: ${value}`, 0 /* Verbose */);\r\n            aliasedParams.set(labelName, `'${value}'`);\r\n            return labelName;\r\n        });\r\n        if (aliasedParams.size > 0) {\r\n            const char = url.indexOf(\"?\") > -1 ? \"&\" : \"?\";\r\n            url += `${char}${Array.from(aliasedParams).map((v) => v[0] + \"=\" + v[1]).join(\"&\")}`;\r\n        }\r\n        return url;\r\n    }\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    select(...selects) {\r\n        if (selects.length > 0) {\r\n            this.query.set(\"$select\", selects.map(encodeURIComponent).join(\",\"));\r\n        }\r\n        return this;\r\n    }\r\n    get(options) {\r\n        return spGet(this, options);\r\n    }\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    expand(...expands) {\r\n        if (expands.length > 0) {\r\n            this.query.set(\"$expand\", expands.map(encodeURIComponent).join(\",\"));\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Clones this SharePointQueryable into a new SharePointQueryable instance of T\r\n     * @param factory Constructor used to create the new instance\r\n     * @param additionalPath Any additional path to include in the clone\r\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\r\n     * @param includeQuery If true all of the query values will be copied to the cloned instance\r\n     */\r\n    clone(factory, additionalPath, includeBatch = true, includeQuery = false) {\r\n        const clone = super.cloneTo(factory(this, additionalPath), { includeBatch, includeQuery });\r\n        // handle sp specific clone actions\r\n        if (!includeQuery) {\r\n            // we would have already copied this over if we got the entire query\r\n            const t = \"@target\";\r\n            if (this.query.has(t)) {\r\n                clone.query.set(t, this.query.get(t));\r\n            }\r\n        }\r\n        return clone;\r\n    }\r\n    /**\r\n     * The default action for this object (unless overridden spGet)\r\n     *\r\n     * @param options optional request options\r\n     */\r\n    defaultAction(options) {\r\n        return spGet(this, options);\r\n    }\r\n    /**\r\n     * Gets a parent for this instance as specified\r\n     *\r\n     * @param factory The contructor for the class to create\r\n     */\r\n    getParent(factory, baseUrl = this.parentUrl, path, batch) {\r\n        let parent = factory(baseUrl, path).configureFrom(this);\r\n        const t = \"@target\";\r\n        if (this.query.has(t)) {\r\n            parent.query.set(t, this.query.get(t));\r\n        }\r\n        if (batch !== undefined) {\r\n            parent = parent.inBatch(batch);\r\n        }\r\n        return parent;\r\n    }\r\n}\r\nexport const SharePointQueryable = spInvokableFactory(_SharePointQueryable);\r\n/**\r\n * Represents a REST collection which can be filtered, paged, and selected\r\n *\r\n */\r\nexport class _SharePointQueryableCollection extends _SharePointQueryable {\r\n    /**\r\n     * Filters the returned collection (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#bk_supported)\r\n     *\r\n     * @param filter The string representing the filter query\r\n     */\r\n    filter(filter) {\r\n        this.query.set(\"$filter\", encodeURIComponent(filter));\r\n        return this;\r\n    }\r\n    /**\r\n     * Orders based on the supplied fields\r\n     *\r\n     * @param orderby The name of the field on which to sort\r\n     * @param ascending If false DESC is appended, otherwise ASC (default)\r\n     */\r\n    orderBy(orderBy, ascending = true) {\r\n        const o = \"$orderby\";\r\n        const query = this.query.has(o) ? this.query.get(o).split(\",\") : [];\r\n        query.push(`${encodeURIComponent(orderBy)} ${ascending ? \"asc\" : \"desc\"}`);\r\n        this.query.set(o, query.join(\",\"));\r\n        return this;\r\n    }\r\n    /**\r\n     * Skips the specified number of items\r\n     *\r\n     * @param skip The number of items to skip\r\n     */\r\n    skip(skip) {\r\n        this.query.set(\"$skip\", skip.toString());\r\n        return this;\r\n    }\r\n    /**\r\n     * Limits the query to only return the specified number of items\r\n     *\r\n     * @param top The query row limit\r\n     */\r\n    top(top) {\r\n        this.query.set(\"$top\", top.toString());\r\n        return this;\r\n    }\r\n}\r\nexport const SharePointQueryableCollection = spInvokableFactory(_SharePointQueryableCollection);\r\n/**\r\n * Represents an instance that can be selected\r\n *\r\n */\r\nexport class _SharePointQueryableInstance extends _SharePointQueryable {\r\n    /**\r\n     * Curries the update function into the common pieces\r\n     *\r\n     * @param type\r\n     * @param mapper\r\n     */\r\n    _update(type, mapper) {\r\n        return (props) => spPost(tag.configure(this, `${type}.Update`), {\r\n            body: jsS(assign(metadata(type), props)),\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then((d) => mapper(d, props));\r\n    }\r\n}\r\nexport const SharePointQueryableInstance = spInvokableFactory(_SharePointQueryableInstance);\r\n/**\r\n * Adds the a delete method to the tagged class taking no parameters and calling spPostDelete\r\n */\r\nexport function deleteable(t) {\r\n    return function () {\r\n        return spPostDelete(tag.configure(this, `${t}.delete`));\r\n    };\r\n}\r\nexport function deleteableWithETag(t) {\r\n    return function (eTag = \"*\") {\r\n        return spPostDeleteETag(tag.configure(this, `${t}.delete`), {}, eTag);\r\n    };\r\n}\r\n//# sourceMappingURL=sharepointqueryable.js.map","import { SPRest } from \"../rest.js\";\r\nimport { Site } from \"./types.js\";\r\nexport { Site, } from \"./types.js\";\r\nReflect.defineProperty(SPRest.prototype, \"site\", {\r\n    configurable: true,\r\n    enumerable: true,\r\n    get: function () {\r\n        return this.childConfigHook(({ options, baseUrl, runtime }) => {\r\n            return Site(baseUrl).configure(options).setRuntime(runtime);\r\n        });\r\n    },\r\n});\r\n//# sourceMappingURL=index.js.map","import { __awaiter, __decorate } from \"tslib\";\r\nimport { SharePointQueryable, _SharePointQueryableInstance, spInvokableFactory } from \"../sharepointqueryable.js\";\r\nimport { defaultPath } from \"../decorators.js\";\r\nimport { Web } from \"../webs/types.js\";\r\nimport { hOP, assign } from \"@pnp/common\";\r\nimport { body } from \"@pnp/odata\";\r\nimport { odataUrlFrom } from \"../odata.js\";\r\nimport { spPost } from \"../operations.js\";\r\nimport { SPBatch } from \"../batch.js\";\r\nimport { escapeQueryStrValue } from \"../utils/escapeQueryStrValue.js\";\r\nimport { tag } from \"../telemetry.js\";\r\nimport { metadata } from \"../utils/metadata.js\";\r\nimport { extractWebUrl } from \"../utils/extractweburl.js\";\r\nimport { emptyGuid } from \"../splibconfig.js\";\r\nlet _Site = class _Site extends _SharePointQueryableInstance {\r\n    /**\r\n     * Gets the root web of the site collection\r\n     *\r\n     */\r\n    get rootWeb() {\r\n        return tag.configure(Web(this, \"rootweb\"), \"si.rootWeb\");\r\n    }\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query\r\n     *\r\n     * @param query The change query\r\n     */\r\n    getChanges(query) {\r\n        const postBody = body({ \"query\": assign(metadata(\"SP.ChangeQuery\"), query) });\r\n        return spPost(this.clone(Web, \"getchanges\"), postBody);\r\n    }\r\n    /**\r\n     * Opens a web by id (using POST)\r\n     *\r\n     * @param webId The GUID id of the web to open\r\n     */\r\n    openWebById(webId) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const data = yield spPost(this.clone(Site, `openWebById('${webId}')`));\r\n            return {\r\n                data,\r\n                web: Web(extractWebUrl(odataUrlFrom(data))),\r\n            };\r\n        });\r\n    }\r\n    /**\r\n     * Gets a Web instance representing the root web of the site collection\r\n     * correctly setup for chaining within the library\r\n     */\r\n    getRootWeb() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const web = yield this.rootWeb.select(\"Url\")();\r\n            return tag.configure(Web(web.Url), \"si.getRootWeb\");\r\n        });\r\n    }\r\n    /**\r\n     * Gets the context information for this site collection\r\n     */\r\n    getContextInfo() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const q = tag.configure(Site(this.parentUrl, \"_api/contextinfo\"), \"si.getContextInfo\");\r\n            const data = yield spPost(q);\r\n            if (hOP(data, \"GetContextWebInformation\")) {\r\n                const info = data.GetContextWebInformation;\r\n                info.SupportedSchemaVersions = info.SupportedSchemaVersions.results;\r\n                return info;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    }\r\n    createBatch() {\r\n        return new SPBatch(this.parentUrl, this.getRuntime());\r\n    }\r\n    /**\r\n     * Deletes the current site\r\n     *\r\n     */\r\n    delete() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const site = yield this.clone(Site, \"\").select(\"Id\")();\r\n            const q = tag.configure(Site(this.parentUrl, \"_api/SPSiteManager/Delete\"), \"si.delete\");\r\n            yield spPost(q, body({ siteId: site.Id }));\r\n        });\r\n    }\r\n    /**\r\n     * Gets the document libraries on a site. Static method. (SharePoint Online only)\r\n     *\r\n     * @param absoluteWebUrl The absolute url of the web whose document libraries should be returned\r\n     */\r\n    getDocumentLibraries(absoluteWebUrl) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const q = tag.configure(SharePointQueryable(\"\", \"_api/sp.web.getdocumentlibraries(@v)\"), \"si.getDocumentLibraries\");\r\n            q.query.set(\"@v\", `'${escapeQueryStrValue(absoluteWebUrl)}'`);\r\n            const data = yield q();\r\n            return hOP(data, \"GetDocumentLibraries\") ? data.GetDocumentLibraries : data;\r\n        });\r\n    }\r\n    /**\r\n     * Gets the site url from a page url\r\n     *\r\n     * @param absolutePageUrl The absolute url of the page\r\n     */\r\n    getWebUrlFromPageUrl(absolutePageUrl) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const q = tag.configure(SharePointQueryable(\"\", \"_api/sp.web.getweburlfrompageurl(@v)\"), \"si.getWebUrlFromPageUrl\");\r\n            q.query.set(\"@v\", `'${escapeQueryStrValue(absolutePageUrl)}'`);\r\n            const data = yield q();\r\n            return hOP(data, \"GetWebUrlFromPageUrl\") ? data.GetWebUrlFromPageUrl : data;\r\n        });\r\n    }\r\n    /**\r\n     * Creates a Modern communication site.\r\n     *\r\n     * @param title The title of the site to create\r\n     * @param lcid The language to use for the site. If not specified will default to 1033 (English).\r\n     * @param shareByEmailEnabled If set to true, it will enable sharing files via Email. By default it is set to false\r\n     * @param url The fully qualified URL (e.g. https://yourtenant.sharepoint.com/sites/mysitecollection) of the site.\r\n     * @param description The description of the communication site.\r\n     * @param classification The Site classification to use. For instance 'Contoso Classified'. See https://www.youtube.com/watch?v=E-8Z2ggHcS0 for more information\r\n     * @param siteDesignId The Guid of the site design to be used.\r\n     *                     You can use the below default OOTB GUIDs:\r\n     *                     Topic: 00000000-0000-0000-0000-000000000000\r\n     *                     Showcase: 6142d2a0-63a5-4ba0-aede-d9fefca2c767\r\n     *                     Blank: f6cc5403-0d63-442e-96c0-285923709ffc\r\n     * @param hubSiteId The id of the hub site to which the new site should be associated\r\n     * @param owner Optional owner value, required if executing the method in app only mode\r\n     */\r\n    createCommunicationSite(title, lcid = 1033, shareByEmailEnabled = false, url, description, classification, siteDesignId, hubSiteId, owner) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this.createCommunicationSiteFromProps({\r\n                Classification: classification,\r\n                Description: description,\r\n                HubSiteId: hubSiteId,\r\n                Lcid: lcid,\r\n                Owner: owner,\r\n                ShareByEmailEnabled: shareByEmailEnabled,\r\n                SiteDesignId: siteDesignId,\r\n                Title: title,\r\n                Url: url,\r\n            });\r\n        });\r\n    }\r\n    createCommunicationSiteFromProps(props) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // handle defaults\r\n            const p = Object.assign({}, {\r\n                Classification: \"\",\r\n                Description: \"\",\r\n                HubSiteId: emptyGuid,\r\n                Lcid: 1033,\r\n                ShareByEmailEnabled: false,\r\n                SiteDesignId: emptyGuid,\r\n                WebTemplate: \"SITEPAGEPUBLISHING#0\",\r\n                WebTemplateExtensionId: emptyGuid,\r\n            }, props);\r\n            const postBody = body({\r\n                \"request\": assign(metadata(\"Microsoft.SharePoint.Portal.SPSiteCreationRequest\"), p),\r\n            });\r\n            return spPost(Site(extractWebUrl(this.toUrl()), \"/_api/SPSiteManager/Create\"), postBody);\r\n        });\r\n    }\r\n    /**\r\n     *\r\n     * @param url Site Url that you want to check if exists\r\n     */\r\n    exists(url) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const postBody = body({ url });\r\n            const value = yield spPost(Site(extractWebUrl(this.toUrl()), \"/_api/SP.Site.Exists\"), postBody);\r\n            return value;\r\n        });\r\n    }\r\n    /**\r\n     * Creates a Modern team site backed by Office 365 group. For use in SP Online only. This will not work with App-only tokens\r\n     *\r\n     * @param displayName The title or display name of the Modern team site to be created\r\n     * @param alias Alias of the underlying Office 365 Group\r\n     * @param isPublic Defines whether the Office 365 Group will be public (default), or private.\r\n     * @param lcid The language to use for the site. If not specified will default to English (1033).\r\n     * @param description The description of the site to be created.\r\n     * @param classification The Site classification to use. For instance 'Contoso Classified'. See https://www.youtube.com/watch?v=E-8Z2ggHcS0 for more information\r\n     * @param owners The Owners of the site to be created\r\n     */\r\n    createModernTeamSite(displayName, alias, isPublic, lcid, description, classification, owners, hubSiteId, siteDesignId) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this.createModernTeamSiteFromProps({\r\n                alias,\r\n                classification,\r\n                description,\r\n                displayName,\r\n                hubSiteId,\r\n                isPublic,\r\n                lcid,\r\n                owners,\r\n                siteDesignId,\r\n            });\r\n        });\r\n    }\r\n    createModernTeamSiteFromProps(props) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // handle defaults\r\n            const p = Object.assign({}, {\r\n                classification: \"\",\r\n                description: \"\",\r\n                hubSiteId: emptyGuid,\r\n                isPublic: true,\r\n                lcid: 1033,\r\n                owners: [],\r\n            }, props);\r\n            const postBody = {\r\n                alias: p.alias,\r\n                displayName: p.displayName,\r\n                isPublic: p.isPublic,\r\n                optionalParams: {\r\n                    Classification: p.classification,\r\n                    CreationOptions: {\r\n                        \"results\": [`SPSiteLanguage:${p.lcid}`, `HubSiteId:${p.hubSiteId}`],\r\n                    },\r\n                    Description: p.description,\r\n                    Owners: {\r\n                        \"results\": p.owners,\r\n                    },\r\n                },\r\n            };\r\n            if (p.siteDesignId) {\r\n                postBody.optionalParams.CreationOptions.results.push(`implicit_formula_292aa8a00786498a87a5ca52d9f4214a_${p.siteDesignId}`);\r\n            }\r\n            return spPost(Site(extractWebUrl(this.toUrl()), \"/_api/GroupSiteManager/CreateGroupEx\"), body(postBody));\r\n        });\r\n    }\r\n};\r\n__decorate([\r\n    tag(\"si.getChanges\")\r\n], _Site.prototype, \"getChanges\", null);\r\n__decorate([\r\n    tag(\"si.openWebById\")\r\n], _Site.prototype, \"openWebById\", null);\r\n_Site = __decorate([\r\n    defaultPath(\"_api/site\")\r\n], _Site);\r\nexport { _Site };\r\nexport const Site = spInvokableFactory(_Site);\r\n//# sourceMappingURL=types.js.map","import { __awaiter } from \"tslib\";\r\nimport { assign, mergeHeaders, getCtxCallback, combine, dateAdd, DefaultRuntime, Runtime, } from \"@pnp/common\";\r\nimport { extractWebUrl } from \"./utils/extractweburl.js\";\r\nimport { tag } from \"./telemetry.js\";\r\nimport { ODataParser } from \"@pnp/odata\";\r\nexport class SPHttpClient {\r\n    constructor(...args) {\r\n        // constructor(...args: [runtime: Runtime] | [impl: IHttpClientImpl, runtime?: Runtime]) {\r\n        var _a;\r\n        if (args[0] instanceof Runtime) {\r\n            this._runtime = args[0];\r\n        }\r\n        else {\r\n            this._runtime = args.length > 1 && args[1] instanceof Runtime ? args[1] : DefaultRuntime;\r\n            this._impl = args[0];\r\n        }\r\n        this._impl = ((_a = this._runtime.get(\"sp\")) === null || _a === void 0 ? void 0 : _a.fetchClientFactory()) || null;\r\n        if (this._impl === null) {\r\n            throw Error(\"Could not generate fetchClientFactory in SPHttpClient.\");\r\n        }\r\n        this._digestCache = getDigestFactory(this);\r\n    }\r\n    fetch(url, options = {}) {\r\n        var _a, _b;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let opts = assign(options, { cache: \"no-cache\", credentials: \"same-origin\" }, true);\r\n            const headers = new Headers();\r\n            // first we add the global headers so they can be overwritten by any passed in locally to this call\r\n            mergeHeaders(headers, (_b = (_a = this._runtime.get(\"sp\")) === null || _a === void 0 ? void 0 : _a.sp) === null || _b === void 0 ? void 0 : _b.headers);\r\n            // second we add the local options so we can overwrite the globals\r\n            mergeHeaders(headers, options.headers);\r\n            // lastly we apply any default headers we need that may not exist\r\n            if (!headers.has(\"Accept\")) {\r\n                headers.append(\"Accept\", \"application/json\");\r\n            }\r\n            if (!headers.has(\"Content-Type\")) {\r\n                headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n            }\r\n            if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n                const methodName = tag.getClientTag(headers);\r\n                let clientTag = `PnPCoreJS:2.1.0:${methodName}`;\r\n                if (clientTag.length > 32) {\r\n                    clientTag = clientTag.substr(0, 32);\r\n                }\r\n                headers.append(\"X-ClientService-ClientTag\", clientTag);\r\n            }\r\n            opts = assign(opts, { headers: headers });\r\n            // if we have either a request digest or an authorization header we don't need a digest\r\n            if (opts.method && opts.method.toUpperCase() !== \"GET\" && !headers.has(\"X-RequestDigest\") && !headers.has(\"Authorization\")) {\r\n                const digest = yield this._digestCache(extractWebUrl(url));\r\n                headers.append(\"X-RequestDigest\", digest);\r\n            }\r\n            return this.fetchRaw(url, opts);\r\n        });\r\n    }\r\n    fetchRaw(url, options = {}) {\r\n        // here we need to normalize the headers\r\n        const rawHeaders = new Headers();\r\n        mergeHeaders(rawHeaders, options.headers);\r\n        options = assign(options, { headers: rawHeaders });\r\n        const retry = (ctx) => {\r\n            // handles setting the proper timeout for a retry\r\n            const setRetry = (response) => {\r\n                let delay;\r\n                if (response.headers.has(\"Retry-After\")) {\r\n                    // if we have gotten a header, use that value as the delay value in seconds\r\n                    delay = parseInt(response.headers.get(\"Retry-After\"), 10) * 1000;\r\n                }\r\n                else {\r\n                    // grab our current delay\r\n                    delay = ctx.delay;\r\n                    // Increment our counters.\r\n                    ctx.delay *= 2;\r\n                }\r\n                ctx.attempts++;\r\n                // If we have exceeded the retry count, reject.\r\n                if (ctx.retryCount <= ctx.attempts) {\r\n                    ctx.reject(Error(`Retry count exceeded (${ctx.retryCount}) for request. Response status: [${response.status}] ${response.statusText}`));\r\n                }\r\n                else {\r\n                    // Set our retry timeout for {delay} milliseconds.\r\n                    setTimeout(getCtxCallback(this, retry, ctx), delay);\r\n                }\r\n            };\r\n            // send the actual request\r\n            this._impl.fetch(url, options).then((response) => {\r\n                if (response.status === 429) {\r\n                    // we have been throttled\r\n                    setRetry(response);\r\n                }\r\n                else {\r\n                    ctx.resolve(response);\r\n                }\r\n            }).catch((response) => {\r\n                if (response.status === 503 || response.status === 504) {\r\n                    // http status code 503 or 504, we can retry this\r\n                    setRetry(response);\r\n                }\r\n                else {\r\n                    ctx.reject(response);\r\n                }\r\n            });\r\n        };\r\n        return new Promise((resolve, reject) => {\r\n            retry.call(this, {\r\n                attempts: 0,\r\n                delay: 100,\r\n                reject: reject,\r\n                resolve: resolve,\r\n                retryCount: 7,\r\n            });\r\n        });\r\n    }\r\n    get(url, options = {}) {\r\n        const opts = assign(options, { method: \"GET\" });\r\n        return this.fetch(url, opts);\r\n    }\r\n    post(url, options = {}) {\r\n        const opts = assign(options, { method: \"POST\" });\r\n        return this.fetch(url, opts);\r\n    }\r\n    patch(url, options = {}) {\r\n        const opts = assign(options, { method: \"PATCH\" });\r\n        return this.fetch(url, opts);\r\n    }\r\n    delete(url, options = {}) {\r\n        const opts = assign(options, { method: \"DELETE\" });\r\n        return this.fetch(url, opts);\r\n    }\r\n}\r\n// allows for the caching of digests across all HttpClient's which each have their own DigestCache wrapper.\r\nconst digests = new Map();\r\nfunction getDigestFactory(client) {\r\n    return (webUrl) => __awaiter(this, void 0, void 0, function* () {\r\n        var _a, _b;\r\n        const cachedDigest = digests.get(webUrl);\r\n        if (cachedDigest !== undefined) {\r\n            const now = new Date();\r\n            if (now < cachedDigest.expiration) {\r\n                return cachedDigest.value;\r\n            }\r\n        }\r\n        const url = combine(webUrl, \"/_api/contextinfo\");\r\n        const headers = {\r\n            \"Accept\": \"application/json;odata=verbose\",\r\n            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\r\n        };\r\n        const resp = yield client.fetchRaw(url, {\r\n            cache: \"no-cache\",\r\n            credentials: \"same-origin\",\r\n            headers: assign(headers, (_b = (_a = client._runtime.get(\"sp\")) === null || _a === void 0 ? void 0 : _a.sp) === null || _b === void 0 ? void 0 : _b.headers, true),\r\n            method: \"POST\",\r\n        });\r\n        const parsed = yield (new ODataParser()).parse(resp).then(r => r.GetContextWebInformation);\r\n        const newCachedDigest = {\r\n            expiration: dateAdd(new Date(), \"second\", parsed.FormDigestTimeoutSeconds),\r\n            value: parsed.FormDigestValue,\r\n        };\r\n        digests.set(webUrl, newCachedDigest);\r\n        return newCachedDigest.value;\r\n    });\r\n}\r\n//# sourceMappingURL=sphttpclient.js.map","import { FetchClient, DefaultRuntime, onRuntimeCreate, } from \"@pnp/common\";\r\nexport const emptyGuid = \"00000000-0000-0000-0000-000000000000\";\r\nonRuntimeCreate((runtime) => {\r\n    const existing = runtime.get(\"sp\");\r\n    const spPart = Object.assign({}, {\r\n        fetchClientFactory: () => new FetchClient(),\r\n    }, existing);\r\n    runtime.assign({ sp: spPart });\r\n});\r\nexport function setup(config, runtime = DefaultRuntime) {\r\n    runtime.assign(config);\r\n}\r\n//# sourceMappingURL=splibconfig.js.map","import { __awaiter } from \"tslib\";\r\nimport { stringIsNullOrEmpty } from \"@pnp/common\";\r\nimport { headers } from \"@pnp/odata\";\r\n/**\r\n * Includes this method name in the X-ClientService-ClientTag used to record pnpjs usage\r\n *\r\n * @param name Method name, displayed in the\r\n */\r\nexport function tag(name) {\r\n    return function (target, key, descriptor) {\r\n        if (descriptor === undefined) {\r\n            descriptor = Object.getOwnPropertyDescriptor(target, key);\r\n        }\r\n        const originalMethod = descriptor.value;\r\n        descriptor.value = function (...args) {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                this.configure(headers({ \"X-PnPjs-Tracking\": name }));\r\n                return originalMethod.apply(this, args);\r\n            });\r\n        };\r\n        return descriptor;\r\n    };\r\n}\r\ntag.getClientTag = (h, deleteFromCollection = true) => {\r\n    if (h.has(\"X-PnPjs-Tracking\")) {\r\n        const methodName = h.get(\"X-PnPjs-Tracking\");\r\n        if (deleteFromCollection) {\r\n            h.delete(\"X-PnPjs-Tracking\");\r\n        }\r\n        if (!stringIsNullOrEmpty(methodName)) {\r\n            return methodName;\r\n        }\r\n    }\r\n    return \"\";\r\n};\r\ntag.configure = (o, name) => {\r\n    return o.configure(headers({ \"X-PnPjs-Tracking\": name }));\r\n};\r\ntag.isTagged = (o) => {\r\n    return o.data.options.headers && o.data.options.headers[\"X-PnPjs-Tracking\"];\r\n};\r\n//# sourceMappingURL=telemetry.js.map","import { stringIsNullOrEmpty } from \"@pnp/common\";\r\nimport { Logger } from \"@pnp/logging\";\r\nexport function escapeQueryStrValue(value) {\r\n    if (stringIsNullOrEmpty(value)) {\r\n        return \"\";\r\n    }\r\n    // replace all instance of ' with ''\r\n    if (/!(@.*?)::(.*?)/ig.test(value)) {\r\n        // to ensure our param aliasing still works we need to treat these special or we'll hear about it\r\n        // so we encode JUST the part that will end up in the url\r\n        return value.replace(/!(@.*?)::(.*)$/ig, (match, labelName, v) => {\r\n            Logger.write(`Rewriting aliased parameter from match ${match} to label: ${labelName} value: ${v}`, 0 /* Verbose */);\r\n            return `!${labelName}::${encodeURIComponent(v.replace(/'/ig, \"''\"))}`;\r\n        });\r\n    }\r\n    else {\r\n        return encodeURIComponent(value.replace(/'/ig, \"''\"));\r\n    }\r\n}\r\n//# sourceMappingURL=escapeQueryStrValue.js.map","import { stringIsNullOrEmpty } from \"@pnp/common\";\r\nexport function extractWebUrl(candidateUrl) {\r\n    if (stringIsNullOrEmpty(candidateUrl)) {\r\n        return \"\";\r\n    }\r\n    let index = candidateUrl.indexOf(\"_api/\");\r\n    if (index < 0) {\r\n        index = candidateUrl.indexOf(\"_vti_bin/\");\r\n    }\r\n    if (index > -1) {\r\n        return candidateUrl.substr(0, index);\r\n    }\r\n    // if all else fails just give them what they gave us back\r\n    return candidateUrl;\r\n}\r\n//# sourceMappingURL=extractweburl.js.map","export function metadata(type) {\r\n    return {\r\n        \"__metadata\": { \"type\": type },\r\n    };\r\n}\r\n//# sourceMappingURL=metadata.js.map","export function toResourcePath(url) {\r\n    return {\r\n        DecodedUrl: url,\r\n        __metadata: { type: \"SP.ResourcePath\" },\r\n    };\r\n}\r\n//# sourceMappingURL=toResourcePath.js.map","import { __awaiter } from \"tslib\";\r\nimport { combine, isUrlAbsolute, DefaultRuntime, stringIsNullOrEmpty, hOP, safeGlobal } from \"@pnp/common\";\r\n/**\r\n * Ensures that a given url is absolute for the current web based on context\r\n *\r\n * @param candidateUrl The url to make absolute\r\n *\r\n */\r\nexport function toAbsoluteUrl(candidateUrl, runtime = DefaultRuntime) {\r\n    var _a, _b;\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        if (isUrlAbsolute(candidateUrl)) {\r\n            // if we are already absolute, then just return the url\r\n            return candidateUrl;\r\n        }\r\n        const baseUrl = (_a = runtime.get(\"sp\")) === null || _a === void 0 ? void 0 : _a.baseUrl;\r\n        const fetchClientFactory = (_b = runtime.get(\"sp\")) === null || _b === void 0 ? void 0 : _b.fetchClientFactory;\r\n        if (!stringIsNullOrEmpty(baseUrl)) {\r\n            // base url specified either with baseUrl of spfxContext config property\r\n            return combine(baseUrl, candidateUrl);\r\n        }\r\n        // use a passed context if provided, if not see if we get one from the current runtime\r\n        const context = runtime.get(\"spfxContext\");\r\n        if (context) {\r\n            return combine(context.pageContext.web.absoluteUrl, candidateUrl);\r\n        }\r\n        // to make the existing node client work in a backwards compatible way we do the following (hacky thing)\r\n        // get the client\r\n        // see if it has a siteUrl property\r\n        // use that to absolute the url\r\n        if (fetchClientFactory) {\r\n            const tempClient = fetchClientFactory();\r\n            if (hOP(tempClient, \"siteUrl\")) {\r\n                return combine(tempClient.siteUrl, candidateUrl);\r\n            }\r\n        }\r\n        if (safeGlobal._spPageContextInfo !== undefined) {\r\n            // operating in classic pages\r\n            if (hOP(safeGlobal._spPageContextInfo, \"webAbsoluteUrl\")) {\r\n                return combine(safeGlobal._spPageContextInfo.webAbsoluteUrl, candidateUrl);\r\n            }\r\n            else if (hOP(safeGlobal._spPageContextInfo, \"webServerRelativeUrl\")) {\r\n                return combine(safeGlobal._spPageContextInfo.webServerRelativeUrl, candidateUrl);\r\n            }\r\n        }\r\n        // does window.location exist and have a certain path part in it?\r\n        if (safeGlobal.location !== undefined) {\r\n            const location = safeGlobal.location.toString().toLowerCase();\r\n            [\"/_layouts/\", \"/siteassets/\", \"/sitepages/\"].forEach((s) => {\r\n                const index = location.indexOf(s);\r\n                if (index > 0) {\r\n                    return combine(location.substr(0, index), candidateUrl);\r\n                }\r\n            });\r\n        }\r\n        return candidateUrl;\r\n    });\r\n}\r\n//# sourceMappingURL=toabsoluteurl.js.map","import { Web } from \"./types.js\";\r\nimport { SPRest } from \"../rest.js\";\r\nexport { Web, Webs, } from \"./types.js\";\r\nReflect.defineProperty(SPRest.prototype, \"web\", {\r\n    configurable: true,\r\n    enumerable: true,\r\n    get: function () {\r\n        return this.childConfigHook(({ options, baseUrl, runtime }) => {\r\n            return Web(baseUrl).configure(options).setRuntime(runtime);\r\n        });\r\n    },\r\n});\r\nSPRest.prototype.createBatch = function () {\r\n    return this.web.createBatch();\r\n};\r\n//# sourceMappingURL=index.js.map","import { __awaiter, __decorate } from \"tslib\";\r\nimport { assign } from \"@pnp/common\";\r\nimport { body, headers } from \"@pnp/odata\";\r\nimport { _SharePointQueryableInstance, SharePointQueryableCollection, _SharePointQueryableCollection, spInvokableFactory, SharePointQueryableInstance, deleteable, } from \"../sharepointqueryable.js\";\r\nimport { defaultPath } from \"../decorators.js\";\r\nimport { odataUrlFrom } from \"../odata.js\";\r\nimport { SPBatch } from \"../batch.js\";\r\nimport { metadata } from \"../utils/metadata.js\";\r\nimport { Site } from \"../sites/index.js\";\r\nimport { spPost, spGet } from \"../operations.js\";\r\nimport { escapeQueryStrValue } from \"../utils/escapeQueryStrValue.js\";\r\nimport { tag } from \"../telemetry.js\";\r\nlet _Webs = class _Webs extends _SharePointQueryableCollection {\r\n    /**\r\n     * Adds a new web to the collection\r\n     *\r\n     * @param title The new web's title\r\n     * @param url The new web's relative url\r\n     * @param description The new web's description\r\n     * @param template The new web's template internal name (default = STS)\r\n     * @param language The locale id that specifies the new web's language (default = 1033 [English, US])\r\n     * @param inheritPermissions When true, permissions will be inherited from the new web's parent (default = true)\r\n     */\r\n    add(title, url, description = \"\", template = \"STS\", language = 1033, inheritPermissions = true) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const postBody = body({\r\n                \"parameters\": assign(metadata(\"SP.WebCreationInformation\"), {\r\n                    Description: description,\r\n                    Language: language,\r\n                    Title: title,\r\n                    Url: url,\r\n                    UseSamePermissionsAsParentSite: inheritPermissions,\r\n                    WebTemplate: template,\r\n                }),\r\n            });\r\n            const data = yield spPost(this.clone(Webs, \"add\"), postBody);\r\n            return {\r\n                data,\r\n                web: Web(odataUrlFrom(data).replace(/_api\\/web\\/?/i, \"\")),\r\n            };\r\n        });\r\n    }\r\n};\r\n__decorate([\r\n    tag(\"ws.add\")\r\n], _Webs.prototype, \"add\", null);\r\n_Webs = __decorate([\r\n    defaultPath(\"webs\")\r\n], _Webs);\r\nexport { _Webs };\r\nexport const Webs = spInvokableFactory(_Webs);\r\n/**\r\n * Describes a web\r\n *\r\n */\r\nlet _Web = class _Web extends _SharePointQueryableInstance {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.delete = deleteable(\"w\");\r\n    }\r\n    /**\r\n     * Gets this web's subwebs\r\n     *\r\n     */\r\n    get webs() {\r\n        return Webs(this);\r\n    }\r\n    /**\r\n     * Allows access to the web's all properties collection\r\n     */\r\n    get allProperties() {\r\n        return tag.configure(this.clone(SharePointQueryableInstance, \"allproperties\"), \"w.allprops\");\r\n    }\r\n    /**\r\n     * Gets a collection of WebInfos for this web's subwebs\r\n     *\r\n     */\r\n    get webinfos() {\r\n        return tag.configure(SharePointQueryableCollection(this, \"webinfos\"), \"w.webinfos\");\r\n    }\r\n    /**\r\n     * Gets this web's parent web and data\r\n     *\r\n     */\r\n    getParentWeb() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const { ParentWeb } = yield spGet(this.select(\"ParentWeb/Id\").expand(\"ParentWeb\"));\r\n            return (ParentWeb === null || ParentWeb === void 0 ? void 0 : ParentWeb.Id) ? Site(this.parentUrl).openWebById(ParentWeb.Id) : null;\r\n        });\r\n    }\r\n    /**\r\n     * Updates this web instance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the web\r\n     */\r\n    update(properties) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const postBody = body(assign(metadata(\"SP.Web\"), properties), headers({ \"X-HTTP-Method\": \"MERGE\" }));\r\n            const data = yield spPost(this, postBody);\r\n            return { data, web: this };\r\n        });\r\n    }\r\n    /**\r\n     * Applies the theme specified by the contents of each of the files specified in the arguments to the site\r\n     *\r\n     * @param colorPaletteUrl The server-relative URL of the color palette file\r\n     * @param fontSchemeUrl The server-relative URL of the font scheme\r\n     * @param backgroundImageUrl The server-relative URL of the background image\r\n     * @param shareGenerated When true, the generated theme files are stored in the root site. When false, they are stored in this web\r\n     */\r\n    applyTheme(colorPaletteUrl, fontSchemeUrl, backgroundImageUrl, shareGenerated) {\r\n        const postBody = body({\r\n            backgroundImageUrl,\r\n            colorPaletteUrl,\r\n            fontSchemeUrl,\r\n            shareGenerated,\r\n        });\r\n        return spPost(this.clone(Web, \"applytheme\"), postBody);\r\n    }\r\n    /**\r\n     * Applies the specified site definition or site template to the Web site that has no template applied to it\r\n     *\r\n     * @param template Name of the site definition or the name of the site template\r\n     */\r\n    applyWebTemplate(template) {\r\n        const q = this.clone(Web, \"applywebtemplate\");\r\n        q.concat(`(webTemplate='${escapeQueryStrValue(template)}')`);\r\n        return spPost(q);\r\n    }\r\n    /**\r\n         * Returns the collection of changes from the change log that have occurred within the list, based on the specified query\r\n         *\r\n         * @param query The change query\r\n         */\r\n    getChanges(query) {\r\n        const postBody = body({ \"query\": assign(metadata(\"SP.ChangeQuery\"), query) });\r\n        return spPost(this.clone(Web, \"getchanges\"), postBody);\r\n    }\r\n    /**\r\n     * Returns the name of the image file for the icon that is used to represent the specified file\r\n     *\r\n     * @param filename The file name. If this parameter is empty, the server returns an empty string\r\n     * @param size The size of the icon: 16x16 pixels = 0, 32x32 pixels = 1 (default = 0)\r\n     * @param progId The ProgID of the application that was used to create the file, in the form OLEServerName.ObjectName\r\n     */\r\n    mapToIcon(filename, size = 0, progId = \"\") {\r\n        return spGet(this.clone(Web, `maptoicon(filename='${escapeQueryStrValue(filename)}', progid='${escapeQueryStrValue(progId)}', size=${size})`));\r\n    }\r\n    /**\r\n     * Returns the tenant property corresponding to the specified key in the app catalog site\r\n     *\r\n     * @param key Id of storage entity to be set\r\n     */\r\n    getStorageEntity(key) {\r\n        return spGet(this.clone(Web, `getStorageEntity('${escapeQueryStrValue(key)}')`));\r\n    }\r\n    /**\r\n     * This will set the storage entity identified by the given key (MUST be called in the context of the app catalog)\r\n     *\r\n     * @param key Id of storage entity to be set\r\n     * @param value Value of storage entity to be set\r\n     * @param description Description of storage entity to be set\r\n     * @param comments Comments of storage entity to be set\r\n     */\r\n    setStorageEntity(key, value, description = \"\", comments = \"\") {\r\n        return spPost(this.clone(Web, \"setStorageEntity\"), body({\r\n            comments,\r\n            description,\r\n            key,\r\n            value,\r\n        }));\r\n    }\r\n    /**\r\n     * This will remove the storage entity identified by the given key\r\n     *\r\n     * @param key Id of storage entity to be removed\r\n     */\r\n    removeStorageEntity(key) {\r\n        return spPost(this.clone(Web, `removeStorageEntity('${escapeQueryStrValue(key)}')`));\r\n    }\r\n    /**\r\n    * Returns a collection of objects that contain metadata about subsites of the current site in which the current user is a member.\r\n    *\r\n    * @param nWebTemplateFilter Specifies the site definition (default = -1)\r\n    * @param nConfigurationFilter A 16-bit integer that specifies the identifier of a configuration (default = -1)\r\n    */\r\n    getSubwebsFilteredForCurrentUser(nWebTemplateFilter = -1, nConfigurationFilter = -1) {\r\n        const o = this.clone(SharePointQueryableCollection, `getSubwebsFilteredForCurrentUser(nWebTemplateFilter=${nWebTemplateFilter},nConfigurationFilter=${nConfigurationFilter})`);\r\n        return tag.configure(o, \"w.getSubwebsFilteredForCurrentUser\");\r\n    }\r\n    /**\r\n     * Creates a new batch for requests within the context of this web\r\n     *\r\n     */\r\n    createBatch() {\r\n        return new SPBatch(this.parentUrl, this.getRuntime());\r\n    }\r\n    /**\r\n     * Returns a collection of site templates available for the site\r\n     *\r\n     * @param language The locale id of the site templates to retrieve (default = 1033 [English, US])\r\n     * @param includeCrossLanguage When true, includes language-neutral site templates; otherwise false (default = true)\r\n     */\r\n    availableWebTemplates(language = 1033, includeCrossLanugage = true) {\r\n        const path = `getavailablewebtemplates(lcid=${language}, doincludecrosslanguage=${includeCrossLanugage})`;\r\n        return tag.configure(SharePointQueryableCollection(this, path), \"w.availableWebTemplates\");\r\n    }\r\n};\r\n__decorate([\r\n    tag(\"w.getParentWeb\")\r\n], _Web.prototype, \"getParentWeb\", null);\r\n__decorate([\r\n    tag(\"w.update\")\r\n], _Web.prototype, \"update\", null);\r\n__decorate([\r\n    tag(\"w.applyTheme\")\r\n], _Web.prototype, \"applyTheme\", null);\r\n__decorate([\r\n    tag(\"w.applyWebTemplate\")\r\n], _Web.prototype, \"applyWebTemplate\", null);\r\n__decorate([\r\n    tag(\"w.getChanges\")\r\n], _Web.prototype, \"getChanges\", null);\r\n__decorate([\r\n    tag(\"w.mapToIcon\")\r\n], _Web.prototype, \"mapToIcon\", null);\r\n__decorate([\r\n    tag(\"w.getStorageEntity\")\r\n], _Web.prototype, \"getStorageEntity\", null);\r\n__decorate([\r\n    tag(\"w.setStorageEntity\")\r\n], _Web.prototype, \"setStorageEntity\", null);\r\n__decorate([\r\n    tag(\"w.removeStorageEntity\")\r\n], _Web.prototype, \"removeStorageEntity\", null);\r\n_Web = __decorate([\r\n    defaultPath(\"_api/web\")\r\n], _Web);\r\nexport { _Web };\r\nexport const Web = spInvokableFactory(_Web);\r\n//# sourceMappingURL=types.js.map","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n  var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (process.env.NODE_ENV !== 'production') {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/** @license React v16.14.0\n * react.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nvar _assign = require('object-assign');\nvar checkPropTypes = require('prop-types/checkPropTypes');\n\nvar ReactVersion = '16.14.0';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\nvar MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\n/**\n * Keeps track of the current dispatcher.\n */\nvar ReactCurrentDispatcher = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\n/**\n * Keeps track of the current batch's configuration such as how long an update\n * should suspend for if it needs to.\n */\nvar ReactCurrentBatchConfig = {\n  suspense: null\n};\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nvar ReactCurrentOwner = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\nvar BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\nfunction describeComponentFrame (name, source, ownerName) {\n  var sourceInfo = '';\n\n  if (source) {\n    var path = source.fileName;\n    var fileName = path.replace(BEFORE_SLASH_RE, '');\n\n    {\n      // In DEV, include code for a common special case:\n      // prefer \"folder/index.js\" instead of just \"index.js\".\n      if (/^index\\./.test(fileName)) {\n        var match = path.match(BEFORE_SLASH_RE);\n\n        if (match) {\n          var pathBeforeSlash = match[1];\n\n          if (pathBeforeSlash) {\n            var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\n            fileName = folderName + '/' + fileName;\n          }\n        }\n      }\n    }\n\n    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\n  } else if (ownerName) {\n    sourceInfo = ' (created by ' + ownerName + ')';\n  }\n\n  return '\\n    in ' + (name || 'Unknown') + sourceInfo;\n}\n\nvar Resolved = 1;\nfunction refineResolvedLazyComponent(lazyComponent) {\n  return lazyComponent._status === Resolved ? lazyComponent._result : null;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var functionName = innerType.displayName || innerType.name || '';\n  return outerType.displayName || (functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName);\n}\n\nfunction getComponentName(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return \"Profiler\";\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        return 'Context.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        return 'Context.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        return getComponentName(type.type);\n\n      case REACT_BLOCK_TYPE:\n        return getComponentName(type.render);\n\n      case REACT_LAZY_TYPE:\n        {\n          var thenable = type;\n          var resolvedThenable = refineResolvedLazyComponent(thenable);\n\n          if (resolvedThenable) {\n            return getComponentName(resolvedThenable);\n          }\n\n          break;\n        }\n    }\n  }\n\n  return null;\n}\n\nvar ReactDebugCurrentFrame = {};\nvar currentlyValidatingElement = null;\nfunction setCurrentlyValidatingElement(element) {\n  {\n    currentlyValidatingElement = element;\n  }\n}\n\n{\n  // Stack implementation injected by the current renderer.\n  ReactDebugCurrentFrame.getCurrentStack = null;\n\n  ReactDebugCurrentFrame.getStackAddendum = function () {\n    var stack = ''; // Add an extra top frame while an element is being validated\n\n    if (currentlyValidatingElement) {\n      var name = getComponentName(currentlyValidatingElement.type);\n      var owner = currentlyValidatingElement._owner;\n      stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner.type));\n    } // Delegate to the injected renderer-specific implementation\n\n\n    var impl = ReactDebugCurrentFrame.getCurrentStack;\n\n    if (impl) {\n      stack += impl() || '';\n    }\n\n    return stack;\n  };\n}\n\n/**\n * Used by act() to track whether you're inside an act() scope.\n */\nvar IsSomeRendererActing = {\n  current: false\n};\n\nvar ReactSharedInternals = {\n  ReactCurrentDispatcher: ReactCurrentDispatcher,\n  ReactCurrentBatchConfig: ReactCurrentBatchConfig,\n  ReactCurrentOwner: ReactCurrentOwner,\n  IsSomeRendererActing: IsSomeRendererActing,\n  // Used by renderers to avoid bundling object-assign twice in UMD bundles:\n  assign: _assign\n};\n\n{\n  _assign(ReactSharedInternals, {\n    // These should not be included in production.\n    ReactDebugCurrentFrame: ReactDebugCurrentFrame,\n    // Shim for React DOM 16.0.0 which still destructured (but not used) this.\n    // TODO: remove in React 17.0.\n    ReactComponentTreeHook: {}\n  });\n}\n\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nfunction warn(format) {\n  {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    printWarning('warn', format, args);\n  }\n}\nfunction error(format) {\n  {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    printWarning('error', format, args);\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var hasExistingStack = args.length > 0 && typeof args[args.length - 1] === 'string' && args[args.length - 1].indexOf('\\n    in') === 0;\n\n    if (!hasExistingStack) {\n      var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n      var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n      if (stack !== '') {\n        format += '%s';\n        args = args.concat([stack]);\n      }\n    }\n\n    var argsWithFormat = args.map(function (item) {\n      return '' + item;\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      var argIndex = 0;\n      var message = 'Warning: ' + format.replace(/%s/g, function () {\n        return args[argIndex++];\n      });\n      throw new Error(message);\n    } catch (x) {}\n  }\n}\n\nvar didWarnStateUpdateForUnmountedComponent = {};\n\nfunction warnNoop(publicInstance, callerName) {\n  {\n    var _constructor = publicInstance.constructor;\n    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';\n    var warningKey = componentName + \".\" + callerName;\n\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n      return;\n    }\n\n    error(\"Can't call %s on a component that is not yet mounted. \" + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);\n\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n  }\n}\n/**\n * This is the abstract API for an update queue.\n */\n\n\nvar ReactNoopUpdateQueue = {\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance, callback, callerName) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState, callback, callerName) {\n    warnNoop(publicInstance, 'setState');\n  }\n};\n\nvar emptyObject = {};\n\n{\n  Object.freeze(emptyObject);\n}\n/**\n * Base class helpers for the updating state of a component.\n */\n\n\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the\n  // renderer.\n\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nComponent.prototype.isReactComponent = {};\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\n\nComponent.prototype.setState = function (partialState, callback) {\n  if (!(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null)) {\n    {\n      throw Error( \"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\" );\n    }\n  }\n\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\n};\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\n\n\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n};\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\n\n\n{\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n\n  var defineDeprecationWarning = function (methodName, info) {\n    Object.defineProperty(Component.prototype, methodName, {\n      get: function () {\n        warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n\n        return undefined;\n      }\n    });\n  };\n\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nfunction ComponentDummy() {}\n\nComponentDummy.prototype = Component.prototype;\n/**\n * Convenience component with default shallow equality check for sCU.\n */\n\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nvar pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\npureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.\n\n_assign(pureComponentPrototype, Component.prototype);\n\npureComponentPrototype.isPureReactComponent = true;\n\n// an immutable object with a single mutable value\nfunction createRef() {\n  var refObject = {\n    current: null\n  };\n\n  {\n    Object.seal(refObject);\n  }\n\n  return refObject;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  var warnAboutAccessingKey = function () {\n    {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  var warnAboutAccessingRef = function () {\n    {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true\n  });\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {\n      var componentName = getComponentName(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://fb.me/react-strict-mode-string-ref', getComponentName(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */\n\nfunction createElement(type, config, children) {\n  var propName; // Reserved names are extracted\n\n  var props = {};\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n\n      {\n        warnIfStringRefCannotBeAutoConverted(config);\n      }\n    }\n\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n\n    props.children = childArray;\n  } // Resolve default props\n\n\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  {\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n  }\n\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n  return newElement;\n}\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */\n\nfunction cloneElement(element, config, children) {\n  if (!!(element === null || element === undefined)) {\n    {\n      throw Error( \"React.cloneElement(...): The argument must be a React element, but you passed \" + element + \".\" );\n    }\n  }\n\n  var propName; // Original props are copied\n\n  var props = _assign({}, element.props); // Reserved names are extracted\n\n\n  var key = element.key;\n  var ref = element.ref; // Self is preserved since the owner is preserved.\n\n  var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n\n  var source = element._source; // Owner will be preserved, unless ref is overridden\n\n  var owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    } // Remaining properties override existing props\n\n\n    var defaultProps;\n\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\n\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = ('' + key).replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n  return '$' + escapedString;\n}\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\n\nvar didWarnAboutMaps = false;\nvar userProvidedKeyEscapeRegex = /\\/+/g;\n\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');\n}\n\nvar POOL_SIZE = 10;\nvar traverseContextPool = [];\n\nfunction getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {\n  if (traverseContextPool.length) {\n    var traverseContext = traverseContextPool.pop();\n    traverseContext.result = mapResult;\n    traverseContext.keyPrefix = keyPrefix;\n    traverseContext.func = mapFunction;\n    traverseContext.context = mapContext;\n    traverseContext.count = 0;\n    return traverseContext;\n  } else {\n    return {\n      result: mapResult,\n      keyPrefix: keyPrefix,\n      func: mapFunction,\n      context: mapContext,\n      count: 0\n    };\n  }\n}\n\nfunction releaseTraverseContext(traverseContext) {\n  traverseContext.result = null;\n  traverseContext.keyPrefix = null;\n  traverseContext.func = null;\n  traverseContext.context = null;\n  traverseContext.count = 0;\n\n  if (traverseContextPool.length < POOL_SIZE) {\n    traverseContextPool.push(traverseContext);\n  }\n}\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\n\n\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  var invokeCallback = false;\n\n  if (children === null) {\n    invokeCallback = true;\n  } else {\n    switch (type) {\n      case 'string':\n      case 'number':\n        invokeCallback = true;\n        break;\n\n      case 'object':\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = true;\n        }\n\n    }\n  }\n\n  if (invokeCallback) {\n    callback(traverseContext, children, // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows.\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n\n    if (typeof iteratorFn === 'function') {\n\n      {\n        // Warn about using Maps as children\n        if (iteratorFn === children.entries) {\n          if (!didWarnAboutMaps) {\n            warn('Using Maps as children is deprecated and will be removed in ' + 'a future major release. Consider converting children to ' + 'an array of keyed ReactElements instead.');\n          }\n\n          didWarnAboutMaps = true;\n        }\n      }\n\n      var iterator = iteratorFn.call(children);\n      var step;\n      var ii = 0;\n\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getComponentKey(child, ii++);\n        subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n      }\n    } else if (type === 'object') {\n      var addendum = '';\n\n      {\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();\n      }\n\n      var childrenString = '' + children;\n\n      {\n        {\n          throw Error( \"Objects are not valid as a React child (found: \" + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + \").\" + addendum );\n        }\n      }\n    }\n  }\n\n  return subtreeCount;\n}\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\n\n\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\n\n\nfunction getComponentKey(component, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (typeof component === 'object' && component !== null && component.key != null) {\n    // Explicit key\n    return escape(component.key);\n  } // Implicit key determined by the index in the set\n\n\n  return index.toString(36);\n}\n\nfunction forEachSingleChild(bookKeeping, child, name) {\n  var func = bookKeeping.func,\n      context = bookKeeping.context;\n  func.call(context, child, bookKeeping.count++);\n}\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\n\n\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  if (children == null) {\n    return children;\n  }\n\n  var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\n  releaseTraverseContext(traverseContext);\n}\n\nfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\n  var result = bookKeeping.result,\n      keyPrefix = bookKeeping.keyPrefix,\n      func = bookKeeping.func,\n      context = bookKeeping.context;\n  var mappedChild = func.call(context, child, bookKeeping.count++);\n\n  if (Array.isArray(mappedChild)) {\n    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, function (c) {\n      return c;\n    });\n  } else if (mappedChild != null) {\n    if (isValidElement(mappedChild)) {\n      mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as\n      // traverseAllChildren used to do for objects as children\n      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);\n    }\n\n    result.push(mappedChild);\n  }\n}\n\nfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n  var escapedPrefix = '';\n\n  if (prefix != null) {\n    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n  }\n\n  var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n  releaseTraverseContext(traverseContext);\n}\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n *\n * The provided mapFunction(child, key, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\n\n\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n  return result;\n}\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\n\n\nfunction countChildren(children) {\n  return traverseAllChildren(children, function () {\n    return null;\n  }, null);\n}\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n */\n\n\nfunction toArray(children) {\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, function (child) {\n    return child;\n  });\n  return result;\n}\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\n\n\nfunction onlyChild(children) {\n  if (!isValidElement(children)) {\n    {\n      throw Error( \"React.Children.only expected to receive a single React element child.\" );\n    }\n  }\n\n  return children;\n}\n\nfunction createContext(defaultValue, calculateChangedBits) {\n  if (calculateChangedBits === undefined) {\n    calculateChangedBits = null;\n  } else {\n    {\n      if (calculateChangedBits !== null && typeof calculateChangedBits !== 'function') {\n        error('createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits);\n      }\n    }\n  }\n\n  var context = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    _calculateChangedBits: calculateChangedBits,\n    // As a workaround to support multiple concurrent renderers, we categorize\n    // some renderers as primary and others as secondary. We only expect\n    // there to be two concurrent renderers at most: React Native (primary) and\n    // Fabric (secondary); React DOM (primary) and React ART (secondary).\n    // Secondary renderers store their context values on separate fields.\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    // Used to track how many concurrent renderers this context currently\n    // supports within in a single renderer. Such as parallel server rendering.\n    _threadCount: 0,\n    // These are circular\n    Provider: null,\n    Consumer: null\n  };\n  context.Provider = {\n    $$typeof: REACT_PROVIDER_TYPE,\n    _context: context\n  };\n  var hasWarnedAboutUsingNestedContextConsumers = false;\n  var hasWarnedAboutUsingConsumerProvider = false;\n\n  {\n    // A separate object, but proxies back to the original context object for\n    // backwards compatibility. It has a different $$typeof, so we can properly\n    // warn for the incorrect usage of Context as a Consumer.\n    var Consumer = {\n      $$typeof: REACT_CONTEXT_TYPE,\n      _context: context,\n      _calculateChangedBits: context._calculateChangedBits\n    }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here\n\n    Object.defineProperties(Consumer, {\n      Provider: {\n        get: function () {\n          if (!hasWarnedAboutUsingConsumerProvider) {\n            hasWarnedAboutUsingConsumerProvider = true;\n\n            error('Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');\n          }\n\n          return context.Provider;\n        },\n        set: function (_Provider) {\n          context.Provider = _Provider;\n        }\n      },\n      _currentValue: {\n        get: function () {\n          return context._currentValue;\n        },\n        set: function (_currentValue) {\n          context._currentValue = _currentValue;\n        }\n      },\n      _currentValue2: {\n        get: function () {\n          return context._currentValue2;\n        },\n        set: function (_currentValue2) {\n          context._currentValue2 = _currentValue2;\n        }\n      },\n      _threadCount: {\n        get: function () {\n          return context._threadCount;\n        },\n        set: function (_threadCount) {\n          context._threadCount = _threadCount;\n        }\n      },\n      Consumer: {\n        get: function () {\n          if (!hasWarnedAboutUsingNestedContextConsumers) {\n            hasWarnedAboutUsingNestedContextConsumers = true;\n\n            error('Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');\n          }\n\n          return context.Consumer;\n        }\n      }\n    }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty\n\n    context.Consumer = Consumer;\n  }\n\n  {\n    context._currentRenderer = null;\n    context._currentRenderer2 = null;\n  }\n\n  return context;\n}\n\nfunction lazy(ctor) {\n  var lazyType = {\n    $$typeof: REACT_LAZY_TYPE,\n    _ctor: ctor,\n    // React uses these fields to store the result.\n    _status: -1,\n    _result: null\n  };\n\n  {\n    // In production, this would just set it on the object.\n    var defaultProps;\n    var propTypes;\n    Object.defineProperties(lazyType, {\n      defaultProps: {\n        configurable: true,\n        get: function () {\n          return defaultProps;\n        },\n        set: function (newDefaultProps) {\n          error('React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          defaultProps = newDefaultProps; // Match production behavior more closely:\n\n          Object.defineProperty(lazyType, 'defaultProps', {\n            enumerable: true\n          });\n        }\n      },\n      propTypes: {\n        configurable: true,\n        get: function () {\n          return propTypes;\n        },\n        set: function (newPropTypes) {\n          error('React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          propTypes = newPropTypes; // Match production behavior more closely:\n\n          Object.defineProperty(lazyType, 'propTypes', {\n            enumerable: true\n          });\n        }\n      }\n    });\n  }\n\n  return lazyType;\n}\n\nfunction forwardRef(render) {\n  {\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n      error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');\n    } else if (typeof render !== 'function') {\n      error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);\n    } else {\n      if (render.length !== 0 && render.length !== 2) {\n        error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');\n      }\n    }\n\n    if (render != null) {\n      if (render.defaultProps != null || render.propTypes != null) {\n        error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');\n      }\n    }\n  }\n\n  return {\n    $$typeof: REACT_FORWARD_REF_TYPE,\n    render: render\n  };\n}\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction memo(type, compare) {\n  {\n    if (!isValidElementType(type)) {\n      error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);\n    }\n  }\n\n  return {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: compare === undefined ? null : compare\n  };\n}\n\nfunction resolveDispatcher() {\n  var dispatcher = ReactCurrentDispatcher.current;\n\n  if (!(dispatcher !== null)) {\n    {\n      throw Error( \"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\\n1. You might have mismatching versions of React and the renderer (such as React DOM)\\n2. You might be breaking the Rules of Hooks\\n3. You might have more than one copy of React in the same app\\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem.\" );\n    }\n  }\n\n  return dispatcher;\n}\n\nfunction useContext(Context, unstable_observedBits) {\n  var dispatcher = resolveDispatcher();\n\n  {\n    if (unstable_observedBits !== undefined) {\n      error('useContext() second argument is reserved for future ' + 'use in React. Passing it is not supported. ' + 'You passed: %s.%s', unstable_observedBits, typeof unstable_observedBits === 'number' && Array.isArray(arguments[2]) ? '\\n\\nDid you call array.map(useContext)? ' + 'Calling Hooks inside a loop is not supported. ' + 'Learn more at https://fb.me/rules-of-hooks' : '');\n    } // TODO: add a more generic warning for invalid values.\n\n\n    if (Context._context !== undefined) {\n      var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs\n      // and nobody should be using this in existing code.\n\n      if (realContext.Consumer === Context) {\n        error('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');\n      } else if (realContext.Provider === Context) {\n        error('Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');\n      }\n    }\n  }\n\n  return dispatcher.useContext(Context, unstable_observedBits);\n}\nfunction useState(initialState) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useState(initialState);\n}\nfunction useReducer(reducer, initialArg, init) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useReducer(reducer, initialArg, init);\n}\nfunction useRef(initialValue) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useRef(initialValue);\n}\nfunction useEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useEffect(create, deps);\n}\nfunction useLayoutEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useLayoutEffect(create, deps);\n}\nfunction useCallback(callback, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useCallback(callback, deps);\n}\nfunction useMemo(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useMemo(create, deps);\n}\nfunction useImperativeHandle(ref, create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useImperativeHandle(ref, create, deps);\n}\nfunction useDebugValue(value, formatterFn) {\n  {\n    var dispatcher = resolveDispatcher();\n    return dispatcher.useDebugValue(value, formatterFn);\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = getComponentName(ReactCurrentOwner.current.type);\n\n    if (name) {\n      return '\\n\\nCheck the render method of `' + name + '`.';\n    }\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  if (source !== undefined) {\n    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n    var lineNumber = source.lineNumber;\n    return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendumForProps(elementProps) {\n  if (elementProps !== null && elementProps !== undefined) {\n    return getSourceInfoErrorAddendum(elementProps.__source);\n  }\n\n  return '';\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  var info = getDeclarationErrorAddendum();\n\n  if (!info) {\n    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n    if (parentName) {\n      info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n    }\n  }\n\n  return info;\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  if (!element._store || element._store.validated || element.key != null) {\n    return;\n  }\n\n  element._store.validated = true;\n  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n    return;\n  }\n\n  ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n\n  var childOwner = '';\n\n  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n    // Give the component that originally created this child.\n    childOwner = \" It was passed a child from \" + getComponentName(element._owner.type) + \".\";\n  }\n\n  setCurrentlyValidatingElement(element);\n\n  {\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.', currentComponentErrorInfo, childOwner);\n  }\n\n  setCurrentlyValidatingElement(null);\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  if (typeof node !== 'object') {\n    return;\n  }\n\n  if (Array.isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n\n      if (isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (isValidElement(node)) {\n    // This element was passed in a valid location.\n    if (node._store) {\n      node._store.validated = true;\n    }\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n\n    if (typeof iteratorFn === 'function') {\n      // Entry iterators used to provide implicit keys,\n      // but now we print a separate warning for them later.\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step;\n\n        while (!(step = iterator.next()).done) {\n          if (isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var name = getComponentName(type);\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      setCurrentlyValidatingElement(element);\n      checkPropTypes(propTypes, element.props, 'prop', name, ReactDebugCurrentFrame.getStackAddendum);\n      setCurrentlyValidatingElement(null);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true;\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    setCurrentlyValidatingElement(fragment);\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n    }\n\n    setCurrentlyValidatingElement(null);\n  }\n}\nfunction createElementWithValidation(type, props, children) {\n  var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n  // succeed and there will likely be errors in render.\n\n  if (!validType) {\n    var info = '';\n\n    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n      info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n    }\n\n    var sourceInfo = getSourceInfoErrorAddendumForProps(props);\n\n    if (sourceInfo) {\n      info += sourceInfo;\n    } else {\n      info += getDeclarationErrorAddendum();\n    }\n\n    var typeString;\n\n    if (type === null) {\n      typeString = 'null';\n    } else if (Array.isArray(type)) {\n      typeString = 'array';\n    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n      typeString = \"<\" + (getComponentName(type.type) || 'Unknown') + \" />\";\n      info = ' Did you accidentally export a JSX literal instead of a component?';\n    } else {\n      typeString = typeof type;\n    }\n\n    {\n      error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n  }\n\n  var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.\n  // TODO: Drop this when these are no longer allowed as the type argument.\n\n  if (element == null) {\n    return element;\n  } // Skip key warning if the type isn't valid since our key validation logic\n  // doesn't expect a non-string/function type and can throw confusing errors.\n  // We don't want exception behavior to differ between dev and prod.\n  // (Rendering will throw with a helpful message and as soon as the type is\n  // fixed, the key warnings will appear.)\n\n\n  if (validType) {\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n  }\n\n  if (type === REACT_FRAGMENT_TYPE) {\n    validateFragmentProps(element);\n  } else {\n    validatePropTypes(element);\n  }\n\n  return element;\n}\nvar didWarnAboutDeprecatedCreateFactory = false;\nfunction createFactoryWithValidation(type) {\n  var validatedFactory = createElementWithValidation.bind(null, type);\n  validatedFactory.type = type;\n\n  {\n    if (!didWarnAboutDeprecatedCreateFactory) {\n      didWarnAboutDeprecatedCreateFactory = true;\n\n      warn('React.createFactory() is deprecated and will be removed in ' + 'a future major release. Consider using JSX ' + 'or use React.createElement() directly instead.');\n    } // Legacy hook: remove it\n\n\n    Object.defineProperty(validatedFactory, 'type', {\n      enumerable: false,\n      get: function () {\n        warn('Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\n\n        Object.defineProperty(this, 'type', {\n          value: type\n        });\n        return type;\n      }\n    });\n  }\n\n  return validatedFactory;\n}\nfunction cloneElementWithValidation(element, props, children) {\n  var newElement = cloneElement.apply(this, arguments);\n\n  for (var i = 2; i < arguments.length; i++) {\n    validateChildKeys(arguments[i], newElement.type);\n  }\n\n  validatePropTypes(newElement);\n  return newElement;\n}\n\n{\n\n  try {\n    var frozenObject = Object.freeze({});\n    var testMap = new Map([[frozenObject, null]]);\n    var testSet = new Set([frozenObject]); // This is necessary for Rollup to not consider these unused.\n    // https://github.com/rollup/rollup/issues/1771\n    // TODO: we can remove these if Rollup fixes the bug.\n\n    testMap.set(0, 0);\n    testSet.add(0);\n  } catch (e) {\n  }\n}\n\nvar createElement$1 =  createElementWithValidation ;\nvar cloneElement$1 =  cloneElementWithValidation ;\nvar createFactory =  createFactoryWithValidation ;\nvar Children = {\n  map: mapChildren,\n  forEach: forEachChildren,\n  count: countChildren,\n  toArray: toArray,\n  only: onlyChild\n};\n\nexports.Children = Children;\nexports.Component = Component;\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.PureComponent = PureComponent;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;\nexports.cloneElement = cloneElement$1;\nexports.createContext = createContext;\nexports.createElement = createElement$1;\nexports.createFactory = createFactory;\nexports.createRef = createRef;\nexports.forwardRef = forwardRef;\nexports.isValidElement = isValidElement;\nexports.lazy = lazy;\nexports.memo = memo;\nexports.useCallback = useCallback;\nexports.useContext = useContext;\nexports.useDebugValue = useDebugValue;\nexports.useEffect = useEffect;\nexports.useImperativeHandle = useImperativeHandle;\nexports.useLayoutEffect = useLayoutEffect;\nexports.useMemo = useMemo;\nexports.useReducer = useReducer;\nexports.useRef = useRef;\nexports.useState = useState;\nexports.version = ReactVersion;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","export * from \"./useListItems.hook\";\r\nexport * from \"./useListItems.hoc\";\r\n","import { SPRest } from \"@pnp/sp\";\r\nimport { ICamlQuery } from \"@pnp/sp/lists\";\r\n\r\nconst defaultQuery = `<View>\r\n\t<ViewFields>\r\n\t\t{ViewFields}\r\n\t</ViewFields>\r\n\t<RowLimit>{RowLimit}</RowLimit>\r\n\t<Query>\r\n\t\t{Query}\r\n\t</Query>\r\n</View>`;\r\n\r\nconst trimAll = (str: string) => str.replace(/\\s/g, \"\");\r\n\r\nexport function getCAMLQuery(\r\n\tviewFields: Array<string>,\r\n\trowLimit: number,\r\n\twhere: string\r\n): ICamlQuery {\r\n\tconst vf = viewFields.map((v) => `<FieldRef Name=\"${v}\"/>`).join(\"\");\r\n\r\n\tconst viewXML = trimAll(\r\n\t\tdefaultQuery.replace(\"{RowLimit}\", `${rowLimit || \"\"}`)\r\n\t)\r\n\t\t.replace(\"{ViewFields}\", vf)\r\n\t\t.replace(\"{Query}\", where);\r\n\r\n\treturn {\r\n\t\tViewXml: viewXML,\r\n\t};\r\n}\r\n\r\nexport async function executeCAMLQuery(\r\n\tspAdapter: SPRest,\r\n\tlistURl: string,\r\n\tquery: ICamlQuery\r\n): Promise<Array<any>> {\r\n\treturn spAdapter.web.getList(listURl).getItemsByCAMLQuery(query);\r\n}\r\n","import { SPRest } from \"@pnp/sp/presets/all\";\r\nimport * as React from \"react\";\r\nimport { getCAMLQuery, executeCAMLQuery } from \"./useListItems.core\";\r\n\r\ninterface IUseListItemsProps {\r\n\tspRestAdapter: SPRest;\r\n\tcomponent(\r\n\t\titems: Array<any>,\r\n\t\tisLoading: boolean,\r\n\t\terror: Error\r\n\t): React.ReactNode;\r\n\turl: string;\r\n\tviewfields: Array<string>;\r\n\trowlimit?: number;\r\n\twhere: string;\r\n}\r\n\r\ninterface IUseListItemsState {\r\n\titems: Array<any>;\r\n\tisLoading: boolean;\r\n\terror: Error;\r\n}\r\n\r\nexport class UseListItems extends React.PureComponent<\r\n\tIUseListItemsProps,\r\n\tIUseListItemsState\r\n> {\r\n\tstatic defaultProps: Pick<\r\n\t\tIUseListItemsProps,\r\n\t\t\"viewfields\" | \"rowlimit\" | \"where\"\r\n\t> = {\r\n\t\tviewfields: [],\r\n\t\trowlimit: 0,\r\n\t\twhere: \"\",\r\n\t};\r\n\tconstructor(props: IUseListItemsProps) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\titems: [],\r\n\t\t\tisLoading: true,\r\n\t\t\terror: null,\r\n\t\t};\r\n\t}\r\n\tasync componentDidMount() {\r\n\t\ttry {\r\n\t\t\tconst result = await executeCAMLQuery(\r\n\t\t\t\tthis.props.spRestAdapter,\r\n\t\t\t\tthis.props.url,\r\n\t\t\t\tgetCAMLQuery(\r\n\t\t\t\t\tthis.props.viewfields,\r\n\t\t\t\t\tthis.props.rowlimit,\r\n\t\t\t\t\tthis.props.where\r\n\t\t\t\t)\r\n\t\t\t);\r\n\r\n\t\t\tthis.setState(() => ({\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\titems: result,\r\n\t\t\t}));\r\n\t\t} catch (err) {\r\n\t\t\tthis.setState(() => ({\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\terror: err,\r\n\t\t\t}));\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\treturn this.props.component(\r\n\t\t\tthis.state.items,\r\n\t\t\tthis.state.isLoading,\r\n\t\t\tthis.state.error\r\n\t\t);\r\n\t}\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { SPRest } from \"@pnp/sp\";\r\nimport \"@pnp/sp/webs\";\r\nimport \"@pnp/sp/lists\";\r\n\r\nimport { getCAMLQuery, executeCAMLQuery } from \"./useListItems.core\";\r\n\r\nexport interface IUseListItemHookResult {\r\n\titems: Array<any>;\r\n\tisLoading: boolean;\r\n\terror: Error;\r\n}\r\n\r\nexport function useListItems(\r\n\tspRest: SPRest,\r\n\turl: string,\r\n\tviewfields: Array<string> = [],\r\n\trowlimit: number = 0,\r\n\twhere: string = \"\"\r\n): IUseListItemHookResult {\r\n\tconst [items, setItems] = useState<Array<any>>([]);\r\n\tconst [isLoading, setIsLoading] = useState<boolean>(true);\r\n\tconst [error, setError] = useState<Error>(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tlet isUnmounted = false;\r\n\r\n\t\tfunction handleItemsResponse(items: Array<any>) {\r\n\t\t\tif (isUnmounted) return;\r\n\t\t\tsetItems(items);\r\n\t\t\tsetIsLoading(false);\r\n\t\t}\r\n\r\n\t\tfunction handleCatchError(err: Error) {\r\n\t\t\tif (isUnmounted) return;\r\n\t\t\tsetError(err);\r\n\t\t\tsetIsLoading(false);\r\n\t\t}\r\n\t\texecuteCAMLQuery(spRest, url, getCAMLQuery(viewfields, rowlimit, where))\r\n\t\t\t.then(handleItemsResponse)\r\n\t\t\t.catch(handleCatchError);\r\n\r\n\t\treturn () => {\r\n\t\t\tisUnmounted = true;\r\n\t\t};\r\n\t}, [url, rowlimit, viewfields, where]);\r\n\r\n\treturn { items, isLoading, error };\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n// This entry module is referenced by other modules so it can't be inlined\n__webpack_require__(\"./src/useListItems/index.tsx\");\n"],"sourceRoot":""}